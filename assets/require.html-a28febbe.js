const e=JSON.parse(`{"key":"v-1b7cd46e","path":"/technology/ts_axios/chapter3/require.html","title":"需求分析","lang":"zh-CN","frontmatter":{"title":"需求分析","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"接下来的章节，我们会使用 TypeScript 来重构 axios，重构之前，我们需要简单地做一些需求分析，看一下我们这次重构需要支持哪些 feature。 Features 在浏览器端使用 XMLHttpRequest 对象通讯 支持 Promise API 支持请求和响应的拦截器 支持请求数据和响应数据的转换 支持请求的取消 JSON 数据的自动转换 客户端防止 XSRF 此外，我们还会支持一些 axios 库支持的一些其它的 feature。这里要注意的，我们这次重构不包括 axios 在 Node 中的实现，因为这部分我们在平时项目中应用的很少，还涉及到很多 Node.js 的知识，如果都讲的话，一是比较占用时间，另一个可能会喧宾夺主了。当然，这部分知识点我会根据同学们学习的反馈，如果大家很感兴趣想学习的话，我就作为课程的补充内容加到后期视频的扩展中，也当做课程的福利送给大家，所以大家务必要支持一下正版课程喔~","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter3/require.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"需求分析"}],["meta",{"property":"og:description","content":"接下来的章节，我们会使用 TypeScript 来重构 axios，重构之前，我们需要简单地做一些需求分析，看一下我们这次重构需要支持哪些 feature。 Features 在浏览器端使用 XMLHttpRequest 对象通讯 支持 Promise API 支持请求和响应的拦截器 支持请求数据和响应数据的转换 支持请求的取消 JSON 数据的自动转换 客户端防止 XSRF 此外，我们还会支持一些 axios 库支持的一些其它的 feature。这里要注意的，我们这次重构不包括 axios 在 Node 中的实现，因为这部分我们在平时项目中应用的很少，还涉及到很多 Node.js 的知识，如果都讲的话，一是比较占用时间，另一个可能会喧宾夺主了。当然，这部分知识点我会根据同学们学习的反馈，如果大家很感兴趣想学习的话，我就作为课程的补充内容加到后期视频的扩展中，也当做课程的福利送给大家，所以大家务必要支持一下正版课程喔~"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"需求分析\\",\\"description\\":\\"接下来的章节，我们会使用 TypeScript 来重构 axios，重构之前，我们需要简单地做一些需求分析，看一下我们这次重构需要支持哪些 feature。 Features 在浏览器端使用 XMLHttpRequest 对象通讯 支持 Promise API 支持请求和响应的拦截器 支持请求数据和响应数据的转换 支持请求的取消 JSON 数据的自动转换 客户端防止 XSRF 此外，我们还会支持一些 axios 库支持的一些其它的 feature。这里要注意的，我们这次重构不包括 axios 在 Node 中的实现，因为这部分我们在平时项目中应用的很少，还涉及到很多 Node.js 的知识，如果都讲的话，一是比较占用时间，另一个可能会喧宾夺主了。当然，这部分知识点我会根据同学们学习的反馈，如果大家很感兴趣想学习的话，我就作为课程的补充内容加到后期视频的扩展中，也当做课程的福利送给大家，所以大家务必要支持一下正版课程喔~\\"}"]]},"headers":[{"level":2,"title":"Features","slug":"features","link":"#features","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":1.08,"words":324},"filePathRelative":"technology/ts_axios/chapter3/require.md","localizedDate":"2023年1月11日","excerpt":"<p>接下来的章节，我们会使用 TypeScript 来重构 axios，重构之前，我们需要简单地做一些需求分析，看一下我们这次重构需要支持哪些 feature。</p>\\n<h2> Features</h2>\\n<ul>\\n<li>在浏览器端使用 XMLHttpRequest 对象通讯</li>\\n<li>支持 Promise API</li>\\n<li>支持请求和响应的拦截器</li>\\n<li>支持请求数据和响应数据的转换</li>\\n<li>支持请求的取消</li>\\n<li>JSON 数据的自动转换</li>\\n<li>客户端防止 XSRF</li>\\n</ul>\\n<p>此外，我们还会支持一些 axios 库支持的一些其它的 feature。这里要注意的，我们这次重构不包括 axios 在 Node 中的实现，因为这部分我们在平时项目中应用的很少，还涉及到很多 Node.js 的知识，如果都讲的话，一是比较占用时间，另一个可能会喧宾夺主了。当然，这部分知识点我会根据同学们学习的反馈，如果大家很感兴趣想学习的话，我就作为课程的补充内容加到后期视频的扩展中，也当做课程的福利送给大家，所以大家务必要支持一下正版课程喔~</p>","autoDesc":true}`);export{e as data};
