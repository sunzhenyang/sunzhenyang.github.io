import{_ as n,P as t,Q as r,Z as i,$ as e,a1 as o,a0 as l,a2 as a,G as c}from"./framework-7099b8bf.js";const d={},b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"},h=a('<br><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><ul><li><p>是一种基本数据类型</p></li><li><p>Symbol()函数会返回symbol类型的值，该类型具有静态属性和静态方法</p></li><li><p>静态属性会暴露几个内建的成员对象</p></li><li><p>静态方法会暴露全局的symbol注册，且类似于内建对象类</p></li><li><p>作为构造函数来说它并不完整，因为它不支持语法：<code>new Symbol()</code></p></li><li><p>每个从<code>Symbol()</code>返回的symbol值都是唯一的</p></li><li><p>一个symbol值能作为对象属性的标识符，这是该数据类型仅有的目的</p></li><li><p>语法：<code>Symbol([description])</code></p><ul><li>参数 <code>description</code>：字符串类型，对symbol的描述，可用于调试但不是访问symbol本身</li></ul></li></ul><br><h2 id="symbol-length" tabindex="-1"><a class="header-anchor" href="#symbol-length" aria-hidden="true">#</a> Symbol.length</h2><blockquote><p>长度属性，值为 0</p></blockquote><br>',7),p={id:"symbol-asynciterator",tabindex:"-1"},_=e("a",{class:"header-anchor",href:"#symbol-asynciterator","aria-hidden":"true"},"#",-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator",target:"_blank",rel:"noopener noreferrer"},y=e("br",null,null,-1),u={id:"symbol-hasinstance",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#symbol-hasinstance","aria-hidden":"true"},"#",-1),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",target:"_blank",rel:"noopener noreferrer"},k=e("br",null,null,-1),v={id:"symbol-isconcatspreadable",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#symbol-isconcatspreadable","aria-hidden":"true"},"#",-1),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable",target:"_blank",rel:"noopener noreferrer"},x=e("br",null,null,-1),N={id:"symbol-iterator",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#symbol-iterator","aria-hidden":"true"},"#",-1),j={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),J={id:"symbol-match",tabindex:"-1"},O=e("a",{class:"header-anchor",href:"#symbol-match","aria-hidden":"true"},"#",-1),R={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match",target:"_blank",rel:"noopener noreferrer"},W=e("br",null,null,-1),q={id:"symbol-matchall",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#symbol-matchall","aria-hidden":"true"},"#",-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll",target:"_blank",rel:"noopener noreferrer"},V=e("br",null,null,-1),w={id:"symbol-prototype-description",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#symbol-prototype-description","aria-hidden":"true"},"#",-1),E={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description",target:"_blank",rel:"noopener noreferrer"},P=e("br",null,null,-1),T={id:"symbol-replace",tabindex:"-1"},A=e("a",{class:"header-anchor",href:"#symbol-replace","aria-hidden":"true"},"#",-1),L={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace",target:"_blank",rel:"noopener noreferrer"},Q=e("br",null,null,-1),Z={id:"symbol-search",tabindex:"-1"},$=e("a",{class:"header-anchor",href:"#symbol-search","aria-hidden":"true"},"#",-1),D={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search",target:"_blank",rel:"noopener noreferrer"},H=e("br",null,null,-1),K={id:"symbol-species",tabindex:"-1"},M=e("a",{class:"header-anchor",href:"#symbol-species","aria-hidden":"true"},"#",-1),U={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species",target:"_blank",rel:"noopener noreferrer"},X=e("br",null,null,-1),Y={id:"symbol-split",tabindex:"-1"},ee=e("a",{class:"header-anchor",href:"#symbol-split","aria-hidden":"true"},"#",-1),oe={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split",target:"_blank",rel:"noopener noreferrer"},se=e("br",null,null,-1),le={id:"symbol-toprimitive",tabindex:"-1"},ae=e("a",{class:"header-anchor",href:"#symbol-toprimitive","aria-hidden":"true"},"#",-1),ne={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive",target:"_blank",rel:"noopener noreferrer"},te=e("br",null,null,-1),re={id:"symbol-tostringtag",tabindex:"-1"},ie=e("a",{class:"header-anchor",href:"#symbol-tostringtag","aria-hidden":"true"},"#",-1),ce={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",target:"_blank",rel:"noopener noreferrer"},de=e("br",null,null,-1),be={id:"symbol-unscopables",tabindex:"-1"},he=e("a",{class:"header-anchor",href:"#symbol-unscopables","aria-hidden":"true"},"#",-1),pe={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables",target:"_blank",rel:"noopener noreferrer"},_e=e("br",null,null,-1),me={id:"symbol-for",tabindex:"-1"},ye=e("a",{class:"header-anchor",href:"#symbol-for","aria-hidden":"true"},"#",-1),ue={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for",target:"_blank",rel:"noopener noreferrer"},fe=a("<ul><li>描述：根据给定的键 <code>key</code>，从运行时的 symbol 注册表中找到对应的 symbol</li><li>语法：<code>Symbol.for(key)</code></li><li>key：一个字符串，作为 symbol 注册表中与某 symbol 关联的键，同时也会作为该 symbol 的描述</li><li>返回值：返回由给定的 key 找到的 symbol，否则就是返回新创建的 symbol</li><li>注意 <ul><li>和 <code>Symbol()</code> 不同的是，用 <code>Symbol.for()</code> 方法创建的的 symbol 会被放入一个全局 symbol 注册表中</li><li><code>Symbol.for() 并不是每次都会创建一个新的 symbol</code>，它会首先检查给定的 key 是否已经在注册表中了。假如是，则会直接返回上次存储的那个。否则，它会再新建一个</li></ul></li></ul><br>",2),Se={id:"symbol-keyfor",tabindex:"-1"},ke=e("a",{class:"header-anchor",href:"#symbol-keyfor","aria-hidden":"true"},"#",-1),ve={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor",target:"_blank",rel:"noopener noreferrer"},ge=a(`<ul><li><p>描述：用来获取 symbol 注册表中与某个 symbol 关联的键</p></li><li><p>语法：<code>Symbol.keyFor(sym)</code></p></li><li><p>参数</p><ul><li>sym：存储在 symbol 注册表中的某个 symbol</li></ul></li><li><p>返回值</p><ul><li>如果全局注册表中查找到该symbol，则返回该symbol的key值，形式为string</li><li>如果symbol未在注册表中，返回undefined</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个 symbol 并放入 Symbol 注册表，key 为 &quot;foo&quot;</span>
<span class="token keyword">var</span> globalSym <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>globalSym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;foo&quot;</span>

<span class="token comment">// 创建一个 symbol，但不放入 symbol 注册表中</span>
<span class="token keyword">var</span> localSym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>localSym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined，所以是找不到 key 的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function ze(xe,Ne){const s=c("ExternalLinkIcon");return t(),r("div",null,[i(" more "),e("p",null,[e("a",b,[o("Symbol ( writing... )"),l(s)])]),h,e("h2",p,[_,o(),e("a",m,[o("Symbol.asyncIterator"),l(s)])]),y,e("h2",u,[f,o(),e("a",S,[o("Symbol.hasInstance"),l(s)])]),k,e("h2",v,[g,o(),e("a",z,[o("Symbol.isConcatSpreadable"),l(s)])]),x,e("h2",N,[C,o(),e("a",j,[o("Symbol.iterator"),l(s)])]),G,e("h2",J,[O,o(),e("a",R,[o("Symbol.match"),l(s)])]),W,e("h2",q,[I,o(),e("a",F,[o("Symbol.matchAll"),l(s)])]),V,e("h2",w,[B,o(),e("a",E,[o("Symbol.prototype.description"),l(s)])]),P,e("h2",T,[A,o(),e("a",L,[o("Symbol.replace"),l(s)])]),Q,e("h2",Z,[$,o(),e("a",D,[o("Symbol.search"),l(s)])]),H,e("h2",K,[M,o(),e("a",U,[o("Symbol.species"),l(s)])]),X,e("h2",Y,[ee,o(),e("a",oe,[o("Symbol.split"),l(s)])]),se,e("h2",le,[ae,o(),e("a",ne,[o("Symbol.toPrimitive"),l(s)])]),te,e("h2",re,[ie,o(),e("a",ce,[o("Symbol.toStringTag"),l(s)])]),de,e("h2",be,[he,o(),e("a",pe,[o("Symbol.unscopables"),l(s)])]),_e,e("h2",me,[ye,o(),e("a",ue,[o("Symbol.for()"),l(s)])]),fe,e("h2",Se,[ke,o(),e("a",ve,[o("Symbol.keyFor()"),l(s)])]),ge])}const je=n(d,[["render",ze],["__file","04.Symbol.html.vue"]]);export{je as default};
