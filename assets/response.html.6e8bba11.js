import{_ as p,o,c,a as n,b as t,e as a,d as s,r as i}from"./app.05e84ac7.js";const l={},u=a(`<h2 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h2><p>\u5728\u524D\u9762\u7684\u7AE0\u8282\u4E2D\uFF0C\u6211\u4EEC\u53D1\u9001\u7684\u8BF7\u6C42\u90FD\u53EF\u4EE5\u4ECE\u7F51\u7EDC\u5C42\u9762\u63A5\u6536\u5230\u670D\u52A1\u7AEF\u8FD4\u56DE\u7684\u6570\u636E\uFF0C\u4F46\u662F\u4EE3\u7801\u5C42\u9762\u5E76\u6CA1\u6709\u505A\u4EFB\u4F55\u5173\u4E8E\u8FD4\u56DE\u6570\u636E\u7684\u5904\u7406\u3002\u6211\u4EEC\u5E0C\u671B\u80FD\u5904\u7406\u670D\u52A1\u7AEF\u54CD\u5E94\u7684\u6570\u636E\uFF0C\u5E76\u652F\u6301 Promise \u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u5F0F\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u62FF\u5230 <code>res</code> \u5BF9\u8C61\uFF0C\u5E76\u4E14\u6211\u4EEC\u5E0C\u671B\u8BE5\u5BF9\u8C61\u5305\u62EC\uFF1A\u670D\u52A1\u7AEF\u8FD4\u56DE\u7684\u6570\u636E <code>data</code>\uFF0CHTTP \u72B6\u6001\u7801<code>status</code>\uFF0C\u72B6\u6001\u6D88\u606F <code>statusText</code>\uFF0C\u54CD\u5E94\u5934 <code>headers</code>\u3001\u8BF7\u6C42\u914D\u7F6E\u5BF9\u8C61 <code>config</code> \u4EE5\u53CA\u8BF7\u6C42\u7684 <code>XMLHttpRequest</code> \u5BF9\u8C61\u5B9E\u4F8B <code>request</code>\u3002</p><h2 id="\u5B9A\u4E49\u63A5\u53E3\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#\u5B9A\u4E49\u63A5\u53E3\u7C7B\u578B" aria-hidden="true">#</a> \u5B9A\u4E49\u63A5\u53E3\u7C7B\u578B</h2><p>\u6839\u636E\u9700\u6C42\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A <code>AxiosResponse</code> \u63A5\u53E3\u7C7B\u578B\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosResponse</span> <span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token builtin">any</span>
  status<span class="token operator">:</span> <span class="token builtin">number</span>
  statusText<span class="token operator">:</span> <span class="token builtin">string</span>
  headers<span class="token operator">:</span> <span class="token builtin">any</span>
  config<span class="token operator">:</span> AxiosRequestConfig
  request<span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C<code>axios</code> \u51FD\u6570\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A <code>Promise</code> \u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A <code>AxiosPromise</code> \u63A5\u53E3\uFF0C\u5B83\u7EE7\u627F\u4E8E <code>Promise&lt;AxiosResponse&gt;</code> \u8FD9\u4E2A\u6CDB\u578B\u63A5\u53E3\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosPromise</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">Promise</span><span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u7684\u8BDD\uFF0C\u5F53 <code>axios</code> \u8FD4\u56DE\u7684\u662F <code>AxiosPromise</code> \u7C7B\u578B\uFF0C\u90A3\u4E48 <code>resolve</code> \u51FD\u6570\u4E2D\u7684\u53C2\u6570\u5C31\u662F\u4E00\u4E2A <code>AxiosResponse</code> \u7C7B\u578B\u3002</p>`,10),r=s("\u5BF9\u4E8E\u4E00\u4E2A AJAX \u8BF7\u6C42\u7684 "),d=n("code",null,"response",-1),k=s("\uFF0C\u6211\u4EEC\u662F\u53EF\u4EE5\u6307\u5B9A\u5B83\u7684\u54CD\u5E94\u7684\u6570\u636E\u7C7B\u578B\u7684\uFF0C\u901A\u8FC7\u8BBE\u7F6E "),v=n("code",null,"XMLHttpRequest",-1),m=s(" \u5BF9\u8C61\u7684 "),b={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseType",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"responseType",-1),g=s(" \u5C5E\u6027\uFF0C\u4E8E\u662F\u6211\u4EEC\u53EF\u4EE5\u7ED9 "),y=n("code",null,"AxiosRequestConfig",-1),f=s(" \u7C7B\u578B\u6DFB\u52A0\u4E00\u4E2A\u53EF\u9009\u5C5E\u6027\uFF1A"),x=a(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosRequestConfig</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  responseType<span class="token operator">?</span><span class="token operator">:</span> XMLHttpRequestResponseType
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>responseType</code> \u7684\u7C7B\u578B\u662F\u4E00\u4E2A <code>XMLHttpRequestResponseType</code> \u7C7B\u578B\uFF0C\u5B83\u7684\u5B9A\u4E49\u662F <code>&quot;&quot; | &quot;arraybuffer&quot; | &quot;blob&quot; | &quot;document&quot; | &quot;json&quot; | &quot;text&quot;</code> \u5B57\u7B26\u4E32\u5B57\u9762\u91CF\u7C7B\u578B\u3002</p><h2 id="\u5B9E\u73B0\u83B7\u53D6\u54CD\u5E94\u6570\u636E\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u83B7\u53D6\u54CD\u5E94\u6570\u636E\u903B\u8F91" aria-hidden="true">#</a> \u5B9E\u73B0\u83B7\u53D6\u54CD\u5E94\u6570\u636E\u903B\u8F91</h2>`,3),_=s("\u9996\u5148\u6211\u4EEC\u8981\u5728 "),q=n("code",null,"xhr",-1),w=s(" \u51FD\u6570\u6DFB\u52A0 "),A={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/onreadystatechange",target:"_blank",rel:"noopener noreferrer"},R=n("code",null,"onreadystatechange",-1),T=s(" \u4E8B\u4EF6\u5904\u7406\u51FD\u6570\uFF0C\u5E76\u4E14\u8BA9 "),P=n("code",null,"xhr",-1),H=s(" \u51FD\u6570\u8FD4\u56DE\u7684\u662F "),L=n("code",null,"AxiosPromise",-1),C=s(" \u7C7B\u578B\u3002"),X=a(`<p><code>xhr.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">xhr</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> AxiosPromise <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> method <span class="token operator">=</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> headers<span class="token punctuation">,</span> responseType <span class="token punctuation">}</span> <span class="token operator">=</span> config

    <span class="token keyword">const</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>responseType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      request<span class="token punctuation">.</span>responseType <span class="token operator">=</span> responseType
    <span class="token punctuation">}</span>

    request<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>

    request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">const</span> responseHeaders <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">const</span> responseData <span class="token operator">=</span> responseType <span class="token operator">&amp;&amp;</span> responseType <span class="token operator">!==</span> <span class="token string">&#39;text&#39;</span> <span class="token operator">?</span> request<span class="token punctuation">.</span>response <span class="token operator">:</span> request<span class="token punctuation">.</span>responseText
      <span class="token keyword">const</span> response<span class="token operator">:</span> AxiosResponse <span class="token operator">=</span> <span class="token punctuation">{</span>
        data<span class="token operator">:</span> responseData<span class="token punctuation">,</span>
        status<span class="token operator">:</span> request<span class="token punctuation">.</span>status<span class="token punctuation">,</span>
        statusText<span class="token operator">:</span> request<span class="token punctuation">.</span>statusText<span class="token punctuation">,</span>
        headers<span class="token operator">:</span> responseHeaders<span class="token punctuation">,</span>
        config<span class="token punctuation">,</span>
        request
      <span class="token punctuation">}</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;content-type&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">delete</span> headers<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> headers<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    request<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u6211\u4EEC\u8FD9\u91CC\u8FD8\u5224\u65AD\u4E86\u5982\u679C <code>config</code> \u4E2D\u914D\u7F6E\u4E86 <code>responseType</code>\uFF0C\u6211\u4EEC\u628A\u5B83\u8BBE\u7F6E\u5230 <code>request.responseType</code> \u4E2D\u3002\u5728 <code>onreadystatechange</code> \u4E8B\u4EF6\u51FD\u6570\u4E2D\uFF0C\u6211\u4EEC\u6784\u9020\u4E86 <code>AxiosResponse</code> \u7C7B\u578B\u7684 <code>reponse</code> \u5BF9\u8C61\uFF0C\u5E76\u628A\u5B83 <code>resolve</code> \u51FA\u53BB\u3002</p><p>\u4FEE\u6539\u4E86 <code>xhr</code> \u51FD\u6570\uFF0C\u6211\u4EEC\u540C\u6837\u4E5F\u8981\u5BF9\u5E94\u4FEE\u6539 <code>axios</code> \u51FD\u6570\uFF1A</p><p><code>index.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">axios</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> AxiosPromise <span class="token punctuation">{</span>
  <span class="token function">processConfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token function">xhr</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u6211\u4EEC\u5C31\u5B9E\u73B0\u4E86 <code>axios</code> \u51FD\u6570\u7684 Promise \u5316\u3002</p><h2 id="demo-\u7F16\u5199" tabindex="-1"><a class="header-anchor" href="#demo-\u7F16\u5199" aria-hidden="true">#</a> demo \u7F16\u5199</h2><p>\u6211\u4EEC\u5728 <code>examples/base/app.ts</code> \u6587\u4EF6\u4E2D\u6DFB\u52A0 2 \u6BB5\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span>
  responseType<span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">4</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u6253\u5F00\u6D4F\u89C8\u5668\u8FD0\u884C demo\uFF0C\u770B\u4E00\u4E0B\u7ED3\u679C\uFF0C\u53D1\u73B0\u6211\u4EEC\u53EF\u4EE5\u6B63\u5E38 log \u51FA\u8FD9\u4E2A <code>res</code> \u53D8\u91CF\uFF0C\u5B83\u5305\u542B <code>AxiosResponse</code> \u7C7B\u578B\u4E2D\u5B9A\u4E49\u7684\u90A3\u4E9B\u5C5E\u6027\uFF0C\u4E0D\u8FC7\u6211\u4EEC\u53D1\u73B0 2 \u4E2A\u5C0F\u95EE\u9898\uFF1A\u7B2C\u4E00\u4E2A\u662F <code>headers</code> \u5C5E\u6027\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u5B83\u89E3\u6790\u6210\u5BF9\u8C61\u7C7B\u578B\uFF1B\u7B2C\u4E8C\u4E2A\u662F\u5728\u7B2C\u4E00\u4E2A\u8BF7\u6C42\u4E2D\uFF0C\u5F97\u5230\u7684\u6570\u636E\u662F\u4E00\u4E2A JSON \u5B57\u7B26\u4E32\uFF0C\u6211\u4EEC\u4E5F\u9700\u8981\u628A\u5B83\u8F6C\u6362\u6210\u5BF9\u8C61\u7C7B\u578B\u3002</p><p>\u90A3\u4E48\u4E0B\u4E00\u5C0F\u8282\uFF0C\u6211\u4EEC\u5C06\u6765\u89E3\u51B3\u7B2C\u4E00\u4E2A\u95EE\u9898\uFF0C\u5BF9\u4E8E\u54CD\u5E94\u7684 <code>header</code> \u505A\u5904\u7406\u3002</p>`,12);function M(N,S){const e=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[r,d,k,v,m,n("a",b,[h,t(e)]),g,y,f]),x,n("p",null,[_,q,w,n("a",A,[R,t(e)]),T,P,H,L,C]),X])}var I=p(l,[["render",M],["__file","response.html.vue"]]);export{I as default};
