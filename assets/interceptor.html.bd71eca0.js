import{_ as p,o,c,a as n,b as i,e as s,d as a,r as l}from"./app.02d2b54f.js";const u={},r=s(`<h2 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h2><p>\u6211\u4EEC\u5E0C\u671B\u80FD\u5BF9\u8BF7\u6C42\u7684\u53D1\u9001\u548C\u54CD\u5E94\u505A\u62E6\u622A\uFF0C\u4E5F\u5C31\u662F\u5728\u53D1\u9001\u8BF7\u6C42\u4E4B\u524D\u548C\u63A5\u6536\u5230\u54CD\u5E94\u4E4B\u540E\u505A\u4E00\u4E9B\u989D\u5916\u903B\u8F91\u3002</p><p>\u6211\u4EEC\u5E0C\u671B\u8BBE\u8BA1\u7684\u62E6\u622A\u5668\u7684\u4F7F\u7528\u65B9\u5F0F\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5728\u53D1\u9001\u8BF7\u6C42\u4E4B\u524D\u53EF\u4EE5\u505A\u4E00\u4E9B\u4E8B\u60C5</span>
  <span class="token keyword">return</span> config<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u8BF7\u6C42\u9519\u8BEF</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A\u54CD\u5E94\u62E6\u622A\u5668</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u54CD\u5E94\u6570\u636E</span>
  <span class="token keyword">return</span> response<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u54CD\u5E94\u9519\u8BEF</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>axios</code> \u5BF9\u8C61\u4E0A\u6709\u4E00\u4E2A <code>interceptors</code> \u5BF9\u8C61\u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u53C8\u6709 <code>request</code> \u548C <code>response</code> 2 \u4E2A\u5C5E\u6027\uFF0C\u5B83\u4EEC\u90FD\u6709\u4E00\u4E2A <code>use</code> \u65B9\u6CD5\uFF0C<code>use</code> \u65B9\u6CD5\u652F\u6301 2 \u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u7C7B\u4F3C Promise \u7684 <code>resolve</code> \u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u7C7B\u4F3C Promise \u7684 <code>reject</code> \u51FD\u6570\u3002\u6211\u4EEC\u53EF\u4EE5\u5728 <code>resolve</code> \u51FD\u6570\u548C <code>reject</code> \u51FD\u6570\u4E2D\u6267\u884C\u540C\u6B65\u4EE3\u7801\u6216\u8005\u662F\u5F02\u6B65\u4EE3\u7801\u903B\u8F91\u3002</p><p>\u5E76\u4E14\u6211\u4EEC\u662F\u53EF\u4EE5\u6DFB\u52A0\u591A\u4E2A\u62E6\u622A\u5668\u7684\uFF0C\u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F\u662F\u94FE\u5F0F\u4F9D\u6B21\u6267\u884C\u7684\u65B9\u5F0F\u3002\u5BF9\u4E8E <code>request</code> \u62E6\u622A\u5668\uFF0C\u540E\u6DFB\u52A0\u7684\u62E6\u622A\u5668\u4F1A\u5728\u8BF7\u6C42\u524D\u7684\u8FC7\u7A0B\u4E2D\u5148\u6267\u884C\uFF1B\u5BF9\u4E8E <code>response</code> \u62E6\u622A\u5668\uFF0C\u5148\u6DFB\u52A0\u7684\u62E6\u622A\u5668\u4F1A\u5728\u54CD\u5E94\u540E\u5148\u6267\u884C\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>test <span class="token operator">+=</span> <span class="token string">&#39;1&#39;</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>test <span class="token operator">+=</span> <span class="token string">&#39;2&#39;</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5916\uFF0C\u6211\u4EEC\u4E5F\u53EF\u4EE5\u652F\u6301\u5220\u9664\u67D0\u4E2A\u62E6\u622A\u5668\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> myInterceptor <span class="token operator">=</span> axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">/*...*/</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">eject</span><span class="token punctuation">(</span>myInterceptor<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6574\u4F53\u8BBE\u8BA1" tabindex="-1"><a class="header-anchor" href="#\u6574\u4F53\u8BBE\u8BA1" aria-hidden="true">#</a> \u6574\u4F53\u8BBE\u8BA1</h2><p>\u6211\u4EEC\u5148\u7528\u4E00\u5F20\u56FE\u6765\u5C55\u793A\u4E00\u4E0B\u62E6\u622A\u5668\u5DE5\u4F5C\u6D41\u7A0B\uFF1A</p>`,11),d=["src"],k=s(`<p>\u6574\u4E2A\u8FC7\u7A0B\u662F\u4E00\u4E2A\u94FE\u5F0F\u8C03\u7528\u7684\u65B9\u5F0F\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u62E6\u622A\u5668\u90FD\u53EF\u4EE5\u652F\u6301\u540C\u6B65\u548C\u5F02\u6B65\u5904\u7406\uFF0C\u6211\u4EEC\u81EA\u7136\u800C\u7136\u5730\u5C31\u8054\u60F3\u5230\u4F7F\u7528 Promise \u94FE\u7684\u65B9\u5F0F\u6765\u5B9E\u73B0\u6574\u4E2A\u8C03\u7528\u8FC7\u7A0B\u3002</p><p>\u5728\u8FD9\u4E2A Promise \u94FE\u7684\u6267\u884C\u8FC7\u7A0B\u4E2D\uFF0C\u8BF7\u6C42\u62E6\u622A\u5668 <code>resolve</code> \u51FD\u6570\u5904\u7406\u7684\u662F <code>config</code> \u5BF9\u8C61\uFF0C\u800C\u76F8\u5E94\u62E6\u622A\u5668 <code>resolve</code> \u51FD\u6570\u5904\u7406\u7684\u662F <code>response</code> \u5BF9\u8C61\u3002</p><p>\u5728\u4E86\u89E3\u4E86\u62E6\u622A\u5668\u5DE5\u4F5C\u6D41\u7A0B\u540E\uFF0C\u6211\u4EEC\u5148\u8981\u521B\u5EFA\u4E00\u4E2A\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\uFF0C\u5141\u8BB8\u6211\u4EEC\u53BB\u6DFB\u52A0 \u5220\u9664\u548C\u904D\u5386\u62E6\u622A\u5668\u3002</p><h2 id="\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\u5B9E\u73B0" aria-hidden="true">#</a> \u62E6\u622A\u5668\u7BA1\u7406\u7C7B\u5B9E\u73B0</h2><p>\u6839\u636E\u9700\u6C42\uFF0C<code>axios</code> \u62E5\u6709\u4E00\u4E2A <code>interceptors</code> \u5BF9\u8C61\u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u53C8\u6709 <code>request</code> \u548C <code>response</code> 2 \u4E2A\u5C5E\u6027\uFF0C\u5B83\u4EEC\u5BF9\u5916\u63D0\u4F9B\u4E00\u4E2A <code>use</code> \u65B9\u6CD5\u6765\u6DFB\u52A0\u62E6\u622A\u5668\uFF0C\u6211\u4EEC\u53EF\u4EE5\u628A\u8FD9\u4FE9\u5C5E\u6027\u770B\u505A\u662F\u4E00\u4E2A\u62E6\u622A\u5668\u7BA1\u7406\u5BF9\u8C61\u3002<code>use</code> \u65B9\u6CD5\u652F\u6301 2 \u4E2A\u53C2\u6570\uFF0C\u7B2C\u4E00\u4E2A\u662F <code>resolve</code> \u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u662F <code>reject</code> \u51FD\u6570\uFF0C\u5BF9\u4E8E <code>resolve</code> \u51FD\u6570\u7684\u53C2\u6570\uFF0C\u8BF7\u6C42\u62E6\u622A\u5668\u662F <code>AxiosRequestConfig</code> \u7C7B\u578B\u7684\uFF0C\u800C\u54CD\u5E94\u62E6\u622A\u5668\u662F <code>AxiosResponse</code> \u7C7B\u578B\u7684\uFF1B\u800C\u5BF9\u4E8E <code>reject</code> \u51FD\u6570\u7684\u53C2\u6570\u7C7B\u578B\u5219\u662F <code>any</code> \u7C7B\u578B\u7684\u3002</p><p>\u6839\u636E\u4E0A\u8FF0\u5206\u6790\uFF0C\u6211\u4EEC\u5148\u6765\u5B9A\u4E49\u4E00\u4E0B\u62E6\u622A\u5668\u7BA1\u7406\u5BF9\u8C61\u5BF9\u5916\u7684\u63A5\u53E3\u3002</p><h3 id="\u63A5\u53E3\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u5B9A\u4E49" aria-hidden="true">#</a> \u63A5\u53E3\u5B9A\u4E49</h3><p><code>types/index.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosInterceptorManager<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token function">use</span><span class="token punctuation">(</span>resolved<span class="token operator">:</span> ResolvedFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> rejected<span class="token operator">?</span><span class="token operator">:</span> RejectedFn<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>

  <span class="token function">eject</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResolvedFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">=</span><span class="token builtin">any</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RejectedFn</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u6211\u4EEC\u5B9A\u4E49\u4E86 <code>AxiosInterceptorManager</code> \u6CDB\u578B\u63A5\u53E3\uFF0C\u56E0\u4E3A\u5BF9\u4E8E <code>resolve</code> \u51FD\u6570\u7684\u53C2\u6570\uFF0C\u8BF7\u6C42\u62E6\u622A\u5668\u548C\u54CD\u5E94\u62E6\u622A\u5668\u662F\u4E0D\u540C\u7684\u3002</p><h3 id="\u4EE3\u7801\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801\u5B9E\u73B0" aria-hidden="true">#</a> \u4EE3\u7801\u5B9E\u73B0</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ResolvedFn<span class="token punctuation">,</span> RejectedFn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../types&#39;</span>

<span class="token keyword">interface</span> <span class="token class-name">Interceptor<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  resolved<span class="token operator">:</span> ResolvedFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>
  rejected<span class="token operator">?</span><span class="token operator">:</span> RejectedFn
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">InterceptorManager<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> interceptors<span class="token operator">:</span> <span class="token builtin">Array</span><span class="token operator">&lt;</span>Interceptor<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span>

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>

  <span class="token function">use</span><span class="token punctuation">(</span>resolved<span class="token operator">:</span> ResolvedFn<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> rejected<span class="token operator">?</span><span class="token operator">:</span> RejectedFn<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      resolved<span class="token punctuation">,</span>
      rejected
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>

  <span class="token function">forEach</span><span class="token punctuation">(</span><span class="token function-variable function">fn</span><span class="token operator">:</span> <span class="token punctuation">(</span>interceptor<span class="token operator">:</span> Interceptor<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>interceptor <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>interceptor <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">fn</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token function">eject</span><span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">[</span>id<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">[</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5B9A\u4E49\u4E86\u4E00\u4E2A <code>InterceptorManager</code> \u6CDB\u578B\u7C7B\uFF0C\u5185\u90E8\u7EF4\u62A4\u4E86\u4E00\u4E2A\u79C1\u6709\u5C5E\u6027 <code>interceptors</code>\uFF0C\u5B83\u662F\u4E00\u4E2A\u6570\u7EC4\uFF0C\u7528\u6765\u5B58\u50A8\u62E6\u622A\u5668\u3002\u8BE5\u7C7B\u8FD8\u5BF9\u5916\u63D0\u4F9B\u4E86 3 \u4E2A\u65B9\u6CD5\uFF0C\u5176\u4E2D <code>use</code> \u63A5\u53E3\u5C31\u662F\u6DFB\u52A0\u62E6\u622A\u5668\u5230 <code>interceptors</code> \u4E2D\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A <code>id</code> \u7528\u4E8E\u5220\u9664\uFF1B<code>forEach</code> \u63A5\u53E3\u5C31\u662F\u904D\u5386 <code>interceptors</code> \u7528\u7684\uFF0C\u5B83\u652F\u6301\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\uFF0C\u904D\u5386\u8FC7\u7A0B\u4E2D\u4F1A\u8C03\u7528\u8BE5\u51FD\u6570\uFF0C\u5E76\u628A\u6BCF\u4E00\u4E2A <code>interceptor</code> \u4F5C\u4E3A\u8BE5\u51FD\u6570\u7684\u53C2\u6570\u4F20\u5165\uFF1B<code>eject</code> \u5C31\u662F\u5220\u9664\u4E00\u4E2A\u62E6\u622A\u5668\uFF0C\u901A\u8FC7\u4F20\u5165\u62E6\u622A\u5668\u7684 <code>id</code> \u5220\u9664\u3002</p><h2 id="\u94FE\u5F0F\u8C03\u7528\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u8C03\u7528\u5B9E\u73B0" aria-hidden="true">#</a> \u94FE\u5F0F\u8C03\u7528\u5B9E\u73B0</h2>`,14),v=a("\u672C\u5C0F\u8282\u9700\u8981\u4F60\u5BF9 Promise \u638C\u63E1\u548C\u7406\u89E3\uFF0C\u53EF\u4EE5\u524D\u5F80 "),m={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",target:"_blank",rel:"noopener noreferrer"},b=a("mdn"),g=a(" \u5B66\u4E60\u3002"),h=s(`<p>\u5F53\u6211\u4EEC\u5B9E\u73B0\u597D\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\uFF0C\u63A5\u4E0B\u6765\u5C31\u662F\u5728 <code>Axios</code> \u4E2D\u5B9A\u4E49\u4E00\u4E2A <code>interceptors</code> \u5C5E\u6027\uFF0C\u5B83\u7684\u7C7B\u578B\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">Interceptors</span> <span class="token punctuation">{</span>
  request<span class="token operator">:</span> InterceptorManager<span class="token operator">&lt;</span>AxiosRequestConfig<span class="token operator">&gt;</span>
  response<span class="token operator">:</span> InterceptorManager<span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Axios</span> <span class="token punctuation">{</span>
  interceptors<span class="token operator">:</span> Interceptors

  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">{</span>
      request<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager<span class="token operator">&lt;</span>AxiosRequestConfig<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager<span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Interceptors</code> \u7C7B\u578B\u62E5\u6709 2 \u4E2A\u5C5E\u6027\uFF0C\u4E00\u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\u5B9E\u4F8B\uFF0C\u4E00\u4E2A\u662F\u54CD\u5E94\u62E6\u622A\u5668\u7BA1\u7406\u7C7B\u5B9E\u4F8B\u3002\u6211\u4EEC\u5728\u5B9E\u4F8B\u5316 <code>Axios</code> \u7C7B\u7684\u65F6\u5019\uFF0C\u5728\u5B83\u7684\u6784\u9020\u5668\u53BB\u521D\u59CB\u5316\u8FD9\u4E2A <code>interceptors</code> \u5B9E\u4F8B\u5C5E\u6027\u3002</p><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u4FEE\u6539 <code>request</code> \u65B9\u6CD5\u7684\u903B\u8F91\uFF0C\u6DFB\u52A0\u62E6\u622A\u5668\u94FE\u5F0F\u8C03\u7528\u7684\u903B\u8F91\uFF1A</p><p><code>core/Axios.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">PromiseChain</span> <span class="token punctuation">{</span>
  resolved<span class="token operator">:</span> ResolvedFn <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> AxiosPromise<span class="token punctuation">)</span>
  rejected<span class="token operator">?</span><span class="token operator">:</span> RejectedFn
<span class="token punctuation">}</span>

<span class="token function">request</span><span class="token punctuation">(</span>url<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> config<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> AxiosPromise <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> url <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      config <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    config<span class="token punctuation">.</span>url <span class="token operator">=</span> url
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    config <span class="token operator">=</span> url
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> chain<span class="token operator">:</span> PromiseChain<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
    resolved<span class="token operator">:</span> dispatchRequest<span class="token punctuation">,</span>
    rejected<span class="token operator">:</span> <span class="token keyword">undefined</span>
  <span class="token punctuation">}</span><span class="token punctuation">]</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>interceptor <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    chain<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>interceptor <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    chain<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> promise <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>chain<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> resolved<span class="token punctuation">,</span> rejected <span class="token punctuation">}</span> <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">!</span>
    promise <span class="token operator">=</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolved<span class="token punctuation">,</span> rejected<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> promise
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9996\u5148\uFF0C\u6784\u9020\u4E00\u4E2A <code>PromiseChain</code> \u7C7B\u578B\u7684\u6570\u7EC4 <code>chain</code>\uFF0C\u5E76\u628A <code>dispatchRequest</code> \u51FD\u6570\u8D4B\u503C\u7ED9 <code>resolved</code> \u5C5E\u6027\uFF1B\u63A5\u7740\u5148\u904D\u5386\u8BF7\u6C42\u62E6\u622A\u5668\u63D2\u5165\u5230 <code>chain</code> \u7684\u524D\u9762\uFF1B\u7136\u540E\u518D\u904D\u5386\u54CD\u5E94\u62E6\u622A\u5668\u63D2\u5165\u5230 <code>chain</code> \u540E\u9762\u3002</p><p>\u63A5\u4E0B\u6765\u5B9A\u4E49\u4E00\u4E2A\u5DF2\u7ECF resolve \u7684 <code>promise</code>\uFF0C\u5FAA\u73AF\u8FD9\u4E2A <code>chain</code>\uFF0C\u62FF\u5230\u6BCF\u4E2A\u62E6\u622A\u5668\u5BF9\u8C61\uFF0C\u628A\u5B83\u4EEC\u7684 <code>resolved</code> \u51FD\u6570\u548C <code>rejected</code> \u51FD\u6570\u6DFB\u52A0\u5230 <code>promise.then</code> \u7684\u53C2\u6570\u4E2D\uFF0C\u8FD9\u6837\u5C31\u76F8\u5F53\u4E8E\u901A\u8FC7 Promise \u7684\u94FE\u5F0F\u8C03\u7528\u65B9\u5F0F\uFF0C\u5B9E\u73B0\u4E86\u62E6\u622A\u5668\u4E00\u5C42\u5C42\u7684\u94FE\u5F0F\u8C03\u7528\u7684\u6548\u679C\u3002</p><p>\u6CE8\u610F\u6211\u4EEC\u62E6\u622A\u5668\u7684\u6267\u884C\u987A\u5E8F\uFF0C\u5BF9\u4E8E\u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u5148\u6267\u884C\u540E\u6DFB\u52A0\u7684\uFF0C\u518D\u6267\u884C\u5148\u6DFB\u52A0\u7684\uFF1B\u800C\u5BF9\u4E8E\u54CD\u5E94\u62E6\u622A\u5668\uFF0C\u5148\u6267\u884C\u5148\u6DFB\u52A0\u7684\uFF0C\u540E\u6267\u884C\u540E\u6DFB\u52A0\u7684\u3002</p><h2 id="demo-\u7F16\u5199" tabindex="-1"><a class="header-anchor" href="#demo-\u7F16\u5199" aria-hidden="true">#</a> demo \u7F16\u5199</h2><p>\u5728 <code>examples</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>interceptor</code> \u76EE\u5F55\uFF0C\u5728 <code>interceptor</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>index.html</code>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Interceptor example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/__build__/interceptor.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u521B\u5EFA <code>app.ts</code> \u4F5C\u4E3A\u5165\u53E3\u6587\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;../../src/index&#39;</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>test <span class="token operator">+=</span> <span class="token string">&#39;1&#39;</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>test <span class="token operator">+=</span> <span class="token string">&#39;2&#39;</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>config <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>test <span class="token operator">+=</span> <span class="token string">&#39;3&#39;</span>
  <span class="token keyword">return</span> config
<span class="token punctuation">}</span><span class="token punctuation">)</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span>data <span class="token operator">+=</span> <span class="token string">&#39;1&#39;</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> interceptor <span class="token operator">=</span> axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span>data <span class="token operator">+=</span> <span class="token string">&#39;2&#39;</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>
axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>res <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span>data <span class="token operator">+=</span> <span class="token string">&#39;3&#39;</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span><span class="token punctuation">)</span>

axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">eject</span><span class="token punctuation">(</span>interceptor<span class="token punctuation">)</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/interceptor/get&#39;</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    test<span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BE5 demo \u6211\u4EEC\u6DFB\u52A0\u4E86 3 \u4E2A\u8BF7\u6C42\u62E6\u622A\u5668\uFF0C\u6DFB\u52A0\u4E86 3 \u4E2A\u54CD\u5E94\u62E6\u622A\u5668\u5E76\u5220\u9664\u4E86\u7B2C\u4E8C\u4E2A\u3002\u8FD0\u884C\u8BE5 demo \u6211\u4EEC\u901A\u8FC7\u6D4F\u89C8\u5668\u8BBF\u95EE\uFF0C\u6211\u4EEC\u53D1\u9001\u7684\u8BF7\u6C42\u6DFB\u52A0\u4E86\u4E00\u4E2A <code>test</code> \u7684\u8BF7\u6C42 header\uFF0C\u5B83\u7684\u503C\u662F <code>321</code>\uFF1B\u6211\u4EEC\u7684\u54CD\u5E94\u6570\u636E\u8FD4\u56DE\u7684\u662F <code>hello</code>\uFF0C\u7ECF\u8FC7\u54CD\u5E94\u62E6\u622A\u5668\u7684\u5904\u7406\uFF0C\u6700\u7EC8\u6211\u4EEC\u8F93\u51FA\u7684\u6570\u636E\u662F <code>hello13</code>\u3002</p><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u7ED9 <code>ts-axios</code> \u5B9E\u73B0\u4E86\u62E6\u622A\u5668\u529F\u80FD\uFF0C\u5B83\u662F\u4E00\u4E2A\u975E\u5E38\u5B9E\u7528\u7684\u529F\u80FD\uFF0C\u5728\u5B9E\u9645\u5DE5\u4F5C\u4E2D\u6211\u4EEC\u53EF\u4EE5\u5229\u7528\u5B83\u505A\u4E00\u4E9B\u9700\u6C42\u5982\u767B\u5F55\u6743\u9650\u8BA4\u8BC1\u3002</p><p>\u6211\u4EEC\u76EE\u524D\u901A\u8FC7 <code>axios</code> \u53D1\u9001\u8BF7\u6C42\uFF0C\u5F80\u5F80\u4F1A\u4F20\u5165\u4E00\u5806\u914D\u7F6E\uFF0C\u4F46\u662F\u6211\u4EEC\u4E5F\u5E0C\u671B <code>ts-axios</code> \u672C\u8EAB\u4E5F\u4F1A\u6709\u4E00\u4E9B\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u6211\u4EEC\u628A\u7528\u6237\u4F20\u5165\u7684\u81EA\u5B9A\u4E49\u914D\u7F6E\u548C\u9ED8\u8BA4\u914D\u7F6E\u505A\u4E00\u5C42\u5408\u5E76\u3002\u5176\u5B9E\uFF0C\u5927\u90E8\u5206\u7684 JS \u5E93\u90FD\u662F\u7C7B\u4F3C\u7684\u73A9\u6CD5\u3002\u4E0B\u9762\u4E00\u7AE0\u6211\u4EEC\u5C31\u6765\u5B9E\u73B0\u8FD9\u4E2A feature\u3002</p>`,17);function f(e,y){const t=l("ExternalLinkIcon");return o(),c("div",null,[r,n("img",{src:e.$withBase("/interceptor.png"),alt:"interceptor"},null,8,d),k,n("blockquote",null,[n("p",null,[v,n("a",m,[b,i(t)]),g])]),h])}var x=p(u,[["render",f],["__file","interceptor.html.vue"]]);export{x as default};
