const e=JSON.parse(`{"key":"v-003495e4","path":"/technology/ts_axios/chapter3/base.html","title":"编写基础请求代码","lang":"zh-CN","frontmatter":{"title":"编写基础请求代码","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"我们这节课开始编写 ts-axios 库，我们的目标是实现简单的发送请求功能，即客户端通过 XMLHttpRequest 对象把请求发送到 server 端，server 端能收到请求并响应即可。 我们实现 axios 最基本的操作，通过传入一个对象发送请求，如下： axios({ method: 'get', url: '/simple/get', params: { a: 1, b: 2 } })","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter3/base.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"编写基础请求代码"}],["meta",{"property":"og:description","content":"我们这节课开始编写 ts-axios 库，我们的目标是实现简单的发送请求功能，即客户端通过 XMLHttpRequest 对象把请求发送到 server 端，server 端能收到请求并响应即可。 我们实现 axios 最基本的操作，通过传入一个对象发送请求，如下： axios({ method: 'get', url: '/simple/get', params: { a: 1, b: 2 } })"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"编写基础请求代码\\",\\"description\\":\\"我们这节课开始编写 ts-axios 库，我们的目标是实现简单的发送请求功能，即客户端通过 XMLHttpRequest 对象把请求发送到 server 端，server 端能收到请求并响应即可。 我们实现 axios 最基本的操作，通过传入一个对象发送请求，如下： axios({ method: 'get', url: '/simple/get', params: { a: 1, b: 2 } })\\"}"]]},"headers":[{"level":2,"title":"创建入口文件","slug":"创建入口文件","link":"#创建入口文件","children":[{"level":3,"title":"编译配置文件 tsconfig.json","slug":"编译配置文件-tsconfig-json","link":"#编译配置文件-tsconfig-json","children":[]},{"level":3,"title":"定义 AxiosRequestConfig 接口类型","slug":"定义-axiosrequestconfig-接口类型","link":"#定义-axiosrequestconfig-接口类型","children":[]}]},{"level":2,"title":"利用 XMLHttpRequest 发送请求","slug":"利用-xmlhttprequest-发送请求","link":"#利用-xmlhttprequest-发送请求","children":[{"level":3,"title":"引入 xhr 模块","slug":"引入-xhr-模块","link":"#引入-xhr-模块","children":[]}]},{"level":2,"title":"demo 编写","slug":"demo-编写","link":"#demo-编写","children":[{"level":3,"title":"依赖安装","slug":"依赖安装","link":"#依赖安装","children":[]},{"level":3,"title":"编写 webpack 配置文件","slug":"编写-webpack-配置文件","link":"#编写-webpack-配置文件","children":[]},{"level":3,"title":"编写 server 文件","slug":"编写-server-文件","link":"#编写-server-文件","children":[]},{"level":3,"title":"编写 demo 代码","slug":"编写-demo-代码","link":"#编写-demo-代码","children":[]},{"level":3,"title":"运行 demo","slug":"运行-demo","link":"#运行-demo","children":[]}]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":7.42,"words":2226},"filePathRelative":"technology/ts_axios/chapter3/base.md","localizedDate":"2023年1月11日","excerpt":"<p>我们这节课开始编写 <code>ts-axios</code> 库，我们的目标是实现简单的发送请求功能，即客户端通过 <code>XMLHttpRequest</code> 对象把请求发送到 server 端，server 端能收到请求并响应即可。</p>\\n<p>我们实现 <code>axios</code> 最基本的操作，通过传入一个对象发送请求，如下：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token function\\">axios</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  method<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'get'</span><span class=\\"token punctuation\\">,</span>\\n  url<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/simple/get'</span><span class=\\"token punctuation\\">,</span>\\n  params<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    a<span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n    b<span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
