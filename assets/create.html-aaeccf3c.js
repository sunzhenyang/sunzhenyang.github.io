const n=JSON.parse(`{"key":"v-73514670","path":"/technology/ts_axios/chapter8/create.html","title":"扩展 axios.create 静态接口","lang":"zh-CN","frontmatter":{"title":"扩展 axios.create 静态接口","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"需求分析 目前为止，我们的 axios 都是一个单例，一旦我们修改了 axios 的默认配置，会影响所有的请求。我们希望提供了一个 axios.create 的静态接口允许我们创建一个新的 axios 实例，同时允许我们传入新的配置和默认配置合并，并做为新的默认配置。 举个例子： const instance = axios.create({ transformRequest: [(function(data) { return qs.stringify(data) }), ...(axios.defaults.transformRequest as AxiosTransformer[])], transformResponse: [...(axios.defaults.transformResponse as AxiosTransformer[]), function(data) { if (typeof data === 'object') { data.b = 2 } return data }] }) instance({ url: '/config/post', method: 'post', data: { a: 1 } })","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter8/create.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"扩展 axios.create 静态接口"}],["meta",{"property":"og:description","content":"需求分析 目前为止，我们的 axios 都是一个单例，一旦我们修改了 axios 的默认配置，会影响所有的请求。我们希望提供了一个 axios.create 的静态接口允许我们创建一个新的 axios 实例，同时允许我们传入新的配置和默认配置合并，并做为新的默认配置。 举个例子： const instance = axios.create({ transformRequest: [(function(data) { return qs.stringify(data) }), ...(axios.defaults.transformRequest as AxiosTransformer[])], transformResponse: [...(axios.defaults.transformResponse as AxiosTransformer[]), function(data) { if (typeof data === 'object') { data.b = 2 } return data }] }) instance({ url: '/config/post', method: 'post', data: { a: 1 } })"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"扩展 axios.create 静态接口\\",\\"description\\":\\"需求分析 目前为止，我们的 axios 都是一个单例，一旦我们修改了 axios 的默认配置，会影响所有的请求。我们希望提供了一个 axios.create 的静态接口允许我们创建一个新的 axios 实例，同时允许我们传入新的配置和默认配置合并，并做为新的默认配置。 举个例子： const instance = axios.create({ transformRequest: [(function(data) { return qs.stringify(data) }), ...(axios.defaults.transformRequest as AxiosTransformer[])], transformResponse: [...(axios.defaults.transformResponse as AxiosTransformer[]), function(data) { if (typeof data === 'object') { data.b = 2 } return data }] }) instance({ url: '/config/post', method: 'post', data: { a: 1 } })\\"}"]]},"headers":[{"level":2,"title":"需求分析","slug":"需求分析","link":"#需求分析","children":[]},{"level":2,"title":"静态方法扩展","slug":"静态方法扩展","link":"#静态方法扩展","children":[]},{"level":2,"title":"demo 编写","slug":"demo-编写","link":"#demo-编写","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":1.71,"words":512},"filePathRelative":"technology/ts_axios/chapter8/create.md","localizedDate":"2023年1月11日","excerpt":"<h2> 需求分析</h2>\\n<p>目前为止，我们的 axios 都是一个单例，一旦我们修改了 axios 的默认配置，会影响所有的请求。我们希望提供了一个 <code>axios.create</code> 的静态接口允许我们创建一个新的 <code>axios</code> 实例，同时允许我们传入新的配置和默认配置合并，并做为新的默认配置。</p>\\n<p>举个例子：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">const</span> instance <span class=\\"token operator\\">=</span> axios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">create</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  transformRequest<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> qs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">stringify</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">(</span>axios<span class=\\"token punctuation\\">.</span>defaults<span class=\\"token punctuation\\">.</span>transformRequest <span class=\\"token keyword\\">as</span> AxiosTransformer<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  transformResponse<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">(</span>axios<span class=\\"token punctuation\\">.</span>defaults<span class=\\"token punctuation\\">.</span>transformResponse <span class=\\"token keyword\\">as</span> AxiosTransformer<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">function</span><span class=\\"token punctuation\\">(</span>data<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">typeof</span> data <span class=\\"token operator\\">===</span> <span class=\\"token string\\">'object'</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      data<span class=\\"token punctuation\\">.</span>b <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> data\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n<span class=\\"token function\\">instance</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  url<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/config/post'</span><span class=\\"token punctuation\\">,</span>\\n  method<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'post'</span><span class=\\"token punctuation\\">,</span>\\n  data<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    a<span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
