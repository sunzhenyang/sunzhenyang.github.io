import{_ as e,o as t,c as p,a as n,b as o,d as s,e as c,r as i}from"./app.095bd546.js";const l={},u=n("h2",{id:"\u9700\u6C42\u5206\u6790",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u9700\u6C42\u5206\u6790","aria-hidden":"true"},"#"),s(" \u9700\u6C42\u5206\u6790")],-1),d=s("\u6211\u4EEC\u901A\u8FC7\u6267\u884C "),r=n("code",null,"XMLHttpRequest",-1),k=s(" \u5BF9\u8C61\u5B9E\u4F8B\u7684 "),v=n("code",null,"send",-1),m=s(" \u65B9\u6CD5\u6765\u53D1\u9001\u8BF7\u6C42\uFF0C\u5E76\u901A\u8FC7\u8BE5\u65B9\u6CD5\u7684\u53C2\u6570\u8BBE\u7F6E\u8BF7\u6C42 "),b=n("code",null,"body",-1),f=s(" \u6570\u636E\uFF0C\u6211\u4EEC\u53EF\u4EE5\u53BB "),g={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send",target:"_blank",rel:"noopener noreferrer"},h=s("mdn"),y=s(" \u67E5\u9605\u8BE5\u65B9\u6CD5\u652F\u6301\u7684\u53C2\u6570\u7C7B\u578B\u3002"),_=c(`<p>\u6211\u4EEC\u53D1\u73B0 <code>send</code> \u65B9\u6CD5\u7684\u53C2\u6570\u652F\u6301 <code>Document</code> \u548C <code>BodyInit</code> \u7C7B\u578B\uFF0C<code>BodyInit</code> \u5305\u62EC\u4E86 <code>Blob</code>, <code>BufferSource</code>, <code>FormData</code>, <code>URLSearchParams</code>, <code>ReadableStream</code>\u3001<code>USVString</code>\uFF0C\u5F53\u6CA1\u6709\u6570\u636E\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u4F20\u5165 <code>null</code>\u3002</p><p>\u4F46\u662F\u6211\u4EEC\u6700\u5E38\u7528\u7684\u573A\u666F\u8FD8\u662F\u4F20\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\u7ED9\u670D\u52A1\u7AEF\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span> 
    a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">2</span> 
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65F6\u5019 <code>data</code>\u662F\u4E0D\u80FD\u76F4\u63A5\u4F20\u7ED9 <code>send</code> \u51FD\u6570\u7684\uFF0C\u6211\u4EEC\u9700\u8981\u628A\u5B83\u8F6C\u6362\u6210 JSON \u5B57\u7B26\u4E32\u3002</p><h2 id="transformrequest-\u51FD\u6570\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#transformrequest-\u51FD\u6570\u5B9E\u73B0" aria-hidden="true">#</a> transformRequest \u51FD\u6570\u5B9E\u73B0</h2><p>\u6839\u636E\u9700\u6C42\u5206\u6790\uFF0C\u6211\u4EEC\u8981\u5B9E\u73B0\u4E00\u4E2A\u5DE5\u5177\u51FD\u6570\uFF0C\u5BF9 request \u4E2D\u7684 <code>data</code> \u505A\u4E00\u5C42\u8F6C\u6362\u3002\u6211\u4EEC\u5728 <code>helpers</code> \u76EE\u5F55\u65B0\u5EFA <code>data.ts</code> \u6587\u4EF6\u3002</p><p><code>helpers/data.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> isPlainObject <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./util&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">transformRequest</span> <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> data
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>helpers/util.js</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">isPlainObject</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> val <span class="token keyword">is</span> Object <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&#39;[object Object]&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u4E3A\u4EC0\u4E48\u8981\u4F7F\u7528 <code>isPlainObject</code> \u51FD\u6570\u5224\u65AD\uFF0C\u800C\u4E0D\u7528\u4E4B\u524D\u7684 <code>isObject</code> \u51FD\u6570\u5462\uFF0C\u56E0\u4E3A <code>isObject</code> \u7684\u5224\u65AD\u65B9\u5F0F\uFF0C\u5BF9\u4E8E <code>FormData</code>\u3001<code>ArrayBuffer</code> \u8FD9\u4E9B\u7C7B\u578B\uFF0C<code>isObject</code> \u5224\u65AD\u4E5F\u4E3A <code>true</code>\uFF0C\u4F46\u662F\u8FD9\u4E9B\u7C7B\u578B\u7684\u6570\u636E\u6211\u4EEC\u662F\u4E0D\u9700\u8981\u505A\u5904\u7406\u7684\uFF0C\u800C <code>isPlainObject</code> \u7684\u5224\u65AD\u65B9\u5F0F\uFF0C\u53EA\u6709\u6211\u4EEC\u5B9A\u4E49\u7684\u666E\u901A <code>JSON</code> \u5BF9\u8C61\u624D\u80FD\u6EE1\u8DB3\u3002</p><p><code>helpers/url.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isDate</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  val <span class="token operator">=</span> val<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  val <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u4E0A\u8282\u8BFE\u6211\u4EEC\u5BF9\u8BF7\u6C42\u53C2\u6570\u503C\u7684\u5224\u65AD\uFF0C\u6211\u4EEC\u4E5F\u5E94\u8BE5\u7528 <code>isPlainObject</code> \u624D\u66F4\u52A0\u5408\u7406\u3002</p><p><code>helpers/util.js</code></p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// export function isObject (val: any): val is Object {</span>
<span class="token comment">//   return val !== null &amp;&amp; typeof val === &#39;object&#39;</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E2\u7136\u73B0\u5728 <code>isObject</code> \u65B9\u6CD5\u4E0D\u518D\u4F7F\u7528\uFF0C\u6211\u4EEC\u5148\u5C06\u5176\u6CE8\u91CA\u3002</p><h2 id="\u5B9E\u73B0\u8BF7\u6C42-body-\u5904\u7406\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u73B0\u8BF7\u6C42-body-\u5904\u7406\u903B\u8F91" aria-hidden="true">#</a> \u5B9E\u73B0\u8BF7\u6C42 body \u5904\u7406\u903B\u8F91</h2><p><code>index.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> transformRequest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./helpers/data&#39;</span>

<span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>\`typescript
<span class="token keyword">function</span> <span class="token function">processConfig</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token function">transformURL</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  config<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformRequestData</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">transformRequestData</span> <span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">transformRequest</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5B9A\u4E49\u4E86 <code>transformRequestData</code> \u51FD\u6570\uFF0C\u53BB\u8F6C\u6362\u8BF7\u6C42 <code>body</code> \u7684\u6570\u636E\uFF0C\u5185\u90E8\u8C03\u7528\u4E86\u6211\u4EEC\u521A\u521A\u5B9E\u73B0\u7684\u7684 <code>transformRequest</code> \u65B9\u6CD5\u3002</p><p>\u7136\u540E\u6211\u4EEC\u5728 <code>processConfig</code> \u5185\u90E8\u6DFB\u52A0\u4E86\u8FD9\u6BB5\u903B\u8F91\uFF0C\u5728\u5904\u7406\u5B8C url \u540E\u63A5\u7740\u5BF9 <code>config</code> \u4E2D\u7684 <code>data</code> \u505A\u5904\u7406\u3002</p><h2 id="\u7F16\u5199-demo" tabindex="-1"><a class="header-anchor" href="#\u7F16\u5199-demo" aria-hidden="true">#</a> \u7F16\u5199 demo</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    b<span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Int32Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/base/buffer&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> arr
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5728 <code>examples/base/app.ts</code> \u6DFB\u52A0 2 \u6BB5\u4EE3\u7801\uFF0C\u7B2C\u4E00\u4E2A post \u8BF7\u6C42\u7684 <code>data</code> \u662F\u4E00\u4E2A\u666E\u901A\u5BF9\u8C61\uFF0C\u7B2C\u4E8C\u4E2A\u8BF7\u6C42\u7684 <code>data</code> \u662F\u4E00\u4E2A <code>Int32Array</code> \u7C7B\u578B\u7684\u6570\u636E\uFF0C\u5B83\u662F\u53EF\u4EE5\u76F4\u63A5\u4F20\u7ED9 <code>XMLHttpRequest</code> \u5BF9\u8C61\u7684 <code>send</code> \u65B9\u6CD5\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/base/post&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>body<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/base/buffer&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>chunk<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      msg<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> buf <span class="token operator">=</span> Buffer<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span>buf<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u63A5\u7740\u5728 <code>examples/server.js</code> \u4E2D\u6DFB\u52A0 2 \u4E2A\u8DEF\u7531\uFF0C\u5206\u522B\u9488\u5BF9\u8FD9\u4FE9\u79CD\u8BF7\u6C42\uFF0C\u8FD4\u56DE\u8BF7\u6C42\u4F20\u5165\u7684\u6570\u636E\u3002</p><p>\u7136\u540E\u6211\u4EEC\u6253\u5F00\u6D4F\u89C8\u5668\u8FD0\u884C demo\uFF0C\u770B\u4E00\u4E0B\u7ED3\u679C\uFF0C\u6211\u4EEC\u53D1\u73B0 <code>/base/buffer</code> \u7684\u8BF7\u6C42\u662F\u53EF\u4EE5\u62FF\u5230\u6570\u636E\uFF0C\u4F46\u662F <code>base/post</code> \u8BF7\u6C42\u7684 response \u91CC\u5374\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u7A7A\u5BF9\u8C61\uFF0C\u8FD9\u662F\u4EC0\u4E48\u539F\u56E0\u5462\uFF1F</p><p>\u5B9E\u9645\u4E0A\u662F\u56E0\u4E3A\u6211\u4EEC\u867D\u7136\u6267\u884C <code>send</code> \u65B9\u6CD5\u7684\u65F6\u5019\u628A\u666E\u901A\u5BF9\u8C61 <code>data</code> \u8F6C\u6362\u6210\u4E00\u4E2A <code>JSON</code> \u5B57\u7B26\u4E32\uFF0C\u4F46\u662F\u6211\u4EEC\u8BF7\u6C42<code>header</code> \u7684 <code>Content-Type</code> \u662F <code>text/plain;charset=UTF-8</code>\uFF0C\u5BFC\u81F4\u4E86\u670D\u52A1\u7AEF\u63A5\u53D7\u5230\u8BF7\u6C42\u5E76\u4E0D\u80FD\u6B63\u786E\u89E3\u6790\u8BF7\u6C42 <code>body</code> \u7684\u6570\u636E\u3002</p><p>\u77E5\u9053\u8FD9\u4E2A\u95EE\u9898\u540E\uFF0C\u4E0B\u9762\u4E00\u8282\u8BFE\u6211\u4EEC\u6765\u5B9E\u73B0\u5BF9\u8BF7\u6C42 <code>header</code> \u7684\u5904\u7406\u3002</p>`,30);function x(w,j){const a=i("ExternalLinkIcon");return t(),p("div",null,[u,n("p",null,[d,r,k,v,m,b,f,n("a",g,[h,o(a)]),y]),_])}var q=e(l,[["render",x],["__file","data.html.vue"]]);export{q as default};
