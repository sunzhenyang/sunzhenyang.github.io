import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as a,c,a as s,b as e,d as t,e as n,f as o}from"./app-4ebde51b.js";const d={},h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function",target:"_blank",rel:"noopener noreferrer"},u=e("br",null,null,-1),_={id:"function-length",tabindex:"-1"},p=e("a",{class:"header-anchor",href:"#function-length","aria-hidden":"true"},"#",-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/length",target:"_blank",rel:"noopener noreferrer"},b=e("blockquote",null,[e("p",null,"函数对象的一个属性值，指该函数有多少个必须要传入的参数，即形参的个数，形参的数量不包括剩余参数个数，仅包括第一个具有默认值之前的参数个数")],-1),g=e("thead",null,[e("tr",null,[e("th",null,"名称"),e("th",null,"描述")])],-1),m=e("tr",null,[e("td"),e("td")],-1),y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/name",target:"_blank",rel:"noopener noreferrer"},v=e("td",null,"函数实例的名称",-1),F=e("br",null,null,-1),z={id:"function-prototype-apply",tabindex:"-1"},k=e("a",{class:"header-anchor",href:"#function-prototype-apply","aria-hidden":"true"},"#",-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply",target:"_blank",rel:"noopener noreferrer"},x=o("<ul><li>描述：调用一个具有给定 this 值的函数，以及作为一个数组（或类似数组对象）提供的参数</li><li>语法：<code>func.apply(thisArg, [argsArray])</code></li><li>参数 <ul><li>thisArg：在 func 函数运行时使用的 this 值 <ul><li>this可能不是该方法看到的实际值</li><li>非严格模式下，则指定为 null 或 undefined 时会自动替换为指向全局对象，原始值会被包装</li></ul></li><li>argsArray：一个数组或者类数组对象，其中的数组元素将作为单独的参数传给 func 函数 <ul><li>如果该参数的值为 null 或 undefined，则表示不需要传入任何参数</li><li>从ECMAScript 5 开始可以使用类数组对象</li></ul></li></ul></li><li>返回值：调用有指定this值和参数的函数的结果，若该方法没有返回值，则返回 undefined</li></ul><br>",2),A={id:"function-prototype-call",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#function-prototype-call","aria-hidden":"true"},"#",-1),S={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/call",target:"_blank",rel:"noopener noreferrer"},j=o("<ul><li>描述：使用一个指定的 this 值和单独给出的一个或多个参数来调用一个函数</li><li>语法：<code>function.call(thisArg, arg1, arg2, ...)</code></li><li>参数 <ul><li>thisArg：在 func 函数运行时使用的 this 值 <ul><li>this可能不是该方法看到的实际值</li><li>非严格模式下，则指定为 null 或 undefined 时会自动替换为指向全局对象，原始值会被包装</li></ul></li><li>arg1, arg2, ...：指定的参数列表</li></ul></li><li>返回值：调用有指定this值和参数的函数的结果，若该方法没有返回值，则返回 undefined</li></ul><br>",2),G={id:"function-prototype-bind",tabindex:"-1"},J=e("a",{class:"header-anchor",href:"#function-prototype-bind","aria-hidden":"true"},"#",-1),O={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/bind",target:"_blank",rel:"noopener noreferrer"},R=o("<ul><li>描述：创建一个新的函数，在 bind() 被调用时，这个新函数的 this 被指定为 bind() 的第一个参数，而其余参数将作为新函数的参数，供调用时使用</li><li>语法：<code>function.bind(thisArg[, arg1[, arg2[, ...]]])</code></li><li>参数 <ul><li>thisArg：在 func 函数运行时使用的 this 值 <ul><li>this可能不是该方法看到的实际值</li><li>非严格模式下，则指定为 null 或 undefined 时会自动替换为指向全局对象，原始值会被包装</li></ul></li><li>arg1, arg2, ...：指定的参数列表</li></ul></li><li>返回值：返回一个原函数的拷贝，并拥有指定的 this 值和初始参数</li></ul>",1);function W(V,E){const l=r("ExternalLinkIcon");return a(),c("div",null,[s(" more "),e("p",null,[e("a",h,[t("Function"),n(l)])]),u,e("h2",_,[p,t(),e("a",f,[t("Function.length"),n(l)])]),b,e("table",null,[g,e("tbody",null,[m,e("tr",null,[e("td",null,[e("a",y,[t("Function.name"),n(l)])]),v])])]),F,e("h2",z,[k,t(),e("a",N,[t("Function.prototype.apply()"),n(l)])]),x,e("h2",A,[C,t(),e("a",S,[t("Function.prototype.call()"),n(l)])]),j,e("h2",G,[J,t(),e("a",O,[t("Function.prototype.bind()"),n(l)])]),R])}const L=i(d,[["render",W],["__file","05.Function.html.vue"]]);export{L as default};
