const t=JSON.parse(`{"key":"v-faf5be20","path":"/technology/javascript/bom/engine.html","title":"概述","lang":"zh-CN","frontmatter":{"title":"概述","icon":"article","category":"javascript","article":false,"tag":["javascript"],"copyright":"Copyright by 阮一峰","description":"JavaScript 是浏览器的内置脚本语言。也就是说，浏览器内置了 JavaScript 引擎，并且提供各种接口，让 JavaScript 脚本可以控制浏览器的各种功能。一旦网页内嵌了 JavaScript 脚本，浏览器加载网页，就会去执行脚本，从而达到操作浏览器的目的，实现网页的各种动态效果。 本章开始介绍浏览器提供的各种 JavaScript 接口。首先，介绍 JavaScript 代码嵌入网页的方法。 代码嵌入网页的方法 网页中嵌入 JavaScript 代码，主要有四种方法。 &lt;script&gt;元素直接嵌入代码。 &lt;script&gt;标签加载外部脚本 事件属性 URL 协议","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/javascript/bom/engine.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"概述"}],["meta",{"property":"og:description","content":"JavaScript 是浏览器的内置脚本语言。也就是说，浏览器内置了 JavaScript 引擎，并且提供各种接口，让 JavaScript 脚本可以控制浏览器的各种功能。一旦网页内嵌了 JavaScript 脚本，浏览器加载网页，就会去执行脚本，从而达到操作浏览器的目的，实现网页的各种动态效果。 本章开始介绍浏览器提供的各种 JavaScript 接口。首先，介绍 JavaScript 代码嵌入网页的方法。 代码嵌入网页的方法 网页中嵌入 JavaScript 代码，主要有四种方法。 &lt;script&gt;元素直接嵌入代码。 &lt;script&gt;标签加载外部脚本 事件属性 URL 协议"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"概述\\",\\"description\\":\\"JavaScript 是浏览器的内置脚本语言。也就是说，浏览器内置了 JavaScript 引擎，并且提供各种接口，让 JavaScript 脚本可以控制浏览器的各种功能。一旦网页内嵌了 JavaScript 脚本，浏览器加载网页，就会去执行脚本，从而达到操作浏览器的目的，实现网页的各种动态效果。 本章开始介绍浏览器提供的各种 JavaScript 接口。首先，介绍 JavaScript 代码嵌入网页的方法。 代码嵌入网页的方法 网页中嵌入 JavaScript 代码，主要有四种方法。 &lt;script&gt;元素直接嵌入代码。 &lt;script&gt;标签加载外部脚本 事件属性 URL 协议\\"}"]]},"headers":[{"level":2,"title":"代码嵌入网页的方法","slug":"代码嵌入网页的方法","link":"#代码嵌入网页的方法","children":[{"level":3,"title":"script 元素嵌入代码","slug":"script-元素嵌入代码","link":"#script-元素嵌入代码","children":[]},{"level":3,"title":"script 元素加载外部脚本","slug":"script-元素加载外部脚本","link":"#script-元素加载外部脚本","children":[]},{"level":3,"title":"事件属性","slug":"事件属性","link":"#事件属性","children":[]},{"level":3,"title":"URL 协议","slug":"url-协议","link":"#url-协议","children":[]}]},{"level":2,"title":"script 元素","slug":"script-元素","link":"#script-元素","children":[{"level":3,"title":"工作原理","slug":"工作原理","link":"#工作原理","children":[]},{"level":3,"title":"defer 属性","slug":"defer-属性","link":"#defer-属性","children":[]},{"level":3,"title":"async 属性","slug":"async-属性","link":"#async-属性","children":[]},{"level":3,"title":"脚本的动态加载","slug":"脚本的动态加载","link":"#脚本的动态加载","children":[]},{"level":3,"title":"加载使用的协议","slug":"加载使用的协议","link":"#加载使用的协议","children":[]}]},{"level":2,"title":"浏览器的组成","slug":"浏览器的组成","link":"#浏览器的组成","children":[{"level":3,"title":"渲染引擎","slug":"渲染引擎","link":"#渲染引擎","children":[]},{"level":3,"title":"重流和重绘","slug":"重流和重绘","link":"#重流和重绘","children":[]},{"level":3,"title":"JavaScript 引擎","slug":"javascript-引擎","link":"#javascript-引擎","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":16.47,"words":4941},"filePathRelative":"technology/javascript/bom/engine.md","localizedDate":"2023年1月11日","excerpt":"<p>JavaScript 是浏览器的内置脚本语言。也就是说，浏览器内置了 JavaScript 引擎，并且提供各种接口，让 JavaScript 脚本可以控制浏览器的各种功能。一旦网页内嵌了 JavaScript 脚本，浏览器加载网页，就会去执行脚本，从而达到操作浏览器的目的，实现网页的各种动态效果。</p>\\n<p>本章开始介绍浏览器提供的各种 JavaScript 接口。首先，介绍 JavaScript 代码嵌入网页的方法。</p>\\n<h2> 代码嵌入网页的方法</h2>\\n<p>网页中嵌入 JavaScript 代码，主要有四种方法。</p>\\n<ul>\\n<li><code>&lt;script&gt;</code>元素直接嵌入代码。</li>\\n<li><code>&lt;script&gt;</code>标签加载外部脚本</li>\\n<li>事件属性</li>\\n<li>URL 协议</li>\\n</ul>","autoDesc":true}`);export{t as data};
