import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,a as t,f as e}from"./app-BybQgHW9.js";const p={},c=e(`<h2 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举"><span>枚举</span></a></h2><blockquote><p>是一些常量值的集合，以 <code>enum</code> 关键字定义，可以声明在类的内部，也可以声明到独立的类中，但不能定义在方法内</p></blockquote><h3 id="优点" tabindex="-1"><a class="header-anchor" href="#优点"><span>优点</span></a></h3><ul><li>写错单词会有提示，减少代码中的 bug</li><li>语义明了，增加代码可读性</li></ul><h3 id="写法" tabindex="-1"><a class="header-anchor" href="#写法"><span>写法</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// WeekDemo.java 定义在类内</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeekDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">Week</span> <span class="token punctuation">{</span><span class="token constant">MONDAY</span><span class="token punctuation">,</span> <span class="token constant">TUESDAY</span><span class="token punctuation">,</span> <span class="token constant">WEDNESDAY</span><span class="token punctuation">,</span> <span class="token constant">THURSDAY</span><span class="token punctuation">,</span> <span class="token constant">FRIDAY</span><span class="token punctuation">,</span> <span class="token constant">SATURDAY</span><span class="token punctuation">,</span> <span class="token constant">SUNDAY</span><span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Week</span><span class="token punctuation">.</span><span class="token constant">MONDAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// WeekDemo.java 定义在类外</span>
<span class="token keyword">enum</span> <span class="token class-name">Week</span> <span class="token punctuation">{</span><span class="token constant">MONDAY</span><span class="token punctuation">,</span> <span class="token constant">TUESDAY</span><span class="token punctuation">,</span> <span class="token constant">WEDNESDAY</span><span class="token punctuation">,</span> <span class="token constant">THURSDAY</span><span class="token punctuation">,</span> <span class="token constant">FRIDAY</span><span class="token punctuation">,</span> <span class="token constant">SATURDAY</span><span class="token punctuation">,</span> <span class="token constant">SUNDAY</span><span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeekDemo</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Week</span><span class="token punctuation">.</span><span class="token constant">MONDAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 在其他类中定义枚举</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeekEnum</span><span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">Week</span> <span class="token punctuation">{</span><span class="token constant">MONDAY</span><span class="token punctuation">,</span> <span class="token constant">TUESDAY</span><span class="token punctuation">,</span> <span class="token constant">WEDNESDAY</span><span class="token punctuation">,</span> <span class="token constant">THURSDAY</span><span class="token punctuation">,</span> <span class="token constant">FRIDAY</span><span class="token punctuation">,</span> <span class="token constant">SATURDAY</span><span class="token punctuation">,</span> <span class="token constant">SUNDAY</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 使用</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeekDemo</span><span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token class-name">WeekEnum<span class="token punctuation">.</span>Week</span><span class="token punctuation">.</span><span class="token constant">TUESDAY</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function o(l,i){return a(),s("div",null,[t(" more "),c])}const d=n(p,[["render",o],["__file","13.枚举.html.vue"]]),r=JSON.parse(`{"path":"/notes/java/Java%E5%9F%BA%E7%A1%80/13.%E6%9E%9A%E4%B8%BE.html","title":"枚举","lang":"zh-CN","frontmatter":{"title":"枚举","icon":"java","article":true,"breadcrumb":false,"date":"2023-03-06T00:00:00.000Z","order":13,"category":["Java"],"tag":["Java基础"],"description":"枚举 是一些常量值的集合，以 enum 关键字定义，可以声明在类的内部，也可以声明到独立的类中，但不能定义在方法内 优点 写错单词会有提示，减少代码中的 bug 语义明了，增加代码可读性 写法","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/java/Java%E5%9F%BA%E7%A1%80/13.%E6%9E%9A%E4%B8%BE.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"枚举"}],["meta",{"property":"og:description","content":"枚举 是一些常量值的集合，以 enum 关键字定义，可以声明在类的内部，也可以声明到独立的类中，但不能定义在方法内 优点 写错单词会有提示，减少代码中的 bug 语义明了，增加代码可读性 写法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T04:40:50.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2023-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-01T04:40:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"枚举\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-06T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-01T04:40:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yang\\",\\"url\\":\\"https://codemake.fun/\\",\\"email\\":\\"874530670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"枚举","slug":"枚举","link":"#枚举","children":[{"level":3,"title":"优点","slug":"优点","link":"#优点","children":[]},{"level":3,"title":"写法","slug":"写法","link":"#写法","children":[]}]}],"git":{"createdTime":1680324050000,"updatedTime":1680324050000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":0.64,"words":192},"filePathRelative":"notes/java/Java基础/13.枚举.md","localizedDate":"2023年3月6日","excerpt":"","autoDesc":true}`);export{d as comp,r as data};
