import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o,c,a as i,b as n,d as l,e as p,f as s}from"./app-DdwQwFQ1.js";const r={},d=s(`<h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h2><ul><li><code>transition-property</code>：要设置动画的所有属性（多个属性逗号隔开，全部属性使用 <code>all</code>）</li><li><code>transition-duration</code>：动画持续的时间，单位为秒 <code>s</code> 或者毫秒 <code>ms</code></li><li><code>transition-timing-function</code>：时间函数，表示动画进程在时间上的分布，默认值 <code>ease</code><ul><li><code>linear</code>、<code>ease</code>、<code>ease-in</code>、<code>ease-out</code> 和 <code>ease-in-out</code></li></ul></li><li><code>transition-delay</code>：动画<strong>开始前</strong>的延迟时间，单位为秒 <code>s</code> 或者毫秒 <code>ms</code></li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">#anim</span> <span class="token punctuation">{</span>
  <span class="token property">transition-property</span><span class="token punctuation">:</span> background-color<span class="token punctuation">,</span> color<span class="token punctuation">,</span> font-size<span class="token punctuation">;</span>
  <span class="token property">transition-timing-function</span><span class="token punctuation">:</span> ease<span class="token punctuation">;</span>
  <span class="token property">transition-duration</span><span class="token punctuation">:</span> 3s<span class="token punctuation">;</span>
  <span class="token property">transition-delay</span><span class="token punctuation">:</span> 2s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关键帧动画" tabindex="-1"><a class="header-anchor" href="#关键帧动画"><span>关键帧动画</span></a></h2><blockquote><p>通过 CSS 提供的 <code>@keyframes</code> 规则整合多个简单的动画</p></blockquote><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*  关键字    动画名称   所需时间 速度曲线 何时开始  播放次数    下周期逆向  */</span>
<span class="token property">animation</span><span class="token punctuation">:</span> myAnimation   2s    linear   5s    infinite   alternate

<span class="token comment">/*  动画设置  */</span>
<span class="token atrule"><span class="token rule">@keyframes</span> myAnimation</span>
<span class="token punctuation">{</span>
        <span class="token selector">from</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token selector">to</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">/*  或者  */</span>
<span class="token atrule"><span class="token rule">@keyframes</span> myAnimation</span>
<span class="token punctuation">{</span>
          <span class="token selector">0%</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token selector">100%</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="贝塞尔曲线" tabindex="-1"><a class="header-anchor" href="#贝塞尔曲线"><span>贝塞尔曲线</span></a></h2>`,7),u=n("p",null,[n("strong",null,"贝塞尔曲线可以使动画『超出』其原本的范围")],-1),m=n("p",null,"cubic-bezier(x1,y1,x2,y2) 通过调整贝塞尔曲线可以设置出多种动画效果，比如反弹效果等 X轴的范围是0~1，Y轴的取值没有规定，但是也不宜过大。 如：直线linear，即cubic-bezier(0,0,1,1)",-1),k={href:"https://cubic-bezier.com",target:"_blank",rel:"noopener noreferrer"},v=s(`<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.test</span> <span class="token punctuation">{</span>
  <span class="token property">left</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> left 5s <span class="token function">cubic-bezier</span><span class="token punctuation">(</span>.5<span class="token punctuation">,</span> -1<span class="token punctuation">,</span> .5<span class="token punctuation">,</span> 2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="阶跃函数" tabindex="-1"><a class="header-anchor" href="#阶跃函数"><span>阶跃函数</span></a></h2><blockquote><p>让动画分段进行</p></blockquote><ul><li>语法：<code>steps(number of steps[, start/end])</code><ul><li><code>number of steps</code>：表示需要拆分为多少段</li><li><code>start/end</code><ul><li><code>start</code> 表示在动画开始时，立即开始第一段的动画</li><li><code>end</code>：表示改变不应该在最开始的时候发生，而是发生在每一段的最后时刻</li></ul></li></ul></li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">#test.animate</span>  <span class="token punctuation">{</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate</span><span class="token punctuation">(</span>-90%<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> transform 9s <span class="token function">steps</span><span class="token punctuation">(</span>9<span class="token punctuation">,</span> start<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function b(h,g){const a=t("ExternalLinkIcon");return o(),c("div",null,[i(" more "),d,n("blockquote",null,[u,m,n("p",null,[n("a",k,[l("【贝塞尔曲线在线工具】"),p(a)])])]),v])}const _=e(r,[["render",b],["__file","05.动画.html.vue"]]),x=JSON.parse(`{"path":"/fe/css/knowledge/05.%E5%8A%A8%E7%94%BB.html","title":"动画","lang":"zh-CN","frontmatter":{"title":"动画","icon":"creative","category":["CSS"],"tag":["css"],"head":[["meta",{"property":"og:url","content":"https://codemake.fun/fe/css/knowledge/05.%E5%8A%A8%E7%94%BB.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"动画"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"动画\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-11T09:12:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yang\\",\\"url\\":\\"https://codemake.fun/\\",\\"email\\":\\"874530670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":2,"title":"关键帧动画","slug":"关键帧动画","link":"#关键帧动画","children":[]},{"level":2,"title":"贝塞尔曲线","slug":"贝塞尔曲线","link":"#贝塞尔曲线","children":[]},{"level":2,"title":"阶跃函数","slug":"阶跃函数","link":"#阶跃函数","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":1.4,"words":420},"filePathRelative":"fe/css/knowledge/05.动画.md","localizedDate":"2023年1月11日","excerpt":""}`);export{_ as comp,x as data};
