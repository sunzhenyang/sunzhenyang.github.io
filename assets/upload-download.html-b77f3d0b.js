const n=JSON.parse(`{"key":"v-195808b7","path":"/technology/ts_axios/chapter10/upload-download.html","title":"上传和下载的进度监控","lang":"zh-CN","frontmatter":{"title":"上传和下载的进度监控","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"需求分析 有些时候，当我们上传文件或者是请求一个大体积数据的时候，希望知道实时的进度，甚至可以基于此做一个进度条的展示。 我们希望给 axios 的请求配置提供 onDownloadProgress 和 onUploadProgress 2 个函数属性，用户可以通过这俩函数实现对下载进度和上传进度的监控。 axios.get('/more/get',{ onDownloadProgress(progressEvent) { // 监听下载进度 } }) axios.post('/more/post',{ onUploadProgress(progressEvent) { // 监听上传进度 } })","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter10/upload-download.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"上传和下载的进度监控"}],["meta",{"property":"og:description","content":"需求分析 有些时候，当我们上传文件或者是请求一个大体积数据的时候，希望知道实时的进度，甚至可以基于此做一个进度条的展示。 我们希望给 axios 的请求配置提供 onDownloadProgress 和 onUploadProgress 2 个函数属性，用户可以通过这俩函数实现对下载进度和上传进度的监控。 axios.get('/more/get',{ onDownloadProgress(progressEvent) { // 监听下载进度 } }) axios.post('/more/post',{ onUploadProgress(progressEvent) { // 监听上传进度 } })"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"上传和下载的进度监控\\",\\"description\\":\\"需求分析 有些时候，当我们上传文件或者是请求一个大体积数据的时候，希望知道实时的进度，甚至可以基于此做一个进度条的展示。 我们希望给 axios 的请求配置提供 onDownloadProgress 和 onUploadProgress 2 个函数属性，用户可以通过这俩函数实现对下载进度和上传进度的监控。 axios.get('/more/get',{ onDownloadProgress(progressEvent) { // 监听下载进度 } }) axios.post('/more/post',{ onUploadProgress(progressEvent) { // 监听上传进度 } })\\"}"]]},"headers":[{"level":2,"title":"需求分析","slug":"需求分析","link":"#需求分析","children":[]},{"level":2,"title":"代码实现","slug":"代码实现","link":"#代码实现","children":[]},{"level":2,"title":"demo 编写","slug":"demo-编写","link":"#demo-编写","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":4.67,"words":1401},"filePathRelative":"technology/ts_axios/chapter10/upload-download.md","localizedDate":"2023年1月11日","excerpt":"<h2> 需求分析</h2>\\n<p>有些时候，当我们上传文件或者是请求一个大体积数据的时候，希望知道实时的进度，甚至可以基于此做一个进度条的展示。</p>\\n<p>我们希望给 <code>axios</code> 的请求配置提供 <code>onDownloadProgress</code> 和 <code>onUploadProgress</code> 2 个函数属性，用户可以通过这俩函数实现对下载进度和上传进度的监控。</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code>axios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/more/get'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">onDownloadProgress</span><span class=\\"token punctuation\\">(</span>progressEvent<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 监听下载进度</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\naxios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">post</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'/more/post'</span><span class=\\"token punctuation\\">,</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">onUploadProgress</span><span class=\\"token punctuation\\">(</span>progressEvent<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 监听上传进度</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
