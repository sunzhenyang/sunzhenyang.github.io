import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as p,c as o,a as c,b as n,d as s,e as l,f as d}from"./app-DdwQwFQ1.js";const i={},u=n("p",null,[n("code",null,"MySQL"),s(" 是最广泛、普及度最高的开源关系型数据库")],-1),k={href:"https://pan.baidu.com/s/1pZhP2UQzglUULBtaiD1feQ",target:"_blank",rel:"noopener noreferrer"},r=d(`<h2 id="数据库分类" tabindex="-1"><a class="header-anchor" href="#数据库分类"><span>数据库分类</span></a></h2><h3 id="关系型数据库-mys" tabindex="-1"><a class="header-anchor" href="#关系型数据库-mys"><span>关系型数据库 MyS</span></a></h3><blockquote><p>简称：RDBMS，是指使用了关系模型的数据库系统。关系模型中，数据是分类存放的，数据之间可以有联系</p></blockquote><ul><li>主流关系型数据库 <ul><li>DB2</li><li>Oracle</li><li>MySQL</li><li>SQL Server</li></ul></li></ul><h3 id="nosql-数据库" tabindex="-1"><a class="header-anchor" href="#nosql-数据库"><span>NoSQL 数据库</span></a></h3><blockquote><p>指数据分类存放，但数据之间没有关联关系的数据库系统</p></blockquote><ul><li><p>是关系型数据库的一种补充</p></li><li><p>应用场景</p><ul><li>秒杀库存</li><li>登录信息</li><li>消息通知</li></ul></li><li><p>主流 NoSQL 数据库</p><ul><li>Redis</li><li>MemCache</li><li>MongoDB</li><li>Neo4J</li></ul></li></ul><h2 id="mysql-安装与配置" tabindex="-1"><a class="header-anchor" href="#mysql-安装与配置"><span>MySQL 安装与配置</span></a></h2><h3 id="衍生版本" tabindex="-1"><a class="header-anchor" href="#衍生版本"><span>衍生版本</span></a></h3><ul><li>MySQL（Oracle）</li><li>Percona Server（Percona）</li><li>MariaDB（MariaDB）</li></ul><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><ul><li><p>登录：<code>mysql -uroot -p</code></p></li><li><p>退出登录：<code>exit</code></p></li><li><p>显示数据库列表：<code>show databases;</code></p></li><li><p>启动 MySQL 服务：<code>sudo /usr/local/mysql/support-files/mysql.server start</code></p></li><li><p>停止 MySQL 服务：<code>sudo /usr/local/mysql/support-files/mysql.server stop</code></p></li><li><p>重启 MySQL 服务：<code>sudo /usr/local/mysql/support-files/mysql.server restart</code></p></li></ul><h3 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h3><h4 id="重设-root-密码-windows" tabindex="-1"><a class="header-anchor" href="#重设-root-密码-windows"><span>重设 root 密码（windows）</span></a></h4><ul><li>创建一个 <code>TXT</code> 文件，定义修改密码的 <code>SQL</code> 语句 <ul><li><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</code></li></ul></li><li><code>mysqld --defaults-file=&quot;my.ini&quot; --init-file=&quot;modifyPassword.txt&quot; --console</code></li></ul><h2 id="sql-语言" tabindex="-1"><a class="header-anchor" href="#sql-语言"><span>SQL 语言</span></a></h2><blockquote><p>用于访问和处理数据的标准的计算机语言</p></blockquote><h3 id="语言分类" tabindex="-1"><a class="header-anchor" href="#语言分类"><span>语言分类</span></a></h3><ul><li><code>DML</code>：数据操作语言 <ul><li>添加</li><li>删除</li><li>修改</li><li>查询</li></ul></li><li><code>DCL</code>：数据控制语言 <ul><li>用户</li><li>权限</li><li>事务</li></ul></li><li><code>DDL</code>：数据定义语言 <ul><li>逻辑库</li><li>数据表</li><li>视图</li><li>索引</li></ul></li></ul><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li>语句不区分大小写</li><li>字符串区分大小写，单引号双引号都是定义字符串</li><li>以英文分号结尾</li><li>空白和换行没有限制，但不能破坏语法规则</li></ul><h3 id="注释" tabindex="-1"><a class="header-anchor" href="#注释"><span>注释</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 这是一段注释文字</span>
<span class="token comment">/* 这是一段注释文字 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑库" tabindex="-1"><a class="header-anchor" href="#逻辑库"><span>逻辑库</span></a></h3><ul><li><p>显示所有逻辑库：<code>SHOW DATABASES;</code></p></li><li><p>创建逻辑库：<code>CREATE DATABASE test;</code></p></li><li><p>删除逻辑库：<code>DROP DATABASE test;</code></p></li><li><p>使用逻辑库：<code>USE test;</code></p></li></ul><h3 id="数据表" tabindex="-1"><a class="header-anchor" href="#数据表"><span>数据表</span></a></h3><blockquote><p>表：关系型数据库中用来存储数据的一个单元，一个表定义了一组数据结构</p></blockquote><ul><li>显示逻辑库中的所有数据表：<code>SHOW tables;</code></li><li>显示数据表的具体情况：<code>DESC student;</code></li><li>显示创建数据表时的 SQL 语句：<code>SHOW CREATE TABLE student;</code></li><li>删除数据表：<code>DROP TABLE student;</code></li><li>查看表的索引：<code>SHOW INDEX FROM 表名</code></li><li>删除表的索引：<code>DROP INDEX 索引名称 ON 表名</code></li></ul><h4 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h4><h5 id="数字" tabindex="-1"><a class="header-anchor" href="#数字"><span>数字</span></a></h5><ul><li>十进制整数成二进制整数不存在精度丢失</li><li>十进制浮点数无法在计算机中用二进制精确表达 <ul><li>0.2 -&gt; 0.2000000030</li></ul></li></ul><table><thead><tr><th>类型</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>TINYINT</td><td>1 字节（-128 ~ 127）</td><td>小整数</td></tr><tr><td>SMALLINIT</td><td>2 字节（-2^16 ~ 2^16-1）</td><td>普通整数</td></tr><tr><td>MEDIUMINT</td><td>3 字节</td><td>普通整数</td></tr><tr><td>INT</td><td>4 字节</td><td>较大整数</td></tr><tr><td>BIGINT</td><td>8 字节</td><td>大整数</td></tr><tr><td>FLOAT</td><td>4 字节</td><td>单精度浮点数</td></tr><tr><td>DOUBLE</td><td>8 字节</td><td>双精度浮点数</td></tr><tr><td>DECIMAL(精确数字 )</td><td>------</td><td>DECIMAL(10,2)</td></tr></tbody></table><h5 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串"><span>字符串</span></a></h5><table><thead><tr><th>类型</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>CHAR</td><td>1 ~ 255 字符</td><td>固定长度字符串</td></tr><tr><td>VARCHAR</td><td>1 ~ 65535 字符</td><td>不固定长度字符串</td></tr><tr><td>TEXT</td><td>1 ~ 65535 字符</td><td>不确定长度字符串</td></tr><tr><td>MEDIUMTEXT</td><td>1 ~ 1600 万 字符</td><td>不确定长度字符串</td></tr><tr><td>LONGTEXT</td><td>1 ~ 42 亿 字符</td><td>不确定长度字符串</td></tr></tbody></table><h5 id="日期" tabindex="-1"><a class="header-anchor" href="#日期"><span>日期</span></a></h5><table><thead><tr><th>类型</th><th>大小</th><th>说明</th></tr></thead><tbody><tr><td>DATE</td><td>3 字节</td><td>日期</td></tr><tr><td>TIME</td><td>3 字节</td><td>时间</td></tr><tr><td>YEAR</td><td>1 字节</td><td>年份</td></tr><tr><td>DATETIME</td><td>8 字节</td><td>日期时间</td></tr><tr><td>TIMESTAMP</td><td>4 字节</td><td>时间戳</td></tr></tbody></table><h5 id="枚举类型" tabindex="-1"><a class="header-anchor" href="#枚举类型"><span>枚举类型</span></a></h5><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="布尔类型" tabindex="-1"><a class="header-anchor" href="#布尔类型"><span>布尔类型</span></a></h5><ul><li><code>true</code> 和 <code>false</code> 会被映射成 <code>0</code> 和 <code>1</code></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">Boolean</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="约束参数" tabindex="-1"><a class="header-anchor" href="#约束参数"><span>约束参数</span></a></h4><table><thead><tr><th>约束名称</th><th>关键字</th><th>描述</th></tr></thead><tbody><tr><td>主键约束</td><td><code>PRIMARY KEY</code></td><td>字段值唯一，且不能为 <code>NULL</code></td></tr><tr><td>非空约束</td><td><code>NOT NULL</code></td><td>字段值不能为 <code>NULL</code></td></tr><tr><td>唯一约束</td><td><code>UNIQUE</code></td><td>字段值唯一，且可以为 <code>NULL</code></td></tr><tr><td>外键约束（不推荐）</td><td><code>FOREIGN KEY</code></td><td>保持关联数据的逻辑性</td></tr></tbody></table><h5 id="主键约束" tabindex="-1"><a class="header-anchor" href="#主键约束"><span>主键约束</span></a></h5><ul><li><p>要求字段的值在全表必须唯一，且不能为 <code>NULL</code> 值</p></li><li><p>建议一定要使用数字类型，因为数字的检索速度会非常快</p></li><li><p>如果主键是数字类型，还可以设置自动增长 <code>AUTO_INCREMENT</code></p></li></ul><h5 id="非空约束" tabindex="-1"><a class="header-anchor" href="#非空约束"><span>非空约束</span></a></h5><ul><li>要求字段的值不能为 <code>NULL</code> 值</li><li><code>NULL</code> 值是没有值，而不是空字符串</li><li>可以在后面添加默认值 <code>DEFAULT &quot;默认值&quot;</code></li></ul><h5 id="唯一约束" tabindex="-1"><a class="header-anchor" href="#唯一约束"><span>唯一约束</span></a></h5><ul><li>要求字段值如果不为 <code>NULL</code>，那么在全表必须唯一</li></ul><h5 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束"><span>外键约束</span></a></h5><ul><li>不推荐使用：如果行程外键闭环，将无法删除任何一张表的记录</li><li>用来保证关联数据的逻辑关系</li><li>写在字表上</li></ul><h4 id="表操作" tabindex="-1"><a class="header-anchor" href="#表操作"><span>表操作</span></a></h4><h5 id="创建表" tabindex="-1"><a class="header-anchor" href="#创建表"><span>创建表</span></a></h5><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> test<span class="token punctuation">(</span>
	列名<span class="token number">1</span> 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
	列名<span class="token number">2</span> 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
	列名<span class="token number">3</span> 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span>
<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token keyword">COMMENT</span><span class="token operator">=</span>表注释<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">USE</span> test<span class="token punctuation">;</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	sex <span class="token keyword">CHAR</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	birthday <span class="token keyword">DATE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	tel <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	remark <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="添加字段" tabindex="-1"><a class="header-anchor" href="#添加字段"><span>添加字段</span></a></h5><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名称
<span class="token keyword">ADD</span> 列<span class="token number">1</span> 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token keyword">ADD</span> 列<span class="token number">2</span> 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="修改字段" tabindex="-1"><a class="header-anchor" href="#修改字段"><span>修改字段</span></a></h5><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 不修改猎德名字</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名称
<span class="token keyword">MODIFY</span> 字段名 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 修改列的名字</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名称
CHANGE 原字段名 新字段名 数据类型 <span class="token punctuation">[</span>约束<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token keyword">COMMENT</span> 注释<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="删除字段" tabindex="-1"><a class="header-anchor" href="#删除字段"><span>删除字段</span></a></h5><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名称
<span class="token keyword">DROP</span> 列<span class="token number">1</span>，
<span class="token keyword">DROP</span> 列<span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="索引" tabindex="-1"><a class="header-anchor" href="#索引"><span>索引</span></a></h3><ul><li>一旦数据排序之后，查找的速度就会翻倍，现实世界和程序世界都是如此</li><li>设置索引后，数据库会对该索引字段排序，生成二叉树</li></ul><h4 id="使用原则" tabindex="-1"><a class="header-anchor" href="#使用原则"><span>使用原则</span></a></h4><ul><li>数据量很大，而且经常被查询的数据表可以设置索引</li><li>索引只添加在经常被用作检索条件的字段上面</li><li>不要在大字段（字符很长）上创建索引</li></ul><h4 id="建表时添加" tabindex="-1"><a class="header-anchor" href="#建表时添加"><span>建表时添加</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名称<span class="token punctuation">(</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>
  <span class="token keyword">INDEX</span> <span class="token punctuation">[</span>索引名称<span class="token punctuation">]</span><span class="token punctuation">(</span>字段<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 例子</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> student<span class="token punctuation">(</span>
	id <span class="token keyword">INT</span> <span class="token keyword">UNSIGNED</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
	name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	isManage <span class="token keyword">Boolean</span> <span class="token keyword">DEFAULT</span><span class="token punctuation">(</span><span class="token boolean">FALSE</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	sex <span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	create_time <span class="token keyword">TIMESTAMP</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>
	<span class="token keyword">INDEX</span> idx_name<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="表存在时添加" tabindex="-1"><a class="header-anchor" href="#表存在时添加"><span>表存在时添加</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 方式一</span>
<span class="token keyword">CREATE</span> <span class="token keyword">INDEX</span> 索引名称 <span class="token keyword">ON</span> 表名<span class="token punctuation">(</span>字段<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 方式二</span>
<span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> 表名 <span class="token keyword">ADD</span> <span class="token keyword">INDEX</span> <span class="token punctuation">[</span>索引名<span class="token punctuation">]</span><span class="token punctuation">(</span>字段名<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="基本查询" tabindex="-1"><a class="header-anchor" href="#基本查询"><span>基本查询</span></a></h2><blockquote><p>总执行顺序：<code>FROM</code> -&gt; <code>WHERE</code> -&gt; <code>GROUP BY</code> -&gt; <code>SELECT</code> -&gt; <code>ORDER BY</code> -&gt; <code>LIMIT</code></p></blockquote><h3 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h3><blockquote><p>基本的查询语句由 <code>SELECT</code> 和 <code>From</code> 关键字组成</p></blockquote><ul><li><code>SELECT</code> 语句屏蔽了物理层的操作，用户不必关心数据的真实存储，教育数据库高效的查找数据</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> 字段<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="别名" tabindex="-1"><a class="header-anchor" href="#别名"><span>别名</span></a></h3><blockquote><p>通常情况下，<code>SELECT </code> 子句中使用了表达式，那么这列的名字就默认为表达式，因此需要一种对列名重命名的机制</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> title<span class="token punctuation">,</span>price<span class="token operator">*</span><span class="token number">12</span> <span class="token keyword">AS</span> <span class="token string">&quot;new_price&quot;</span> <span class="token keyword">FROM</span> 表名<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="分页" tabindex="-1"><a class="header-anchor" href="#分页"><span>分页</span></a></h3><blockquote><p>如果结果集的记录很多，则可以使用 <code>LIMIT</code> 关键字限定结果集数量</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">LIMIT</span> 起始位置<span class="token punctuation">,</span>偏移量<span class="token punctuation">;</span>

<span class="token comment"># 如果 LIMIT 子句只有一个参数，他表示偏移量，起始值默认为 0</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">LIMIT</span> 偏移量<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="排序" tabindex="-1"><a class="header-anchor" href="#排序"><span>排序</span></a></h3><blockquote><p>查询语句默认不会对结果集进行排序，如果想让结果集按照某种顺序排列，则需使用 <code>ORDER BY</code> 子句</p></blockquote><ul><li>数字类型：按照数字大小排序</li><li>字符串：按照字符集序号排序</li><li>日期类型：按照日期大小排序</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># ASC  升序（默认）</span>
<span class="token comment"># DESC 降序</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> 列名 <span class="token punctuation">[</span><span class="token keyword">ASC</span><span class="token operator">|</span><span class="token keyword">DESC</span><span class="token punctuation">]</span>

<span class="token comment"># 示例</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> goods <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment"># 多字段排序：使用 ORDER BY 规定首要排序条件和次要排序条件，数据库会按照首要条件排序，当首要排序内容相同时，按照次要条件对相同内容进行排序，如果所有排序条件都相同，则按主键升序排序</span>
<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> goods <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> price1 <span class="token keyword">DESC</span><span class="token punctuation">,</span> price2 <span class="token keyword">ASC</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="去重" tabindex="-1"><a class="header-anchor" href="#去重"><span>去重</span></a></h3><blockquote><p>假如 <code>SELECT</code> 语句中没有选择主键字段，则结果集中可能出现完全一致的数据，如果要去除重复的数据，可以使用 <code>DISTINCT</code> 关键字来实现</p></blockquote><ul><li>使用 <code>DISTINCT</code> 的 <code>SELECT</code> 子句中如果查询多个字段，去除重复记录的功能会失效</li><li><code>DISTINCT</code> 关键字只能在 <code>SELECT</code> 子句中使用一次，并且必须写在第一个参数前</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">DISTINCT</span> 字段 <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="条件" tabindex="-1"><a class="header-anchor" href="#条件"><span>条件</span></a></h3><blockquote><p>许多时候，用户感兴趣的只是逻辑表记录中能够满足一种或某几种条件的记录，这类条件要用 <code>WHERE</code> 子句来实现数据的筛选</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> 条件<span class="token number">1</span> <span class="token punctuation">[</span><span class="token operator">AND</span><span class="token operator">|</span><span class="token operator">OR</span><span class="token punctuation">]</span> 条件<span class="token number">2</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">WHERE</span> <span class="token punctuation">(</span>条件<span class="token number">1</span> <span class="token punctuation">[</span><span class="token operator">AND</span><span class="token operator">|</span><span class="token operator">OR</span><span class="token punctuation">]</span> 条件<span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token operator">AND</span><span class="token operator">|</span><span class="token operator">OR</span><span class="token punctuation">]</span> 条件<span class="token number">3</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong></p><ul><li><p>聚合函数不能出现在 <code>WHERE</code> 子句中</p></li><li><p>任何数对 <code>NULL</code> 进行运算都返回 <code>NULL</code>，可以使用自带函数 <code>IFNULL(null,0)</code> 来避免 <code>NULL</code> 运算</p></li><li><p>条件执行的顺序是从左到右的，应该把索引条件或者筛选记录最多的条件写在左侧</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 运算符</span>

<span class="token comment">## 数学运算符 + - * / %</span>

<span class="token comment">## 比较运算符</span>
<span class="token comment">### &gt; &gt;= &lt; &lt;= = != IN</span>
<span class="token comment">### 包含（IN）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> 字段名 <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;前端&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;后端&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">### 为空（IS NULL）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> 字段名 <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment">### 不为空（IS NOT NULL）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> 字段名 <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
<span class="token comment">### 范围（BETWEEN AND）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> amount <span class="token operator">BETWEEN</span> <span class="token number">200</span> <span class="token operator">AND</span> <span class="token number">300</span><span class="token punctuation">;</span>
<span class="token comment">### 模糊查询（LIKE）: 百分号匹配多个字符，下划线匹配一个字符</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&quot;A%&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> name <span class="token operator">LIKE</span> <span class="token string">&quot;_A&quot;</span><span class="token punctuation">;</span>
<span class="token comment">### 正则表达式（REGEXP）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> name <span class="token operator">REGEXP</span> <span class="token string">&quot;[a-zA-Z{4}]&quot;</span><span class="token punctuation">;</span>

<span class="token comment">## 逻辑运算符</span>
<span class="token comment">### 与（AND）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">18</span> <span class="token operator">AND</span> sex <span class="token operator">=</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">;</span>
<span class="token comment">### 或（OR）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token operator">OR</span> age <span class="token operator">&gt;</span> <span class="token number">60</span><span class="token punctuation">;</span>
<span class="token comment">### 非（NOT）</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> <span class="token operator">NOT</span> sex <span class="token operator">=</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">;</span>
<span class="token comment">### 异或（XOR）：当任意一个操作数为NULL时,返回值为NULL；对于非NULL的操作数,如果两个的逻辑真假值相异，则返回结果为1，否则为0，就是两个不能同时成立,也不能同时不成立,只成立其中一个条件</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 数据表 <span class="token keyword">WHERE</span> age <span class="token operator">&gt;</span> <span class="token number">18</span> <span class="token operator">XOR</span> sex <span class="token operator">=</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">;</span>

<span class="token comment">## 二进制按位运算：实质上是将参与运算的两个操作数，按对应的二进制数逐位进行逻辑运算</span>
<span class="token comment">### &amp;：  按位与</span>
<span class="token comment">### |：  按位或</span>
<span class="token comment">### ~：  按位取反</span>
<span class="token comment">### ^：  按位异或</span>
<span class="token comment">### &lt;&lt;： 左移</span>
<span class="token comment">### &gt;&gt;： 右移</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合并" tabindex="-1"><a class="header-anchor" href="#合并"><span>合并</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">UNION</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="高级查询" tabindex="-1"><a class="header-anchor" href="#高级查询"><span>高级查询</span></a></h2><h3 id="聚合函数" tabindex="-1"><a class="header-anchor" href="#聚合函数"><span>聚合函数</span></a></h3><blockquote><p>又称作汇总函数，在数据的查询分析中应用十分广泛。可以对数据求和、求最大值和最小值、求平均值等等。默认情况下，聚合函数是对全表范围内的数据做统计</p></blockquote><h4 id="平均值-avg" tabindex="-1"><a class="header-anchor" href="#平均值-avg"><span>平均值（AVG）</span></a></h4><blockquote><p>用于获取非空值的平均值，非数字数据统计结果为 <code>0</code></p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>amount1<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>amount2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>amount1<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>amount2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> avg <span class="token keyword">from</span> t_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="求和-sum" tabindex="-1"><a class="header-anchor" href="#求和-sum"><span>求和（SUM）</span></a></h4><blockquote><p><code>SUM</code> 函数用来求和，只能用于数字类型，字符类型的统计结果为 <code>0</code>，日期类型统计结果是毫秒数相加</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">from</span> 数据表<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">from</span> 数据表 <span class="token keyword">WHERE</span> name <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&#39;name1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="最大值-max" tabindex="-1"><a class="header-anchor" href="#最大值-max"><span>最大值（MAX）</span></a></h4><blockquote><p>用于获得非空值的最大值</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>amount<span class="token punctuation">)</span> <span class="token keyword">from</span> 数据表<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>amount1<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>amount2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> 数据表<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>amount1<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>amount2<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> 数据表 <span class="token keyword">WHERE</span> name <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&#39;name1&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;name2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> <span class="token keyword">AS</span> sum<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> max <span class="token keyword">from</span> t_emp<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>LENGTH<span class="token punctuation">(</span>ename<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">from</span> t_emp<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="最小值-mim" tabindex="-1"><a class="header-anchor" href="#最小值-mim"><span>最小值（MIM）</span></a></h4><blockquote><p>用于获取非空值的最小值</p></blockquote><ul><li>代码示例如 <code>MAX</code></li></ul><h4 id="计数-count" tabindex="-1"><a class="header-anchor" href="#计数-count"><span>计数（COUNT）</span></a></h4><blockquote><p><code>COUNT(*)</code>：用于获取包含空值的记录数</p><p><code>COUNT(字段名)</code>：用于获取规定字段不为空值的记录数</p></blockquote><h3 id="分组查询" tabindex="-1"><a class="header-anchor" href="#分组查询"><span>分组查询</span></a></h3><blockquote><p><code>GROUP BY</code> 子句的作用是通过一定的规则将一个数据集划分成若干个小的区域，然后针对每个小区域分别进行数据汇总处理</p></blockquote><ul><li>基于数据匹配，查询语句中如果含有 <code>GROUP BY</code> 子句，那么 <code>SELECT</code> 子句中的内容 <ul><li>可以包含聚合函数，或者 <code>GROUP BY</code> 子句的分组列</li><li>其余内容均不可以出现在 <code>SELECT</code> 子句中</li></ul></li></ul><h4 id="简单分组" tabindex="-1"><a class="header-anchor" href="#简单分组"><span>简单分组</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 根据部门编号，计算不同部门的平均底薪（底薪四舍五入为整数）</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="逐级分组" tabindex="-1"><a class="header-anchor" href="#逐级分组"><span>逐级分组</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 逐级分组：查询每个部门里，每种职位的人员数量和平均底薪，并按部门编号升序排列</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span>job<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">,</span>job <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="汇总计算" tabindex="-1"><a class="header-anchor" href="#汇总计算"><span>汇总计算</span></a></h4><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 对分组结果集再次做汇总计算</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno <span class="token keyword">WITH ROLLUP</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字段拼接" tabindex="-1"><a class="header-anchor" href="#字段拼接"><span>字段拼接</span></a></h4><blockquote><p><code>GROUP_CONCAT</code> 函数可以把分组查询中对的某个字段拼接成一个字符串</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查询某个部门内底薪超过2000元的人数和员工姓名</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span>GROUP_CONCAT<span class="token punctuation">(</span>ename<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> sal <span class="token operator">&gt;=</span> <span class="token number">2000</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="having-子句" tabindex="-1"><a class="header-anchor" href="#having-子句"><span>Having 子句</span></a></h4><blockquote><p><code>having</code> 子句可以在分组之后筛选数据</p></blockquote><ul><li><p><code>where</code> 子句在聚合前先筛选记录，也就是说作用在 <code>group by</code> 和 <code>having</code>字句前。</p></li><li><p><code>having</code> 子句在聚合后对组记录进行筛选，真实表中没有此数据，这些数据是通过一些函数产生的</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查询部门平均底薪超过 2000 的部门编号</span>
<span class="token keyword">SELECT</span> deptno <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno <span class="token keyword">HAVING</span> <span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">2000</span><span class="token punctuation">;</span>

<span class="token comment"># 查询每个部门中，1982年以后入职的员工超过两个人的部门编号</span>
<span class="token keyword">SELECT</span> deptno <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> hiredate <span class="token operator">&gt;</span> <span class="token string">&#39;1982-01-01&#39;</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno <span class="token keyword">HAVING</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">2</span><span class="token punctuation">;</span>

<span class="token comment"># 按照查询字段中的第一个字段进行分组</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token number">1</span> HAVAING deptno <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="表连接" tabindex="-1"><a class="header-anchor" href="#表连接"><span>表连接</span></a></h3><ul><li>从多张表中提取数据，必须指定关联条件</li><li>如果不定义关联条件，就会出现无条件链接，两张表的数据会交叉连接，产生笛卡尔积</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 连接员工表和部门表，查询员工的部门信息</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>empno<span class="token punctuation">,</span>e<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>d<span class="token punctuation">.</span>dname <span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno <span class="token operator">=</span> d<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="内连接" tabindex="-1"><a class="header-anchor" href="#内连接"><span>内连接</span></a></h4><blockquote><p>是最常见的一种表连接，用于查询多张关系表符合连接条件的记录，结果集中只保留符合连接条件的记录，<code>WHERE</code> 和 <code>ON</code> 效果相同</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 语法(INNER关键字可省略)</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span>
<span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件
<span class="token punctuation">[</span><span class="token keyword">INNER</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">3</span> <span class="token keyword">ON</span> 条件
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>

<span class="token comment"># 衍生语法</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">WHERE</span> 连接条件<span class="token punctuation">;</span>
<span class="token keyword">SELECT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span> <span class="token keyword">WHERE</span> 连接条件<span class="token punctuation">;</span>

<span class="token comment"># 示例：根据员工表，部门表，工资等级表 查询每个员工的工号、姓名、部门名称、底薪、职位、工资等级</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>empno<span class="token punctuation">,</span>e<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>d<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>e<span class="token punctuation">.</span>sal<span class="token punctuation">,</span>e<span class="token punctuation">.</span>job<span class="token punctuation">,</span>s<span class="token punctuation">.</span>grade
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">JOIN</span> t_salgrade s <span class="token keyword">ON</span> e<span class="token punctuation">.</span>sal <span class="token operator">BETWEEN</span> s<span class="token punctuation">.</span>losal <span class="token operator">AND</span> hisal<span class="token punctuation">;</span>

<span class="token comment"># 查询与 SCOTT 部门相同对的员工有谁</span>
<span class="token keyword">SELECT</span> e2<span class="token punctuation">.</span>name <span class="token keyword">FROM</span> t_emp e1 <span class="token keyword">JOIN</span> t_emp e2 <span class="token keyword">ON</span> e1<span class="token punctuation">.</span>deptno<span class="token operator">=</span>e2<span class="token punctuation">.</span>deptno <span class="token keyword">WHERE</span> e1<span class="token punctuation">.</span>ename<span class="token operator">=</span><span class="token string">&quot;SCOTT&quot;</span> <span class="token operator">AND</span> e2<span class="token punctuation">.</span>ename<span class="token operator">!=</span><span class="token string">&quot;SCOTT&quot;</span><span class="token punctuation">;</span>

<span class="token comment"># 查询底薪超过公司平均底薪的员工信息</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>ename <span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> avg <span class="token keyword">FROM</span> t_emp<span class="token punctuation">)</span> t <span class="token keyword">ON</span> e<span class="token punctuation">.</span>sal <span class="token operator">&gt;=</span> t<span class="token punctuation">.</span>avg<span class="token punctuation">;</span>

<span class="token comment"># 查询 RESEARCH 部门的人数、最高底薪、最低底薪、平均底薪、平均工龄</span>
<span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MAX</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> FLOOR<span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>hiredate<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span><span class="token string">&quot;RESEARCH&quot;</span><span class="token punctuation">;</span>

<span class="token comment"># 查询每种职业的最高工资、最低工资、平均工资、最高工资等级、最低工资等级</span>
<span class="token keyword">SELECT</span>
job<span class="token punctuation">,</span>
<span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">MAX</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal <span class="token operator">+</span> IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> max<span class="token punctuation">,</span>
<span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">MIN</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal <span class="token operator">+</span> IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> min<span class="token punctuation">,</span>
<span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> avg<span class="token punctuation">,</span>
<span class="token function">MAX</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>grade<span class="token punctuation">)</span> max_grade<span class="token punctuation">,</span>
<span class="token function">MIN</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>grade<span class="token punctuation">)</span> min_grade
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> t_salgrade s
<span class="token keyword">ON</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>sal <span class="token operator">+</span> IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">BETWEEN</span> s<span class="token punctuation">.</span>losal <span class="token operator">AND</span> s<span class="token punctuation">.</span>hisal
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job<span class="token punctuation">;</span>

<span class="token comment"># 查询每个底薪超过部门平均底薪的员工信息</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>empno<span class="token punctuation">,</span>e<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>e<span class="token punctuation">.</span>sal
<span class="token keyword">FROM</span> t_emp e
<span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> avg <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">)</span> d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token operator">AND</span> e<span class="token punctuation">.</span>sal <span class="token operator">&gt;=</span> d<span class="token punctuation">.</span>avg<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="外连接" tabindex="-1"><a class="header-anchor" href="#外连接"><span>外连接</span></a></h4><blockquote><p>不管符不符合连接条件，记录都要保留在结果集中，<code>WHERE</code> 和 <code>ON</code> 效果 <strong>不</strong> 相同</p></blockquote><ul><li>左外连接：<code>LEFT JOIN </code>，保留左表的所有记录去和右表链接 <ul><li>右表无符合连接条件则出 <code>NULL</code> 值与左表连接</li></ul></li><li>右外连接：<code>RIGHT </code>，保留右表的所有记录去和左表链接 <ul><li>左表无符合连接条件则出 <code>NULL</code> 值与右表连接</li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 左外连接</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>empno<span class="token punctuation">,</span> e<span class="token punctuation">.</span>ename<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dname
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>

<span class="token comment"># 右外连接</span>
<span class="token keyword">SELECT</span> e<span class="token punctuation">.</span>empno<span class="token punctuation">,</span> e<span class="token punctuation">.</span>ename<span class="token punctuation">,</span> d<span class="token punctuation">.</span>dname
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>

<span class="token comment"># 查询每个部门的名称和部门的人数</span>
<span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>dname<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>deptno<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> t_dept d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>

<span class="token comment"># 查询每个部门的名称和部门的人数？如果没有部门的员工，部门名称用 NULL 代替</span>
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>dname<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>deptno<span class="token punctuation">)</span>
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">RIGHT</span> <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>deptno<span class="token punctuation">)</span>
<span class="token keyword">UNION</span>
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> d<span class="token punctuation">.</span>dname<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> d<span class="token punctuation">.</span>deptno<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询每名员工的编号、姓名、部门、月薪、工资等级、工龄、上司编号、上司姓名、上司部门</span>
<span class="token keyword">SELECT</span>
e1<span class="token punctuation">.</span>empno<span class="token punctuation">,</span>e1<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>d1<span class="token punctuation">.</span>dname<span class="token punctuation">,</span>e1<span class="token punctuation">.</span>sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>e1<span class="token punctuation">.</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
s<span class="token punctuation">.</span>grade<span class="token punctuation">,</span>FLOOR<span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>e1<span class="token punctuation">.</span>hiredate<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
e2<span class="token punctuation">.</span>empno<span class="token punctuation">,</span>e2<span class="token punctuation">.</span>ename<span class="token punctuation">,</span>d2<span class="token punctuation">.</span>dname
<span class="token keyword">FROM</span> t_emp e1
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_emp e2 <span class="token keyword">ON</span> e1<span class="token punctuation">.</span>mgr<span class="token operator">=</span>e2<span class="token punctuation">.</span>empno
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d1 <span class="token keyword">ON</span> e1<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d1<span class="token punctuation">.</span>deptno
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_salgrade s <span class="token keyword">ON</span> <span class="token punctuation">(</span>e1<span class="token punctuation">.</span>sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>e1<span class="token punctuation">.</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">BETWEEN</span> s<span class="token punctuation">.</span>losal <span class="token operator">AND</span> s<span class="token punctuation">.</span>hisal
<span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d2 <span class="token keyword">ON</span> e2<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d2<span class="token punctuation">.</span>deptno<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="子查询" tabindex="-1"><a class="header-anchor" href="#子查询"><span>子查询</span></a></h3><blockquote><p>子查询是一种查询中嵌套查询的语句</p></blockquote><ul><li>按位置分类 <ul><li><code>WHERE</code> 子句：每查询一条记录的时候都要执行一次，查询效率很低**（不推荐）**</li><li><code>FROM</code> 子句，只会执行一次，查询效率很高**（推荐）**</li><li><code>SELECT</code> 子句：每输出一条记录的时候都要执行一次，查询效率很低**（不推荐）**</li></ul></li><li>按结果集数量分类 <ul><li>单行子查询：结果集只有一条记录 <ul><li>能出现在所有位置上</li></ul></li><li>多行子查询：结果集有多行记录 <ul><li>只能出现在 <code>WHERE</code> 和 <code>FROM</code> 子句中，不可以出现在 <code>SELECT</code> 子句中</li></ul></li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查询底薪超过公司平均水平的员工信息</span>
<span class="token keyword">SELECT</span> empno<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>sal
<span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> sal <span class="token operator">&gt;=</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> <span class="token keyword">FROM</span> t_emp<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询 FORD 和 MARTIN 两个人的同事</span>
<span class="token keyword">SELECT</span> ename <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> deptno <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> deptno <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> ename <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&quot;FORD&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MARTIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">AND</span> ename <span class="token operator">NOT</span> <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&quot;FORD&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MARTIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>WHERE</code> 子句中的多行子查询 <ul><li>关键字 <ul><li><code>IN</code>：包含</li><li><code>ALL</code>：全部</li><li><code>ANY</code>：至少一个</li><li><code>EXISTS</code>：把原来在子查询之外的条件判断写到子查询内 <ul><li>语法：<code>SELECT ... FROM 表名 WHERE [NOT] EXISTS (子查询)</code></li></ul></li></ul></li></ul></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 查询比 FROD 和 MARTIN 底薪都高的员工信息</span>
<span class="token keyword">SELECT</span> ename <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> sal <span class="token operator">&gt;</span> <span class="token keyword">ALL</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> sal <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> ename <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&quot;FORD&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MARTIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询比 FROD 和 MARTIN 至少一个底薪高的员工信息</span>
<span class="token keyword">SELECT</span> ename <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> sal <span class="token operator">&gt;</span> <span class="token keyword">ANY</span><span class="token punctuation">(</span><span class="token keyword">SELECT</span> sal <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> ename <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token string">&quot;FORD&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;MARTIN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># 查询工资等级是 3 级或 4 级的员工信息</span>
<span class="token keyword">SELECT</span> empno<span class="token punctuation">,</span>ename<span class="token punctuation">,</span>sal <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> <span class="token keyword">EXISTS</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> grade <span class="token keyword">FROM</span> t_salgrade <span class="token keyword">WHERE</span> sal <span class="token operator">BETWEEN</span> losal <span class="token operator">AND</span> hisal <span class="token operator">AND</span> grade <span class="token operator">IN</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="写入操作" tabindex="-1"><a class="header-anchor" href="#写入操作"><span>写入操作</span></a></h2><h3 id="添加-insert" tabindex="-1"><a class="header-anchor" href="#添加-insert"><span>添加(INSERT)</span></a></h3><ul><li>可以在 <code>VALUES</code> 中写入子查询</li><li><code>IGNORE</code>：让 <code>INSERT</code> 只插入数据库不存在的记录</li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 语法</span>
<span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>字段<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span>值<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> <span class="token keyword">INTO</span> 表名<span class="token punctuation">(</span>字段<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span>值<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>值<span class="token number">1</span><span class="token punctuation">,</span>值<span class="token number">2</span><span class="token punctuation">,</span>值<span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>

<span class="token comment"># 方言语法</span>
<span class="token keyword">INSERT</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> <span class="token keyword">INTO</span> 表名 <span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改-update" tabindex="-1"><a class="header-anchor" href="#修改-update"><span>修改(UPDATE)</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 语法</span>
<span class="token keyword">UPDATE</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> 表名
<span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span><span class="token operator">=</span>值<span class="token number">3</span><span class="token punctuation">,</span>
<span class="token punctuation">[</span><span class="token keyword">WHERE</span> 修改条件<span class="token number">1.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">LIMIT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 内连接语法</span>
<span class="token keyword">UPDATE</span> 表<span class="token number">1</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件 <span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span><span class="token operator">=</span>值<span class="token number">3</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>
<span class="token keyword">UPDATE</span> 表<span class="token number">1</span><span class="token punctuation">,</span>表<span class="token number">2</span> <span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span>字段<span class="token number">3</span><span class="token operator">=</span>值<span class="token number">3</span> <span class="token keyword">WHERE</span> 连接条件<span class="token punctuation">;</span>

<span class="token comment"># 外连接语法</span>
<span class="token keyword">UPDATE</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">LEFT</span><span class="token operator">|</span><span class="token keyword">RIGHT</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 连接条件 <span class="token keyword">SET</span> 字段<span class="token number">1</span><span class="token operator">=</span>值<span class="token number">1</span><span class="token punctuation">,</span>字段<span class="token number">2</span><span class="token operator">=</span>值<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">;</span>


<span class="token comment"># 把每个员工的编号和上司的编号加1，用 ORDER BY 子句完成</span>
<span class="token keyword">UPDATE</span> t_emp <span class="token keyword">SET</span> empno<span class="token operator">=</span>empno<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>mgr<span class="token operator">=</span>mgr<span class="token operator">+</span><span class="token number">1</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> empno <span class="token keyword">DESC</span><span class="token punctuation">;</span>

<span class="token comment"># 把月收入前三名对的员工底薪减100元，用 LIMIT 子句完成</span>
<span class="token keyword">UPDATE</span> t_emp <span class="token keyword">SET</span> sal<span class="token operator">=</span>sal<span class="token operator">-</span><span class="token number">100</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">3</span><span class="token punctuation">;</span>

<span class="token comment"># 把 10 部门中，工龄超过 20 年的员工，底薪增加 200 元</span>
<span class="token keyword">UPDATE</span> t_emp <span class="token keyword">SET</span> sal<span class="token operator">=</span>sal<span class="token operator">+</span><span class="token number">200</span> <span class="token keyword">WHERE</span> deptno<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">AND</span> FLOOR<span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>hiredate<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment"># 把 ALLEN 调往 RESEARCH 部门，职务调整为 ANALYST</span>
<span class="token keyword">UPDATE</span> t_emp e <span class="token keyword">JOIN</span> t_dept d
<span class="token keyword">SET</span> e<span class="token punctuation">.</span>job<span class="token operator">=</span><span class="token string">&quot;ANALYST&quot;</span><span class="token punctuation">,</span>e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno<span class="token punctuation">,</span>d<span class="token punctuation">.</span>loc<span class="token operator">=</span><span class="token string">&quot;北京&quot;</span>
<span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">&quot;ALLEN&quot;</span> <span class="token operator">AND</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span><span class="token string">&quot;RESEARCH&quot;</span>

<span class="token comment"># 把底薪低于公司平均底薪的员工，底薪增加 150 元</span>
<span class="token keyword">UPDATE</span> t_emp e
<span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> <span class="token keyword">AS</span> avg <span class="token keyword">FROM</span> t_emp<span class="token punctuation">)</span> t
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>sal <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>avg <span class="token keyword">SET</span> e<span class="token punctuation">.</span>sal<span class="token operator">=</span>e<span class="token punctuation">.</span>sal<span class="token operator">+</span><span class="token number">150</span><span class="token punctuation">;</span>

<span class="token comment"># 把没有部门的员工，或者 SALES 部门低于 2000 元底薪的员工，都调往 20 部门</span>
<span class="token keyword">UPDATE</span> t_emp e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">SET</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span><span class="token number">20</span> <span class="token keyword">WHERE</span> e<span class="token punctuation">.</span>deptno <span class="token operator">IS</span> <span class="token boolean">NULL</span> <span class="token operator">OR</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span>dname<span class="token operator">=</span><span class="token string">&quot;SALES&quot;</span> <span class="token operator">AND</span> e<span class="token punctuation">.</span>sal <span class="token operator">&lt;</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除-delete" tabindex="-1"><a class="header-anchor" href="#删除-delete"><span>删除(DELETE)</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 语法</span>
<span class="token keyword">DELETE</span> <span class="token punctuation">[</span><span class="token keyword">IGNORE</span><span class="token punctuation">]</span> <span class="token keyword">FROM</span> 表名
<span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token number">1</span><span class="token punctuation">,</span>条件<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">LIMIT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 表内连接语法</span>
<span class="token keyword">DELETE</span> 表<span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件
<span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token number">1</span><span class="token punctuation">,</span>条件<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">LIMIT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 表外内连接语法</span>
<span class="token keyword">DELETE</span> 表<span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token keyword">FROM</span> 表<span class="token number">1</span> <span class="token punctuation">[</span><span class="token keyword">LEFT</span><span class="token operator">|</span><span class="token keyword">RIGHT</span><span class="token punctuation">]</span> <span class="token keyword">JOIN</span> 表<span class="token number">2</span> <span class="token keyword">ON</span> 条件
<span class="token punctuation">[</span><span class="token keyword">WHERE</span> 条件<span class="token number">1</span><span class="token punctuation">,</span>条件<span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>
<span class="token punctuation">[</span><span class="token keyword">LIMIT</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment"># 删除 10 部门中，工龄超过 20 年的员工记录</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> deptno<span class="token operator">=</span><span class="token number">10</span> <span class="token operator">AND</span> FLOOR<span class="token punctuation">(</span>DATEDIFF<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>hiredate<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">365</span><span class="token punctuation">)</span><span class="token operator">&gt;=</span><span class="token number">20</span><span class="token punctuation">;</span>

<span class="token comment"># 删除 20 部门中，工资最高的员工记录</span>
<span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> deptno<span class="token operator">=</span><span class="token number">20</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> <span class="token punctuation">(</span>sal<span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>comm<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">DESC</span> <span class="token keyword">LIMIT</span> <span class="token number">1</span><span class="token punctuation">;</span>

<span class="token comment"># 删除 SALES 部门和该部门的全部员工记录</span>
<span class="token keyword">DELETE</span> e<span class="token punctuation">,</span>d <span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> t_dept d <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span><span class="token string">&quot;SALES&quot;</span><span class="token punctuation">;</span>

<span class="token comment"># 删除每个低于部门平均底薪的员工记录</span>
<span class="token keyword">DELETE</span> e <span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> deptno<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>sal<span class="token punctuation">)</span> <span class="token keyword">AS</span> sal <span class="token keyword">FROM</span> t_emp <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> deptno<span class="token punctuation">)</span> t <span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>t<span class="token punctuation">.</span>deptno <span class="token operator">AND</span> e<span class="token punctuation">.</span>sal <span class="token operator">&lt;</span> t<span class="token punctuation">.</span>sal<span class="token punctuation">;</span>

<span class="token comment"># 删除员工 KING 和他的下属的员工记录，用表连接实现</span>
<span class="token keyword">DELETE</span> e
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">JOIN</span>
<span class="token punctuation">(</span><span class="token keyword">SELECT</span> empno <span class="token keyword">FROM</span> t_emp <span class="token keyword">WHERE</span> ename<span class="token operator">=</span><span class="token string">&quot;KING&quot;</span><span class="token punctuation">)</span> t
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>mgr<span class="token operator">=</span>t<span class="token punctuation">.</span>empno <span class="token operator">OR</span> e<span class="token punctuation">.</span>empno<span class="token operator">=</span>t<span class="token punctuation">.</span>empno<span class="token punctuation">;</span>

<span class="token comment"># 删除 SALES 部门的员工，以及没有部门的员工</span>
<span class="token keyword">DELETE</span> e
<span class="token keyword">FROM</span> t_emp e <span class="token keyword">LEFT</span> <span class="token keyword">JOIN</span> t_dept d
<span class="token keyword">ON</span> e<span class="token punctuation">.</span>deptno<span class="token operator">=</span>d<span class="token punctuation">.</span>deptno <span class="token keyword">WHERE</span> d<span class="token punctuation">.</span>dname<span class="token operator">=</span><span class="token string">&quot;SALES&quot;</span> <span class="token operator">OR</span> e<span class="token punctuation">.</span>deptno <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>快速删除数据表全部记录 <ul><li><code>DELETE</code> 语句是在事务机制下删除记录，删除记录之前，先把将要删除的记录保存到日志文件里，然后再删除记录</li><li><code>TRUNCATE</code> 语句在事务机制之外删除记录，速度远超 <code>DELETE</code> 语句</li><li>语法：<code>TRUNCATE TABLE 表名;</code></li></ul></li></ul><h2 id="基本函数" tabindex="-1"><a class="header-anchor" href="#基本函数"><span>基本函数</span></a></h2><h3 id="数字函数" tabindex="-1"><a class="header-anchor" href="#数字函数"><span>数字函数</span></a></h3><table><thead><tr><th>函数</th><th>功能</th><th>用例</th></tr></thead><tbody><tr><td><code>ABS</code></td><td>绝对值</td><td><code>ABS(-100)</code></td></tr><tr><td><code>ROUND</code></td><td>四舍五入</td><td><code>ROUND(4.62)</code></td></tr><tr><td><code>FLOOR</code></td><td>强制舍位到最近的整数</td><td><code>FLOOR(9.9)</code></td></tr><tr><td><code>CEIL</code></td><td>强制进位到最近的整数</td><td><code>CEIL(3.2)</code></td></tr><tr><td><code>POWER</code></td><td>幂函数</td><td><code>POWER(2,3)</code></td></tr><tr><td><code>LOG</code></td><td>对数函数</td><td><code>LOG(7,3)</code></td></tr><tr><td><code>LN</code></td><td>对数函数（已 <code>e</code> 为底）</td><td><code>LN(10)</code></td></tr></tbody></table><table><thead><tr><th>函数</th><th>功能</th><th>用例</th></tr></thead><tbody><tr><td><code>SQRT</code></td><td>开平方</td><td><code>SQRT(9)</code></td></tr><tr><td><code>PI</code></td><td>圆周率</td><td><code>PI()</code></td></tr><tr><td><code>SIN</code></td><td>三角函数</td><td><code>SIN(1)</code></td></tr><tr><td><code>COS</code></td><td>三角函数</td><td><code>COS(1)</code></td></tr><tr><td><code>TAN</code></td><td>三角函数</td><td><code>TAN(1)</code></td></tr><tr><td><code>COT</code></td><td>三角函数</td><td><code>COT(1)</code></td></tr><tr><td><code>RADIANS</code></td><td>角度转弧度</td><td><code>RADIANS(30)</code></td></tr><tr><td><code>DEGREES</code></td><td>角度转弧度</td><td><code>DEGREES(1)</code></td></tr></tbody></table><h3 id="字符函数" tabindex="-1"><a class="header-anchor" href="#字符函数"><span>字符函数</span></a></h3><table><thead><tr><th>函数</th><th>功能</th><th>用例</th></tr></thead><tbody><tr><td><code>LOWER</code></td><td>转换为小写函数</td><td><code>LOWER(ename)</code></td></tr><tr><td><code>UPPER</code></td><td>转换为大写函数</td><td><code>UPPER(ename)</code></td></tr><tr><td><code>LENGTH</code></td><td>字符数量</td><td><code>LENGTH(ename)</code></td></tr><tr><td><code>CONCAT</code></td><td>连接字符串</td><td><code>CONCAT(sal,&quot;$&quot;,&quot;%,&quot;&amp;&quot;)</code></td></tr><tr><td><code>INSTR</code></td><td>字符串出现的位置</td><td><code>INSTR(ename,&quot;A&quot;)</code></td></tr><tr><td><code>INSERT(原字符串,要插入的位置,要覆盖的字符个数,用来进行插入或覆盖的字符串)</code></td><td>插入/替换字符串</td><td><code>INSERT(&quot;您好&quot;,1,0,&quot;先生&quot;)</code></td></tr><tr><td><code>REPLACE(原字符串,要被替换的字符,用来替换的字符)</code></td><td>替换字符</td><td><code>REPLACR(&quot;你好先生&quot;,&quot;先生&quot;,&quot;女士&quot;)</code></td></tr><tr><td><code>SUBSTR(原字符串,开始位置,结束位置)</code></td><td>截取字符串</td><td><code>SUBSTR(&quot;你好世界&quot;,3,4)</code></td></tr><tr><td><code>SUBSTRING(原字符串,开始位置,截取长度)</code></td><td>截取字符串</td><td><code>SUBSTRING(&quot;你好世界&quot;,3,4)</code></td></tr><tr><td><code>LPAD</code></td><td>左侧填充字符串</td><td><code>LPAD(&quot;HELLO&quot;,10,&quot;*&quot;)</code></td></tr><tr><td><code>RPAD</code></td><td>右侧填充字符串</td><td><code>RPAD(&quot;HELLO&quot;,10,&quot;*&quot;)</code></td></tr><tr><td><code>TRIM</code></td><td>去除守卫空格</td><td><code>TRIM(&quot; 你好先生 &quot;)</code></td></tr></tbody></table><h3 id="日期函数" tabindex="-1"><a class="header-anchor" href="#日期函数"><span>日期函数</span></a></h3><ul><li>MySQL 数据库中，两个日期不能直接加减，日期也不能与数字加减</li></ul><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>NOW()</code></td><td>获取系统日期和时间，格式 <code>yyyy-MM-dd hh:mm:ss</code></td></tr><tr><td><code>CURDATE()</code></td><td>获取当前系统日期，格式 <code>yyyy-MM-dd</code></td></tr><tr><td><code>CURTIME()</code></td><td>获取当前系统时间，格式 <code>hh:mm:ss</code></td></tr><tr><td><code>DATE_FORMAT(日期,表达式)</code></td><td>格式化日期字符串，日期占位符参考下一个表格</td></tr><tr><td><code>DATE_ADD(日期,INTERVAL 偏移量 时间单位)</code></td><td>日期偏移计算，时间单位非常灵活，如：<code>MONTH</code>,<code>DAY</code>，<code>MINUTE</code></td></tr><tr><td><code>DATEDIFF(日期,日期)</code></td><td>计算两个日期相差的天数</td></tr><tr><td>\`\`</td><td></td></tr></tbody></table><table><thead><tr><th>日期占位符</th><th>作用</th></tr></thead><tbody><tr><td><code>%Y</code></td><td>年份</td></tr><tr><td><code>%m</code></td><td>月份</td></tr><tr><td><code>%d</code></td><td>日期</td></tr><tr><td><code>%w</code></td><td>星期（数字）</td></tr><tr><td><code>%W</code></td><td>星期（名称）</td></tr><tr><td><code>%j</code></td><td>本间第几天</td></tr><tr><td><code>%U</code></td><td>本年第几周</td></tr><tr><td><code>%H</code></td><td>小时（24）</td></tr><tr><td><code>%h</code></td><td>小时（12）</td></tr><tr><td><code>%i</code></td><td>分钟</td></tr><tr><td><code>%s</code></td><td>秒数</td></tr><tr><td><code>%r</code></td><td>时间（12）</td></tr><tr><td><code>%T</code></td><td>时间（24）</td></tr></tbody></table><h3 id="条件函数" tabindex="-1"><a class="header-anchor" href="#条件函数"><span>条件函数</span></a></h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td><code>IFNULL(字段名,值)</code></td><td>判断第一个参数是否为空，不为空则返回第一个参数，为空则返回第二个参数</td></tr><tr><td><code>IF(表达式,值1,值2)</code></td><td>判断表达式真假，为真则返回第一个参数，为假则返回第二个参数</td></tr><tr><td><code>CASE WHEN THEN ELSE END</code></td><td>条件判断语句，实例代码在下方</td></tr></tbody></table><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CASE</span>
	<span class="token keyword">WHEN</span> 表达式 <span class="token keyword">THEN</span> 值<span class="token number">1</span>
	<span class="token keyword">WHEN</span> 表达式 <span class="token keyword">THEN</span> 值<span class="token number">2</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	<span class="token keyword">ELSE</span> 值N
<span class="token keyword">END</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事务机制" tabindex="-1"><a class="header-anchor" href="#事务机制"><span>事务机制</span></a></h2><blockquote><p>事务是一种可靠的、一致的方式，访问和操作数据库的程序单元</p><p>由一个或多个 SQL 语句组成的整体，要么全部执行成功，要么全部执行失败</p><p>事务依赖与数据库实现，MySQL 通过事务区违数据缓冲地带</p></blockquote><ul><li><p>数据的写入直接操作数据文件是非常危险的，遇到突发状况（停电、死机等）会造成数据紊乱</p></li><li><p>RDBMS（关系型数据库管理系统） = SQL 语句 + 事务（ACID）</p></li><li><p>默认情况下，MySQL 执行每条 SQL 语句都会自动开启和提交事务</p></li><li><p>为了让多条 SQL 语句纳入一个事务之下，可以手动管理事务</p></li></ul><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">START</span> <span class="token keyword">TRANSACTION</span><span class="token punctuation">;</span>
<span class="token keyword">SQL</span>语句
<span class="token punctuation">[</span><span class="token keyword">COMMIT</span><span class="token operator">|</span><span class="token keyword">ROLLBACK</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日志" tabindex="-1"><a class="header-anchor" href="#日志"><span>日志</span></a></h3><blockquote><p>利用 <code>日志</code> 来实现间接写入</p></blockquote><ul><li>MySQL 总共有 5 种日志文件，其中只有 <code>redo</code> 日志和 <code>undo</code> 日志与事务有关</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210707105106.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210707111423.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="特性-acid" tabindex="-1"><a class="header-anchor" href="#特性-acid"><span>特性（ACID）</span></a></h3><blockquote><p>指数据库管理系统（DBMS）在写入或更新资料的过程中，为保证事务（transaction）是正确可靠的，所必须具备的四个特性</p></blockquote><ul><li>原子性：一个事务的所有操作要么全部完成，要么全部失败。事务执行后不允许停留在中间的某个状态</li><li>一致性：不管在任何给定的时间、并发事务有多少，事务必须保证运行结果的一致性</li><li>隔离性：要求事务不受其他并发事务的影响，如同在给定的时间内，该事务是数据库唯一运行的事务</li><li>持久性：事务一旦提交，结果便是永久性的。即便发生宕机，仍然可以依靠食物日志完成数据的持久化</li></ul><h3 id="隔离级别" tabindex="-1"><a class="header-anchor" href="#隔离级别"><span>隔离级别</span></a></h3><table><thead><tr><th>序号</th><th>隔离级别</th><th>功能</th></tr></thead><tbody><tr><td>1</td><td><code>read uncommitted</code></td><td>读取为提交数据</td></tr><tr><td>2</td><td><code>read committed</code></td><td>读取已提交数据</td></tr><tr><td>3</td><td><code>repeatable read</code> <strong>（默认级别）</strong></td><td>重复读取</td></tr><tr><td>4</td><td><code>serializable</code></td><td>序列化</td></tr></tbody></table><h4 id="read-uncommitted" tabindex="-1"><a class="header-anchor" href="#read-uncommitted"><span>READ UNCOMMITTED</span></a></h4><blockquote><p>表示可以读取其他事务未提交的数据</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">UNCOMMITTED</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="read-committed" tabindex="-1"><a class="header-anchor" href="#read-committed"><span>READ COMMITTED</span></a></h4><blockquote><p>表示只能读取到其他事物提交的数据</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">READ</span> <span class="token keyword">COMMITTED</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="repeatable-read" tabindex="-1"><a class="header-anchor" href="#repeatable-read"><span>REPEATABLE READ</span></a></h4><blockquote><p>表示事务在执行过程中反复读取数据，得到的结果是一致的，不受其他事务影响</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">REPEATABLE</span> <span class="token keyword">READ</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="serializable" tabindex="-1"><a class="header-anchor" href="#serializable"><span>SERIALIZABLE</span></a></h4><blockquote><p>由于事务并发执行所带来的各种问题，前三种隔离级别只适用在某些业务场景中，但是序列化的隔离性，让事务逐一执行，可以避免一切业务场景上的问题，但并发性会下降，所以很少使用</p></blockquote><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">SET</span> <span class="token keyword">SESSION</span> <span class="token keyword">TRANSACTION</span> <span class="token keyword">ISOLATION</span> <span class="token keyword">LEVEL</span> <span class="token keyword">SERIALIZABLE</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="数据导出与导入" tabindex="-1"><a class="header-anchor" href="#数据导出与导入"><span>数据导出与导入</span></a></h2><h4 id="数据导出" tabindex="-1"><a class="header-anchor" href="#数据导出"><span>数据导出</span></a></h4><blockquote><p>导出的纯粹是业务数据</p></blockquote><ul><li>导出分类 <ul><li>SQL 文档</li><li>文本文档</li></ul></li><li><code>mysqldump</code> 用来把业务数据导出成 SQL 文件，其中也包括了表结构</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 导出 SQL 文件，no-data 表示只导出表结构</span>
mysqldump <span class="token parameter variable">-uroot</span> <span class="token parameter variable">-p</span> <span class="token punctuation">[</span>no-data<span class="token punctuation">]</span> 逻辑库 <span class="token operator">&gt;</span> 文件路径

<span class="token comment"># 导入 SQL 文件，source 命令用于导入 SQL 文件。包括创建数据表，写入记录等等</span>
mysql<span class="token operator">&gt;</span> USE demo<span class="token punctuation">;</span>
mysql<span class="token operator">&gt;</span> SOURCE test.sql<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>数据备份，备份的是数据文件、日志文件、索引文件等等 <ul><li>全量备份</li><li>增量备份</li></ul></li></ul><h2 id="数据库范式" tabindex="-1"><a class="header-anchor" href="#数据库范式"><span>数据库范式</span></a></h2><ul><li>构造数据库必须遵循一定的规则，这种规则就是范式</li><li>目前关系型数据库有 6 种范式，一般情况下，只满足第三范式即可</li></ul><h3 id="第一范式" tabindex="-1"><a class="header-anchor" href="#第一范式"><span>第一范式</span></a></h3><blockquote><p>是数据库的基本要求，不满足这一点就不是关系数据库</p></blockquote><ul><li>数据表的每一列都是不可分割的基本数据项</li><li>同一列中不能有多个值，也不能存在重复的属性</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210703180022.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第二范式" tabindex="-1"><a class="header-anchor" href="#第二范式"><span>第二范式</span></a></h3><blockquote><p>数据表中的每条记录必须是唯一的。为了实现区分，通常要为表加上一个列用来存储唯一标识，这个唯一属性列被称作 <code>主键列</code></p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210703180052.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="第三范式" tabindex="-1"><a class="header-anchor" href="#第三范式"><span>第三范式</span></a></h3><ul><li>每列都与主键有直接关系，不存在传递依赖</li><li>依照第三范式，数据可以拆分保存到不同的数据表，保持彼此关联</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210703182432.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210703181150.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,212);function m(v,b){const a=t("ExternalLinkIcon");return p(),o("div",null,[c(" more "),n("blockquote",null,[u,n("p",null,[s("测试用库：链接: "),n("a",k,[s("https://pan.baidu.com/s/1pZhP2UQzglUULBtaiD1feQ"),l(a)]),s(" 密码: 8frq")])]),r])}const E=e(i,[["render",m],["__file","MySQL.html.vue"]]),w=JSON.parse(`{"path":"/notes/MySQL.html","title":"MySQL","lang":"zh-CN","frontmatter":{"title":"MySQL","icon":"article","article":false,"head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/MySQL.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"MySQL"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20210707105106.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-24T09:07:04.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:modified_time","content":"2023-02-24T09:07:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"MySQL\\"}"]]},"headers":[{"level":2,"title":"数据库分类","slug":"数据库分类","link":"#数据库分类","children":[{"level":3,"title":"关系型数据库 MyS","slug":"关系型数据库-mys","link":"#关系型数据库-mys","children":[]},{"level":3,"title":"NoSQL 数据库","slug":"nosql-数据库","link":"#nosql-数据库","children":[]}]},{"level":2,"title":"MySQL 安装与配置","slug":"mysql-安装与配置","link":"#mysql-安装与配置","children":[{"level":3,"title":"衍生版本","slug":"衍生版本","link":"#衍生版本","children":[]},{"level":3,"title":"常用命令","slug":"常用命令","link":"#常用命令","children":[]},{"level":3,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}]},{"level":2,"title":"SQL 语言","slug":"sql-语言","link":"#sql-语言","children":[{"level":3,"title":"语言分类","slug":"语言分类","link":"#语言分类","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":3,"title":"逻辑库","slug":"逻辑库","link":"#逻辑库","children":[]},{"level":3,"title":"数据表","slug":"数据表","link":"#数据表","children":[]},{"level":3,"title":"索引","slug":"索引","link":"#索引","children":[]}]},{"level":2,"title":"基本查询","slug":"基本查询","link":"#基本查询","children":[{"level":3,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":3,"title":"别名","slug":"别名","link":"#别名","children":[]},{"level":3,"title":"分页","slug":"分页","link":"#分页","children":[]},{"level":3,"title":"排序","slug":"排序","link":"#排序","children":[]},{"level":3,"title":"去重","slug":"去重","link":"#去重","children":[]},{"level":3,"title":"条件","slug":"条件","link":"#条件","children":[]},{"level":3,"title":"合并","slug":"合并","link":"#合并","children":[]}]},{"level":2,"title":"高级查询","slug":"高级查询","link":"#高级查询","children":[{"level":3,"title":"聚合函数","slug":"聚合函数","link":"#聚合函数","children":[]},{"level":3,"title":"分组查询","slug":"分组查询","link":"#分组查询","children":[]},{"level":3,"title":"表连接","slug":"表连接","link":"#表连接","children":[]},{"level":3,"title":"子查询","slug":"子查询","link":"#子查询","children":[]}]},{"level":2,"title":"写入操作","slug":"写入操作","link":"#写入操作","children":[{"level":3,"title":"添加(INSERT)","slug":"添加-insert","link":"#添加-insert","children":[]},{"level":3,"title":"修改(UPDATE)","slug":"修改-update","link":"#修改-update","children":[]},{"level":3,"title":"删除(DELETE)","slug":"删除-delete","link":"#删除-delete","children":[]}]},{"level":2,"title":"基本函数","slug":"基本函数","link":"#基本函数","children":[{"level":3,"title":"数字函数","slug":"数字函数","link":"#数字函数","children":[]},{"level":3,"title":"字符函数","slug":"字符函数","link":"#字符函数","children":[]},{"level":3,"title":"日期函数","slug":"日期函数","link":"#日期函数","children":[]},{"level":3,"title":"条件函数","slug":"条件函数","link":"#条件函数","children":[]}]},{"level":2,"title":"事务机制","slug":"事务机制","link":"#事务机制","children":[{"level":3,"title":"日志","slug":"日志","link":"#日志","children":[]},{"level":3,"title":"特性（ACID）","slug":"特性-acid","link":"#特性-acid","children":[]},{"level":3,"title":"隔离级别","slug":"隔离级别","link":"#隔离级别","children":[]}]},{"level":2,"title":"数据导出与导入","slug":"数据导出与导入","link":"#数据导出与导入","children":[]},{"level":2,"title":"数据库范式","slug":"数据库范式","link":"#数据库范式","children":[{"level":3,"title":"第一范式","slug":"第一范式","link":"#第一范式","children":[]},{"level":3,"title":"第二范式","slug":"第二范式","link":"#第二范式","children":[]},{"level":3,"title":"第三范式","slug":"第三范式","link":"#第三范式","children":[]}]}],"git":{"createdTime":1673428335000,"updatedTime":1677229624000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":2}]},"readingTime":{"minutes":23.76,"words":7127},"filePathRelative":"notes/MySQL.md","localizedDate":"2023年1月11日","excerpt":""}`);export{E as comp,w as data};
