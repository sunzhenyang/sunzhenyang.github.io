const t=JSON.parse(`{"key":"v-474db0b2","path":"/notes/java/%E7%B1%BB%E4%B9%A6%E5%86%99%E5%8E%9F%E5%88%99.html","title":"类书写原则","lang":"zh-CN","frontmatter":{"title":"类书写原则","icon":"java","article":true,"breadcrumb":false,"date":"2023-02-22T00:00:00.000Z","category":["Java"],"tag":["Java基础"],"description":"基本原则（SOLID） 单一职责原则（SRP） 一个类应该只有一个发生变化的原因 一个类（大到模块、小到方法）承担的职责越多，被复用的可能性就越小，而且当一个类承担的职责过多，就相当于把这些职责耦合在一起，当其中一个职责变化时，可能会影响其他职责的运作，因此要将这些职责进行分离，将不同的职责封装在不同的类中，即将不同的变化原因封装在不同的类中，如果多个...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/java/%E7%B1%BB%E4%B9%A6%E5%86%99%E5%8E%9F%E5%88%99.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"类书写原则"}],["meta",{"property":"og:description","content":"基本原则（SOLID） 单一职责原则（SRP） 一个类应该只有一个发生变化的原因 一个类（大到模块、小到方法）承担的职责越多，被复用的可能性就越小，而且当一个类承担的职责过多，就相当于把这些职责耦合在一起，当其中一个职责变化时，可能会影响其他职责的运作，因此要将这些职责进行分离，将不同的职责封装在不同的类中，即将不同的变化原因封装在不同的类中，如果多个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-26T08:25:54.000Z"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2023-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-26T08:25:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类书写原则\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-02-26T08:25:54.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"基本原则（SOLID）","slug":"基本原则-solid","link":"#基本原则-solid","children":[]}],"git":{"createdTime":1677229624000,"updatedTime":1677399954000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":2}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"notes/java/类书写原则.md","localizedDate":"2023年2月22日","excerpt":"","autoDesc":true}`);export{t as data};
