import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as c,c as d,b as n,d as e,e as l,f as a}from"./app-BybQgHW9.js";const i={},p=a(`<h2 id="键盘事件的种类" tabindex="-1"><a class="header-anchor" href="#键盘事件的种类"><span>键盘事件的种类</span></a></h2><p>键盘事件由用户击打键盘触发，主要有<code>keydown</code>、<code>keypress</code>、<code>keyup</code>三个事件，它们都继承了<code>KeyboardEvent</code>接口。</p><ul><li><code>keydown</code>：按下键盘时触发。</li><li><code>keypress</code>：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发<code>keydown</code>事件，再触发这个事件。</li><li><code>keyup</code>：松开键盘时触发该事件。</li></ul><p>如果用户一直按键不松开，就会连续触发键盘事件，触发的顺序如下。</p><ol><li>keydown</li><li>keypress</li><li>keydown</li><li>keypress</li><li>...（重复以上过程）</li><li>keyup</li></ol><h2 id="keyboardevent-接口概述" tabindex="-1"><a class="header-anchor" href="#keyboardevent-接口概述"><span>KeyboardEvent 接口概述</span></a></h2><p><code>KeyboardEvent</code>接口用来描述用户与键盘的互动。这个接口继承了<code>Event</code>接口，并且定义了自己的实例属性和实例方法。</p><p>浏览器原生提供<code>KeyboardEvent</code>构造函数，用来新建键盘事件的实例。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">KeyboardEvent</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>KeyboardEvent</code>构造函数接受两个参数。第一个参数是字符串，表示事件类型；第二个参数是一个事件配置对象，该参数可选。除了<code>Event</code>接口提供的属性，还可以配置以下字段，它们都是可选。</p><ul><li><code>key</code>：字符串，当前按下的键，默认为空字符串。</li><li><code>code</code>：字符串，表示当前按下的键的字符串形式，默认为空字符串。</li><li><code>location</code>：整数，当前按下的键的位置，默认为<code>0</code>。</li><li><code>ctrlKey</code>：布尔值，是否按下 Ctrl 键，默认为<code>false</code>。</li><li><code>shiftKey</code>：布尔值，是否按下 Shift 键，默认为<code>false</code>。</li><li><code>altKey</code>：布尔值，是否按下 Alt 键，默认为<code>false</code>。</li><li><code>metaKey</code>：布尔值，是否按下 Meta 键，默认为<code>false</code>。</li><li><code>repeat</code>：布尔值，是否重复按键，默认为<code>false</code>。</li></ul><h2 id="keyboardevent-的实例属性" tabindex="-1"><a class="header-anchor" href="#keyboardevent-的实例属性"><span>KeyboardEvent 的实例属性</span></a></h2><h3 id="keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey" tabindex="-1"><a class="header-anchor" href="#keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey"><span>KeyboardEvent.altKey，KeyboardEvent.ctrlKey，KeyboardEvent.metaKey，KeyboardEvent.shiftKey</span></a></h3><p>以下属性都是只读属性，返回一个布尔值，表示是否按下对应的键。</p><ul><li><code>KeyboardEvent.altKey</code>：是否按下 Alt 键</li><li><code>KeyboardEvent.ctrlKey</code>：是否按下 Ctrl 键</li><li><code>KeyboardEvent.metaKey</code>：是否按下 meta 键（Mac 系统是一个四瓣的小花，Windows 系统是 windows 键）</li><li><code>KeyboardEvent.shiftKey</code>：是否按下 Shift 键</li></ul><p>下面是一个示例。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">showChar</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ALT: &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>altKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;CTRL: &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>ctrlKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Meta: &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>metaKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Shift: &#39;</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;keydown&#39;</span><span class="token punctuation">,</span> showChar<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="keyboardevent-code" tabindex="-1"><a class="header-anchor" href="#keyboardevent-code"><span>KeyboardEvent.code</span></a></h3><p><code>KeyboardEvent.code</code>属性返回一个字符串，表示当前按下的键的字符串形式。该属性只读。</p>`,19),r={href:"https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values",target:"_blank",rel:"noopener noreferrer"},k=a(`<ul><li>数字键0 - 9：返回<code>digit0</code> - <code>digit9</code></li><li>字母键A - z：返回<code>KeyA</code> - <code>KeyZ</code></li><li>功能键F1 - F12：返回 <code>F1</code> - <code>F12</code></li><li>方向键：返回<code>ArrowDown</code>、<code>ArrowUp</code>、<code>ArrowLeft</code>、<code>ArrowRight</code></li><li>Alt 键：返回<code>AltLeft</code>或<code>AltRight</code></li><li>Shift 键：返回<code>ShiftLeft</code>或<code>ShiftRight</code></li><li>Ctrl 键：返回<code>ControlLeft</code>或<code>ControlRight</code></li></ul><h3 id="keyboardevent-key" tabindex="-1"><a class="header-anchor" href="#keyboardevent-key"><span>KeyboardEvent.key</span></a></h3><p><code>KeyboardEvent.key</code>属性返回一个字符串，表示按下的键名。该属性只读。</p><p>如果按下的键代表可打印字符，则返回这个字符，比如数字、字母。</p><p>如果按下的键代表不可打印的特殊字符，则返回预定义的键值，比如 Backspace，Tab，Enter，Shift，Control，Alt，CapsLock，Esc，Spacebar，PageUp，PageDown，End，Home，Left，Right，Up，Down，PrintScreen，Insert，Del，Win，F1～F12，NumLock，Scroll 等。</p><p>如果同时按下一个控制键和一个符号键，则返回符号键的键名。比如，按下 Ctrl + a，则返回<code>a</code>；按下 Shift + a，则返回大写的<code>A</code>。</p><p>如果无法识别键名，返回字符串<code>Unidentified</code>。</p><h3 id="keyboardevent-location" tabindex="-1"><a class="header-anchor" href="#keyboardevent-location"><span>KeyboardEvent.location</span></a></h3><p><code>KeyboardEvent.location</code>属性返回一个整数，表示按下的键处在键盘的哪一个区域。它可能取以下值。</p><ul><li>0：处在键盘的主区域，或者无法判断处于哪一个区域。</li><li>1：处在键盘的左侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。</li><li>2：处在键盘的右侧，只适用那些有两个位置的键（比如 Ctrl 和 Shift 键）。</li><li>3：处在数字小键盘。</li></ul><h3 id="keyboardevent-repeat" tabindex="-1"><a class="header-anchor" href="#keyboardevent-repeat"><span>KeyboardEvent.repeat</span></a></h3><p><code>KeyboardEvent.repeat</code>返回一个布尔值，代表该键是否被按着不放，以便判断是否重复这个键，即浏览器会持续触发<code>keydown</code>和<code>keypress</code>事件，直到用户松开手为止。</p><h2 id="keyboardevent-的实例方法" tabindex="-1"><a class="header-anchor" href="#keyboardevent-的实例方法"><span>KeyboardEvent 的实例方法</span></a></h2><h3 id="keyboardevent-getmodifierstate" tabindex="-1"><a class="header-anchor" href="#keyboardevent-getmodifierstate"><span>KeyboardEvent.getModifierState()</span></a></h3><p><code>KeyboardEvent.getModifierState()</code>方法返回一个布尔值，表示是否按下或激活指定的功能键。它的常用参数如下。</p><ul><li><code>Alt</code>：Alt 键</li><li><code>CapsLock</code>：大写锁定键</li><li><code>Control</code>：Ctrl 键</li><li><code>Meta</code>：Meta 键</li><li><code>NumLock</code>：数字键盘开关键</li><li><code>Shift</code>：Shift 键</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>
  event<span class="token punctuation">.</span><span class="token function">getModifierState</span><span class="token punctuation">(</span><span class="token string">&#39;Control&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  event<span class="token punctuation">.</span><span class="token function">getModifierState</span><span class="token punctuation">(</span><span class="token string">&#39;Alt&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  event<span class="token punctuation">.</span><span class="token function">getModifierState</span><span class="token punctuation">(</span><span class="token string">&#39;Meta&#39;</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面代码表示，只要<code>Control</code>、<code>Alt</code>、<code>Meta</code>里面，同时按下任意两个或两个以上的键就返回。</p>`,18);function y(u,v){const t=s("ExternalLinkIcon");return c(),d("div",null,[p,n("p",null,[e("下面是一些常用键的字符串形式，其他键请查"),n("a",r,[e("文档"),l(t)]),e("。")]),k])}const m=o(i,[["render",y],["__file","keyboard.html.vue"]]),f=JSON.parse(`{"path":"/technology/javascript/events/keyboard.html","title":"键盘事件","lang":"zh-CN","frontmatter":{"title":"键盘事件","icon":"article","category":"javascript","article":false,"tag":["javascript"],"copyright":"Copyright by 阮一峰","description":"键盘事件的种类 键盘事件由用户击打键盘触发，主要有keydown、keypress、keyup三个事件，它们都继承了KeyboardEvent接口。 keydown：按下键盘时触发。 keypress：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发keydown事件，再触发...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/javascript/events/keyboard.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"键盘事件"}],["meta",{"property":"og:description","content":"键盘事件的种类 键盘事件由用户击打键盘触发，主要有keydown、keypress、keyup三个事件，它们都继承了KeyboardEvent接口。 keydown：按下键盘时触发。 keypress：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发keydown事件，再触发..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"键盘事件\\",\\"description\\":\\"键盘事件的种类 键盘事件由用户击打键盘触发，主要有keydown、keypress、keyup三个事件，它们都继承了KeyboardEvent接口。 keydown：按下键盘时触发。 keypress：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发keydown事件，再触发...\\"}"]]},"headers":[{"level":2,"title":"键盘事件的种类","slug":"键盘事件的种类","link":"#键盘事件的种类","children":[]},{"level":2,"title":"KeyboardEvent 接口概述","slug":"keyboardevent-接口概述","link":"#keyboardevent-接口概述","children":[]},{"level":2,"title":"KeyboardEvent 的实例属性","slug":"keyboardevent-的实例属性","link":"#keyboardevent-的实例属性","children":[{"level":3,"title":"KeyboardEvent.altKey，KeyboardEvent.ctrlKey，KeyboardEvent.metaKey，KeyboardEvent.shiftKey","slug":"keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey","link":"#keyboardevent-altkey-keyboardevent-ctrlkey-keyboardevent-metakey-keyboardevent-shiftkey","children":[]},{"level":3,"title":"KeyboardEvent.code","slug":"keyboardevent-code","link":"#keyboardevent-code","children":[]},{"level":3,"title":"KeyboardEvent.key","slug":"keyboardevent-key","link":"#keyboardevent-key","children":[]},{"level":3,"title":"KeyboardEvent.location","slug":"keyboardevent-location","link":"#keyboardevent-location","children":[]},{"level":3,"title":"KeyboardEvent.repeat","slug":"keyboardevent-repeat","link":"#keyboardevent-repeat","children":[]}]},{"level":2,"title":"KeyboardEvent 的实例方法","slug":"keyboardevent-的实例方法","link":"#keyboardevent-的实例方法","children":[{"level":3,"title":"KeyboardEvent.getModifierState()","slug":"keyboardevent-getmodifierstate","link":"#keyboardevent-getmodifierstate","children":[]}]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":3.7,"words":1109},"filePathRelative":"technology/javascript/events/keyboard.md","localizedDate":"2023年1月11日","excerpt":"<h2>键盘事件的种类</h2>\\n<p>键盘事件由用户击打键盘触发，主要有<code>keydown</code>、<code>keypress</code>、<code>keyup</code>三个事件，它们都继承了<code>KeyboardEvent</code>接口。</p>\\n<ul>\\n<li><code>keydown</code>：按下键盘时触发。</li>\\n<li><code>keypress</code>：按下有值的键时触发，即按下 Ctrl、Alt、Shift、Meta 这样无值的键，这个事件不会触发。对于有值的键，按下时先触发<code>keydown</code>事件，再触发这个事件。</li>\\n<li><code>keyup</code>：松开键盘时触发该事件。</li>\\n</ul>","autoDesc":true}`);export{m as comp,f as data};
