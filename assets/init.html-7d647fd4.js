const e=JSON.parse(`{"key":"v-5cce662f","path":"/technology/ts_axios/chapter3/init.html","title":"初始化项目","lang":"zh-CN","frontmatter":{"title":"初始化项目","icon":"article","category":["typescript"],"article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"创建代码仓库 接下来，我们开始初始化项目，首先我们先去 GitHub 上创建一个 repo，填好 repo 名称，以及写一下 README，对项目先做个简单的描述。 通常我们初始化一个项目，需要配置一大堆东西，比如 package.json、.editorconfig、.gitignore 等；还包括一些构建工具如 rollup、webpack 以及它们的配置。 当我们使用 TypeScript 去写一个项目的时候，还需要配置 TypeScript 的编译配置文件 tsconfig.json 以及 tslint.json 文件。","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter3/init.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"初始化项目"}],["meta",{"property":"og:description","content":"创建代码仓库 接下来，我们开始初始化项目，首先我们先去 GitHub 上创建一个 repo，填好 repo 名称，以及写一下 README，对项目先做个简单的描述。 通常我们初始化一个项目，需要配置一大堆东西，比如 package.json、.editorconfig、.gitignore 等；还包括一些构建工具如 rollup、webpack 以及它们的配置。 当我们使用 TypeScript 去写一个项目的时候，还需要配置 TypeScript 的编译配置文件 tsconfig.json 以及 tslint.json 文件。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"初始化项目\\",\\"description\\":\\"创建代码仓库 接下来，我们开始初始化项目，首先我们先去 GitHub 上创建一个 repo，填好 repo 名称，以及写一下 README，对项目先做个简单的描述。 通常我们初始化一个项目，需要配置一大堆东西，比如 package.json、.editorconfig、.gitignore 等；还包括一些构建工具如 rollup、webpack 以及它们的配置。 当我们使用 TypeScript 去写一个项目的时候，还需要配置 TypeScript 的编译配置文件 tsconfig.json 以及 tslint.json 文件。\\"}"]]},"headers":[{"level":2,"title":"创建代码仓库","slug":"创建代码仓库","link":"#创建代码仓库","children":[]},{"level":2,"title":"TypeScript library starter","slug":"typescript-library-starter","link":"#typescript-library-starter","children":[{"level":3,"title":"使用方式","slug":"使用方式","link":"#使用方式","children":[]},{"level":3,"title":"目录文件介绍","slug":"目录文件介绍","link":"#目录文件介绍","children":[]},{"level":3,"title":"优秀工具集成","slug":"优秀工具集成","link":"#优秀工具集成","children":[]},{"level":3,"title":"Npm Scripts","slug":"npm-scripts","link":"#npm-scripts","children":[]}]},{"level":2,"title":"关联远程分支","slug":"关联远程分支","link":"#关联远程分支","children":[{"level":3,"title":"拉取代码","slug":"拉取代码","link":"#拉取代码","children":[]},{"level":3,"title":"提交代码","slug":"提交代码","link":"#提交代码","children":[]}]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":4.57,"words":1372},"filePathRelative":"technology/ts_axios/chapter3/init.md","localizedDate":"2023年1月11日","excerpt":"<h2> 创建代码仓库</h2>\\n<p>接下来，我们开始初始化项目，首先我们先去 GitHub 上创建一个 repo，填好 repo 名称，以及写一下 README，对项目先做个简单的描述。</p>\\n<p>通常我们初始化一个项目，需要配置一大堆东西，比如 <code>package.json</code>、<code>.editorconfig</code>、<code>.gitignore</code> 等；还包括一些构建工具如 <code>rollup</code>、<code>webpack</code> 以及它们的配置。</p>\\n<p>当我们使用 TypeScript 去写一个项目的时候，还需要配置 TypeScript 的编译配置文件 <code>tsconfig.json</code> 以及\\n<code>tslint.json</code> 文件。</p>","autoDesc":true}`);export{e as data};
