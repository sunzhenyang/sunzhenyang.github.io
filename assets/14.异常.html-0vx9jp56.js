import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t,f as e}from"./app-BybQgHW9.js";const p={},c=e(`<blockquote><p>异常本质上是程序上的错误，在程序运行过程中，意外发生的情况，背离我们程序本身的意图的表现，都可以理解为异常</p></blockquote><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h2><h3 id="编译时异常" tabindex="-1"><a class="header-anchor" href="#编译时异常"><span>编译时异常</span></a></h3><ul><li>括号配对</li><li>语句分号</li><li>关键字错误</li><li>等等</li></ul><h3 id="运行时异常" tabindex="-1"><a class="header-anchor" href="#运行时异常"><span>运行时异常</span></a></h3><ul><li>使用空的对象引用调用方法</li><li>数组访问时下标越界</li><li>算术运算时除数为 0</li><li>类型转换时无法正常转型</li><li>等等</li></ul><h2 id="throwable" tabindex="-1"><a class="header-anchor" href="#throwable"><span>Throwable</span></a></h2><blockquote><p>异常根类</p></blockquote><h3 id="error" tabindex="-1"><a class="header-anchor" href="#error"><span>Error</span></a></h3><blockquote><p>程序无法处理的错误，表示运行应用程序中较严重的问题，他们在应用程序的控制和处理能力之外，而且大多数是程序运行是不允许出现的状况，通常不需要关心此类错误</p></blockquote><ul><li><code>VirtualMachineError</code>：虚拟机错误</li><li><code>OutOfMemoryError</code>：内存溢出</li><li><code>ThreadDeath</code>：线程死锁</li></ul><h3 id="exception" tabindex="-1"><a class="header-anchor" href="#exception"><span>Exception</span></a></h3><blockquote><p>程序本身可以处理的异常</p></blockquote><ul><li><p><code>Checked Exception</code>：检查型异常，编译器要求必须处理的异常</p><ul><li><code>IOException</code>：IO 异常</li><li><code>SQLException</code>：SQL 异常</li></ul></li><li><p><code>Unchecked Exception</code>：非检查型异常，编译器不要求强制处理的异常</p><ul><li><code>RuntimeException</code><ul><li><code>NullPointerException</code>：空指针异常（使用了未经初始化的对象或者是不存在的对象）</li><li><code>ArrayIndexOutOfBoundsException</code>：数组下标越界异常（使用超出数组下标范围的下标）</li><li><code>ArrayStoreException</code>：数组中包含不兼容的值的异常（数组中实际传入的数据与预定不符，例如子类数组经过向上转型后，传入父类对象）</li><li><code>ArithmeticException</code>：数学运算异常（涉及到数学运算的地方可能出现失误，比如程序中出现了除以零这样的运算）</li><li><code>NumberFormatException</code>：数字格式化异常（涉及到类型转换时，比如不符合转换格式的字符串被转换成数字）</li><li><code>ClassCastException</code>：类型转换异常（如向下转型时，转换对象无法完成正常转换）</li><li><code>InputMismatchException</code>：输入格式错误异常（接收数据与预期格式不符） <ul><li>全称时 <code>java.util.InputMismatchException</code>，由于java.util包不是默认直接加载的，所以需要导入操作才能正常应用</li></ul></li><li><code>FileNotFoundException</code>：文件未找到异常（操作文件内容时发现文件不存在 ）</li><li>等等</li></ul></li></ul></li></ul><h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h2><h3 id="try-catch-finally" tabindex="-1"><a class="header-anchor" href="#try-catch-finally"><span>try catch finally</span></a></h3><ul><li><p><code>try</code> 块后可接零个或多个 <code>catch</code> 块，如果没有 <code>catch</code> 块，则必须跟一个 <code>finally</code> 块</p><ul><li><code>try {}</code>后可以书写多个 <code>catch</code> 块，但不能出现同类型异常</li><li>安全起见，建议在多个 <code>catch</code> 块的最后（并且只能是最后位置）添加异常父类 <code>catch (Exception e){}</code></li></ul></li><li><p><code>try...catch</code> 代码块中定义的是局部变量，只能在其代码块中使用</p></li><li><p><code>finally</code> 代码块是强制执行的，不建议在其中书写 <code>return</code> 语句，一旦书写会屏蔽掉 <code>try</code> 和 <code>catch</code> 代码块中的 <code>return</code> 语句</p></li><li><p><code>System.exit(1)</code>：终止正在运行的 java 虚拟机，不会继续执行到 <code>finally</code> 代码块，参数非 0 表示异常终止</p></li><li><p>子类重写父类排除的异常方法时，声明的异常必须是父类方法所声明异常的同类或子类</p></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">12</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;程序运行结束&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210201174818429.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="throws" tabindex="-1"><a class="header-anchor" href="#throws"><span>throws</span></a></h3><blockquote><p>当在设计中，希望有针对性的产生、抛出异常，由上级调用者视情况处理时，就需要使用throw、throws</p></blockquote><ul><li><p>表示通知方法调用者，使用该方法时，可能会发生哪些异常，需要进行相关处理</p></li><li><p>通过 <code>throws</code> 声明将要抛出何种类型的异常，后面可以跟多个异常类型，用逗号隔开</p><ul><li><code>public void method() throws Exception1,Exception2,Exception3 {}</code></li></ul></li><li><p>声明抛出的异常类型必须和 <code>throw</code> 抛出的对象相同或者是其父类</p></li><li><p>当方法抛出异常列表中的异常时，方法将不对这些类型及其子类类型的异常作处理，而抛向调用该方法的方法，由他去处理</p></li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">InputMismatchException</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ArithmeticException</span><span class="token punctuation">,</span> <span class="token class-name">InputMismatchException</span> <span class="token punctuation">{</span>
        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=====运算开始=====&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入第一个整数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> one <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入第二个整数：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> two <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=====运算结束=====&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> one <span class="token operator">/</span> two<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;one 和 two 的商是：&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ArithmeticException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;除数不允许为零！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InputMismatchException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;请输入整数！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="throw" tabindex="-1"><a class="header-anchor" href="#throw"><span>throw</span></a></h3><blockquote><p>通过 <code>throw</code> 将产生的异常抛出，用来规避可能出现的风险，完成一些程序的逻辑</p></blockquote><ul><li>抛出的异常只能是 <code>Throwable</code> 或者其子类的实例对象</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 写法1：自己抛出的异常，自己处理</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> 异常类型<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>异常类型 e<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 写法2：谁调用谁处理</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> 异常类型 <span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> 异常类型<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h2><h3 id="tostring" tabindex="-1"><a class="header-anchor" href="#tostring"><span>toString()</span></a></h3><blockquote><p>获取异常类型和描述信息，当直接输出对象 <code>e</code> 时，调用的就是该方法</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getmessage" tabindex="-1"><a class="header-anchor" href="#getmessage"><span>getMessage()</span></a></h3><blockquote><p>获取异常描述信息</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="printstacktrace" tabindex="-1"><a class="header-anchor" href="#printstacktrace"><span>printStackTrace()</span></a></h3><blockquote><p>打印异常的堆栈信息，包括种类、描述信息、出错位置等</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="自定义异常" tabindex="-1"><a class="header-anchor" href="#自定义异常"><span>自定义异常</span></a></h2><ul><li>描述特定业务产生的异常类型</li><li>定义一个类，继承 <code>Throwable</code> 类或它的子类</li><li>判断自定义的异常类型属于检查异常还是非检查异常需要看在定义自定义异常类时所继承的父类，如果父类属于检查异常，则自定义异常也就是检查异常，反之亦然</li><li>自定义异常需先经过 <code>throw</code> 抛出，才能被 <code>catch</code> 捕获，无法自动被程序捕获并处理</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// GameAgeException.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GameAgeException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">GameAgeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;未满18岁，不能玩此类型游戏！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Test.java</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Scanner</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token comment">// 描述酒店的入住规则：限定年龄，18岁以下，80岁以上的住客必须由亲友陪同</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">ageCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">GameAgeException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;请输入年龄：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Scanner</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> age <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>age <span class="token operator">&lt;</span> <span class="token number">18</span> <span class="token operator">||</span> age <span class="token operator">&gt;</span> <span class="token number">80</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">GameAgeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;欢迎进入游戏&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">ageCheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">GameAgeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="异常链" tabindex="-1"><a class="header-anchor" href="#异常链"><span>异常链</span></a></h2><ul><li>捕获一个异常后再抛出另一个异常</li><li>将异常发生的原因一个传一个串起来，即把底层的异常信息传递给上层，逐层抛出</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// HotelAgeException.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HotelAgeException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">HotelAgeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token string">&quot;18岁以下，80岁以上的住客必须由亲友陪同!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Test.java</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">testThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 描述酒店的入住规则：限定年龄，18岁以下，80岁以上的住客必须由亲友陪同</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">testOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">HotelAgeException</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">HotelAgeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">testTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">testOne</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">HotelAgeException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;我是新产生的异常1&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">testThree</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token function">testTwo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 使用第二个参数</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;我是新产生的异常2&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">/*
             或者使用 initCause
             Exception e1 = new Exception(&quot;我是新产生的异常2&quot;);
             e1.initCause(e);
             throw e1;
            */</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,43);function o(l,i){return s(),a("div",null,[t(" more "),c])}const d=n(p,[["render",o],["__file","14.异常.html.vue"]]),r=JSON.parse(`{"path":"/notes/java/Java%E8%BF%9B%E9%98%B6/14.%E5%BC%82%E5%B8%B8.html","title":"异常","lang":"zh-CN","frontmatter":{"title":"异常","icon":"java","article":true,"breadcrumb":false,"date":"2023-02-22T00:00:00.000Z","order":14,"category":["Java"],"tag":["Java基础"],"description":"异常本质上是程序上的错误，在程序运行过程中，意外发生的情况，背离我们程序本身的意图的表现，都可以理解为异常 分类 编译时异常 括号配对 语句分号 关键字错误 等等 运行时异常 使用空的对象引用调用方法 数组访问时下标越界 算术运算时除数为 0 类型转换时无法正常转型 等等 Throwable 异常根类 Error 程序无法处理的错误，表示运行应用程序中...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/java/Java%E8%BF%9B%E9%98%B6/14.%E5%BC%82%E5%B8%B8.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"异常"}],["meta",{"property":"og:description","content":"异常本质上是程序上的错误，在程序运行过程中，意外发生的情况，背离我们程序本身的意图的表现，都可以理解为异常 分类 编译时异常 括号配对 语句分号 关键字错误 等等 运行时异常 使用空的对象引用调用方法 数组访问时下标越界 算术运算时除数为 0 类型转换时无法正常转型 等等 Throwable 异常根类 Error 程序无法处理的错误，表示运行应用程序中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210201174818429.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-06T08:47:48.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:published_time","content":"2023-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-06T08:47:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210201174818429.png\\"],\\"datePublished\\":\\"2023-02-22T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-06T08:47:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yang\\",\\"url\\":\\"https://codemake.fun/\\",\\"email\\":\\"874530670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[{"level":3,"title":"编译时异常","slug":"编译时异常","link":"#编译时异常","children":[]},{"level":3,"title":"运行时异常","slug":"运行时异常","link":"#运行时异常","children":[]}]},{"level":2,"title":"Throwable","slug":"throwable","link":"#throwable","children":[{"level":3,"title":"Error","slug":"error","link":"#error","children":[]},{"level":3,"title":"Exception","slug":"exception","link":"#exception","children":[]}]},{"level":2,"title":"关键字","slug":"关键字","link":"#关键字","children":[{"level":3,"title":"try catch finally","slug":"try-catch-finally","link":"#try-catch-finally","children":[]},{"level":3,"title":"throws","slug":"throws","link":"#throws","children":[]},{"level":3,"title":"throw","slug":"throw","link":"#throw","children":[]}]},{"level":2,"title":"方法","slug":"方法","link":"#方法","children":[{"level":3,"title":"toString()","slug":"tostring","link":"#tostring","children":[]},{"level":3,"title":"getMessage()","slug":"getmessage","link":"#getmessage","children":[]},{"level":3,"title":"printStackTrace()","slug":"printstacktrace","link":"#printstacktrace","children":[]}]},{"level":2,"title":"自定义异常","slug":"自定义异常","link":"#自定义异常","children":[]},{"level":2,"title":"异常链","slug":"异常链","link":"#异常链","children":[]}],"git":{"createdTime":1680324050000,"updatedTime":1680770868000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":2}]},"readingTime":{"minutes":5.83,"words":1749},"filePathRelative":"notes/java/Java进阶/14.异常.md","localizedDate":"2023年2月22日","excerpt":"","autoDesc":true}`);export{d as comp,r as data};
