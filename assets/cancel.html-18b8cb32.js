const n=JSON.parse(`{"key":"v-bbf93aa4","path":"/technology/ts_axios/chapter11/cancel.html","title":"请求取消模块单元测试","lang":"zh-CN","frontmatter":{"title":"请求取消模块单元测试","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"请求取消模块是 ts-axios 库核心流程其中一个分支，也是非常重要的模块，我们将从基础库和业务流程模块 2 个方面去编写单元测试。 Cancel 类单元测试 cancel/Cancel.spec.ts： import Cancel, { isCancel } from '../../src/cancel/Cancel' describe('cancel:Cancel', () =&gt; { test('should returns correct result when message is specified', () =&gt; { const cancel = new Cancel('Operation has been canceled.') expect(cancel.message).toBe('Operation has been canceled.') }) test('should returns true if value is a Cancel', () =&gt; { expect(isCancel(new Cancel())).toBeTruthy() }) test('should returns false if value is not a Cancel', () =&gt; { expect(isCancel({ foo: 'bar' })).toBeFalsy() }) })","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter11/cancel.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"请求取消模块单元测试"}],["meta",{"property":"og:description","content":"请求取消模块是 ts-axios 库核心流程其中一个分支，也是非常重要的模块，我们将从基础库和业务流程模块 2 个方面去编写单元测试。 Cancel 类单元测试 cancel/Cancel.spec.ts： import Cancel, { isCancel } from '../../src/cancel/Cancel' describe('cancel:Cancel', () =&gt; { test('should returns correct result when message is specified', () =&gt; { const cancel = new Cancel('Operation has been canceled.') expect(cancel.message).toBe('Operation has been canceled.') }) test('should returns true if value is a Cancel', () =&gt; { expect(isCancel(new Cancel())).toBeTruthy() }) test('should returns false if value is not a Cancel', () =&gt; { expect(isCancel({ foo: 'bar' })).toBeFalsy() }) })"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"请求取消模块单元测试\\",\\"description\\":\\"请求取消模块是 ts-axios 库核心流程其中一个分支，也是非常重要的模块，我们将从基础库和业务流程模块 2 个方面去编写单元测试。 Cancel 类单元测试 cancel/Cancel.spec.ts： import Cancel, { isCancel } from '../../src/cancel/Cancel' describe('cancel:Cancel', () =&gt; { test('should returns correct result when message is specified', () =&gt; { const cancel = new Cancel('Operation has been canceled.') expect(cancel.message).toBe('Operation has been canceled.') }) test('should returns true if value is a Cancel', () =&gt; { expect(isCancel(new Cancel())).toBeTruthy() }) test('should returns false if value is not a Cancel', () =&gt; { expect(isCancel({ foo: 'bar' })).toBeFalsy() }) })\\"}"]]},"headers":[{"level":2,"title":"Cancel 类单元测试","slug":"cancel-类单元测试","link":"#cancel-类单元测试","children":[]},{"level":2,"title":"CancelToken 类单元测试","slug":"canceltoken-类单元测试","link":"#canceltoken-类单元测试","children":[]},{"level":2,"title":"Cancel 业务逻辑单元测试","slug":"cancel-业务逻辑单元测试","link":"#cancel-业务逻辑单元测试","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":2.68,"words":803},"filePathRelative":"technology/ts_axios/chapter11/cancel.md","localizedDate":"2023年1月11日","excerpt":"<p>请求取消模块是 <code>ts-axios</code> 库核心流程其中一个分支，也是非常重要的模块，我们将从基础库和业务流程模块 2 个方面去编写单元测试。</p>\\n<h2> Cancel 类单元测试</h2>\\n<p><code>cancel/Cancel.spec.ts</code>：</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token keyword\\">import</span> Cancel<span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span> isCancel <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'../../src/cancel/Cancel'</span>\\n\\n<span class=\\"token function\\">describe</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'cancel:Cancel'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'should returns correct result when message is specified'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">const</span> cancel <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Cancel</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Operation has been canceled.'</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token function\\">expect</span><span class=\\"token punctuation\\">(</span>cancel<span class=\\"token punctuation\\">.</span>message<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toBe</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'Operation has been canceled.'</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'should returns true if value is a Cancel'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">expect</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isCancel</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Cancel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toBeTruthy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n\\n  <span class=\\"token function\\">test</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'should returns false if value is not a Cancel'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">expect</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isCancel</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span> foo<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'bar'</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toBeFalsy</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
