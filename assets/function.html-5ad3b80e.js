const e=JSON.parse(`{"key":"v-164e485a","path":"/technology/javascript/types/function.html","title":"函数","lang":"zh-CN","frontmatter":{"title":"函数","icon":"article","category":"javascript","article":false,"tag":["javascript"],"copyright":"Copyright by 阮一峰","description":"函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数有唯一对应的返回值。 概述 函数的声明 JavaScript 有三种声明函数的方法。 （1）function 命令 function命令声明的代码区块，就是一个函数。function命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。 function print(s) { console.log(s); }","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/javascript/types/function.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"函数"}],["meta",{"property":"og:description","content":"函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数有唯一对应的返回值。 概述 函数的声明 JavaScript 有三种声明函数的方法。 （1）function 命令 function命令声明的代码区块，就是一个函数。function命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。 function print(s) { console.log(s); }"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"函数\\",\\"description\\":\\"函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数有唯一对应的返回值。 概述 函数的声明 JavaScript 有三种声明函数的方法。 （1）function 命令 function命令声明的代码区块，就是一个函数。function命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。 function print(s) { console.log(s); }\\"}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"函数的声明","slug":"函数的声明","link":"#函数的声明","children":[]},{"level":3,"title":"函数的重复声明","slug":"函数的重复声明","link":"#函数的重复声明","children":[]},{"level":3,"title":"圆括号运算符，return 语句和递归","slug":"圆括号运算符-return-语句和递归","link":"#圆括号运算符-return-语句和递归","children":[]},{"level":3,"title":"第一等公民","slug":"第一等公民","link":"#第一等公民","children":[]},{"level":3,"title":"函数名的提升","slug":"函数名的提升","link":"#函数名的提升","children":[]}]},{"level":2,"title":"函数的属性和方法","slug":"函数的属性和方法","link":"#函数的属性和方法","children":[{"level":3,"title":"name 属性","slug":"name-属性","link":"#name-属性","children":[]},{"level":3,"title":"length 属性","slug":"length-属性","link":"#length-属性","children":[]},{"level":3,"title":"toString()","slug":"tostring","link":"#tostring","children":[]}]},{"level":2,"title":"函数作用域","slug":"函数作用域","link":"#函数作用域","children":[{"level":3,"title":"定义","slug":"定义","link":"#定义","children":[]},{"level":3,"title":"函数内部的变量提升","slug":"函数内部的变量提升","link":"#函数内部的变量提升","children":[]},{"level":3,"title":"函数本身的作用域","slug":"函数本身的作用域","link":"#函数本身的作用域","children":[]}]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"参数的省略","slug":"参数的省略","link":"#参数的省略","children":[]},{"level":3,"title":"传递方式","slug":"传递方式","link":"#传递方式","children":[]},{"level":3,"title":"同名参数","slug":"同名参数","link":"#同名参数","children":[]},{"level":3,"title":"arguments 对象","slug":"arguments-对象","link":"#arguments-对象","children":[]}]},{"level":2,"title":"函数的其他知识点","slug":"函数的其他知识点","link":"#函数的其他知识点","children":[{"level":3,"title":"闭包","slug":"闭包","link":"#闭包","children":[]},{"level":3,"title":"立即调用的函数表达式（IIFE）","slug":"立即调用的函数表达式-iife","link":"#立即调用的函数表达式-iife","children":[]}]},{"level":2,"title":"eval 命令","slug":"eval-命令","link":"#eval-命令","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"eval 的别名调用","slug":"eval-的别名调用","link":"#eval-的别名调用","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":24.41,"words":7324},"filePathRelative":"technology/javascript/types/function.md","localizedDate":"2023年1月11日","excerpt":"<p>函数是一段可以反复调用的代码块。函数还能接受输入的参数，不同的参数有唯一对应的返回值。</p>\\n<h2> 概述</h2>\\n<h3> 函数的声明</h3>\\n<p>JavaScript 有三种声明函数的方法。</p>\\n<p><strong>（1）function 命令</strong></p>\\n<p><code>function</code>命令声明的代码区块，就是一个函数。<code>function</code>命令后面是函数名，函数名后面是一对圆括号，里面是传入函数的参数。函数体放在大括号里面。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">print</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">s</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
