import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as r,c as i,a as c,b as e,d as l,e as s,f as t}from"./app-DdwQwFQ1.js";const b={},p={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol",target:"_blank",rel:"noopener noreferrer"},m=t('<br><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><ul><li><p>是一种基本数据类型</p></li><li><p>Symbol()函数会返回symbol类型的值，该类型具有静态属性和静态方法</p></li><li><p>静态属性会暴露几个内建的成员对象</p></li><li><p>静态方法会暴露全局的symbol注册，且类似于内建对象类</p></li><li><p>作为构造函数来说它并不完整，因为它不支持语法：<code>new Symbol()</code></p></li><li><p>每个从<code>Symbol()</code>返回的symbol值都是唯一的</p></li><li><p>一个symbol值能作为对象属性的标识符，这是该数据类型仅有的目的</p></li><li><p>语法：<code>Symbol([description])</code></p><ul><li>参数 <code>description</code>：字符串类型，对symbol的描述，可用于调试但不是访问symbol本身</li></ul></li></ul><br><h2 id="symbol-length" tabindex="-1"><a class="header-anchor" href="#symbol-length"><span>Symbol.length</span></a></h2><blockquote><p>长度属性，值为 0</p></blockquote><br>',7),d={id:"symbol-asynciterator",tabindex:"-1"},h={class:"header-anchor",href:"#symbol-asynciterator"},y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator",target:"_blank",rel:"noopener noreferrer"},_=e("br",null,null,-1),u={id:"symbol-hasinstance",tabindex:"-1"},f={class:"header-anchor",href:"#symbol-hasinstance"},S={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",target:"_blank",rel:"noopener noreferrer"},g=e("br",null,null,-1),k={id:"symbol-isconcatspreadable",tabindex:"-1"},v={class:"header-anchor",href:"#symbol-isconcatspreadable"},z={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable",target:"_blank",rel:"noopener noreferrer"},j=e("br",null,null,-1),x={id:"symbol-iterator",tabindex:"-1"},N={class:"header-anchor",href:"#symbol-iterator"},C={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator",target:"_blank",rel:"noopener noreferrer"},J=e("br",null,null,-1),O={id:"symbol-match",tabindex:"-1"},R={class:"header-anchor",href:"#symbol-match"},W={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match",target:"_blank",rel:"noopener noreferrer"},G=e("br",null,null,-1),q={id:"symbol-matchall",tabindex:"-1"},T={class:"header-anchor",href:"#symbol-matchall"},I={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll",target:"_blank",rel:"noopener noreferrer"},w=e("br",null,null,-1),F={id:"symbol-prototype-description",tabindex:"-1"},P={class:"header-anchor",href:"#symbol-prototype-description"},V={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description",target:"_blank",rel:"noopener noreferrer"},B=e("br",null,null,-1),A={id:"symbol-replace",tabindex:"-1"},E={class:"header-anchor",href:"#symbol-replace"},L={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace",target:"_blank",rel:"noopener noreferrer"},Y=e("br",null,null,-1),Z={id:"symbol-search",tabindex:"-1"},D={class:"header-anchor",href:"#symbol-search"},H={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search",target:"_blank",rel:"noopener noreferrer"},K=e("br",null,null,-1),M={id:"symbol-species",tabindex:"-1"},Q={class:"header-anchor",href:"#symbol-species"},U={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species",target:"_blank",rel:"noopener noreferrer"},X=e("br",null,null,-1),$={id:"symbol-split",tabindex:"-1"},ee={class:"header-anchor",href:"#symbol-split"},oe={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split",target:"_blank",rel:"noopener noreferrer"},le=e("br",null,null,-1),se={id:"symbol-toprimitive",tabindex:"-1"},te={class:"header-anchor",href:"#symbol-toprimitive"},ne={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive",target:"_blank",rel:"noopener noreferrer"},ae=e("br",null,null,-1),re={id:"symbol-tostringtag",tabindex:"-1"},ie={class:"header-anchor",href:"#symbol-tostringtag"},ce={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",target:"_blank",rel:"noopener noreferrer"},be=e("br",null,null,-1),pe={id:"symbol-unscopables",tabindex:"-1"},me={class:"header-anchor",href:"#symbol-unscopables"},de={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables",target:"_blank",rel:"noopener noreferrer"},he=e("br",null,null,-1),ye={id:"symbol-for",tabindex:"-1"},_e={class:"header-anchor",href:"#symbol-for"},ue={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for",target:"_blank",rel:"noopener noreferrer"},fe=t("<ul><li>描述：根据给定的键 <code>key</code>，从运行时的 symbol 注册表中找到对应的 symbol</li><li>语法：<code>Symbol.for(key)</code></li><li>key：一个字符串，作为 symbol 注册表中与某 symbol 关联的键，同时也会作为该 symbol 的描述</li><li>返回值：返回由给定的 key 找到的 symbol，否则就是返回新创建的 symbol</li><li>注意 <ul><li>和 <code>Symbol()</code> 不同的是，用 <code>Symbol.for()</code> 方法创建的的 symbol 会被放入一个全局 symbol 注册表中</li><li><code>Symbol.for() 并不是每次都会创建一个新的 symbol</code>，它会首先检查给定的 key 是否已经在注册表中了。假如是，则会直接返回上次存储的那个。否则，它会再新建一个</li></ul></li></ul><br>",2),Se={id:"symbol-keyfor",tabindex:"-1"},ge={class:"header-anchor",href:"#symbol-keyfor"},ke={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor",target:"_blank",rel:"noopener noreferrer"},ve=t(`<ul><li><p>描述：用来获取 symbol 注册表中与某个 symbol 关联的键</p></li><li><p>语法：<code>Symbol.keyFor(sym)</code></p></li><li><p>参数</p><ul><li>sym：存储在 symbol 注册表中的某个 symbol</li></ul></li><li><p>返回值</p><ul><li>如果全局注册表中查找到该symbol，则返回该symbol的key值，形式为string</li><li>如果symbol未在注册表中，返回undefined</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 创建一个 symbol 并放入 Symbol 注册表，key 为 &quot;foo&quot;</span>
<span class="token keyword">var</span> globalSym <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>globalSym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;foo&quot;</span>

<span class="token comment">// 创建一个 symbol，但不放入 symbol 注册表中</span>
<span class="token keyword">var</span> localSym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>localSym<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined，所以是找不到 key 的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function ze(je,xe){const o=a("ExternalLinkIcon");return r(),i("div",null,[c(" more "),e("p",null,[e("a",p,[l("Symbol ( writing... )"),s(o)])]),m,e("h2",d,[e("a",h,[e("span",null,[e("a",y,[l("Symbol.asyncIterator"),s(o)])])])]),_,e("h2",u,[e("a",f,[e("span",null,[e("a",S,[l("Symbol.hasInstance"),s(o)])])])]),g,e("h2",k,[e("a",v,[e("span",null,[e("a",z,[l("Symbol.isConcatSpreadable"),s(o)])])])]),j,e("h2",x,[e("a",N,[e("span",null,[e("a",C,[l("Symbol.iterator"),s(o)])])])]),J,e("h2",O,[e("a",R,[e("span",null,[e("a",W,[l("Symbol.match"),s(o)])])])]),G,e("h2",q,[e("a",T,[e("span",null,[e("a",I,[l("Symbol.matchAll"),s(o)])])])]),w,e("h2",F,[e("a",P,[e("span",null,[e("a",V,[l("Symbol.prototype.description"),s(o)])])])]),B,e("h2",A,[e("a",E,[e("span",null,[e("a",L,[l("Symbol.replace"),s(o)])])])]),Y,e("h2",Z,[e("a",D,[e("span",null,[e("a",H,[l("Symbol.search"),s(o)])])])]),K,e("h2",M,[e("a",Q,[e("span",null,[e("a",U,[l("Symbol.species"),s(o)])])])]),X,e("h2",$,[e("a",ee,[e("span",null,[e("a",oe,[l("Symbol.split"),s(o)])])])]),le,e("h2",se,[e("a",te,[e("span",null,[e("a",ne,[l("Symbol.toPrimitive"),s(o)])])])]),ae,e("h2",re,[e("a",ie,[e("span",null,[e("a",ce,[l("Symbol.toStringTag"),s(o)])])])]),be,e("h2",pe,[e("a",me,[e("span",null,[e("a",de,[l("Symbol.unscopables"),s(o)])])])]),he,e("h2",ye,[e("a",_e,[e("span",null,[e("a",ue,[l("Symbol.for()"),s(o)])])])]),fe,e("h2",Se,[e("a",ge,[e("span",null,[e("a",ke,[l("Symbol.keyFor()"),s(o)])])])]),ve])}const Je=n(b,[["render",ze],["__file","04.Symbol.html.vue"]]),Oe=JSON.parse(`{"path":"/notes/javascript/built-in-objects/04.Symbol.html","title":"Symbol","lang":"zh-CN","frontmatter":{"title":"Symbol","icon":"article","article":false,"sticky":20,"breadcrumb":false,"head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/javascript/built-in-objects/04.Symbol.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"Symbol"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Symbol\\"}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"Symbol.length","slug":"symbol-length","link":"#symbol-length","children":[]},{"level":2,"title":"Symbol.asyncIterator","slug":"symbol-asynciterator","link":"#symbol-asynciterator","children":[]},{"level":2,"title":"Symbol.hasInstance","slug":"symbol-hasinstance","link":"#symbol-hasinstance","children":[]},{"level":2,"title":"Symbol.isConcatSpreadable","slug":"symbol-isconcatspreadable","link":"#symbol-isconcatspreadable","children":[]},{"level":2,"title":"Symbol.iterator","slug":"symbol-iterator","link":"#symbol-iterator","children":[]},{"level":2,"title":"Symbol.match","slug":"symbol-match","link":"#symbol-match","children":[]},{"level":2,"title":"Symbol.matchAll","slug":"symbol-matchall","link":"#symbol-matchall","children":[]},{"level":2,"title":"Symbol.prototype.description","slug":"symbol-prototype-description","link":"#symbol-prototype-description","children":[]},{"level":2,"title":"Symbol.replace","slug":"symbol-replace","link":"#symbol-replace","children":[]},{"level":2,"title":"Symbol.search","slug":"symbol-search","link":"#symbol-search","children":[]},{"level":2,"title":"Symbol.species","slug":"symbol-species","link":"#symbol-species","children":[]},{"level":2,"title":"Symbol.split","slug":"symbol-split","link":"#symbol-split","children":[]},{"level":2,"title":"Symbol.toPrimitive","slug":"symbol-toprimitive","link":"#symbol-toprimitive","children":[]},{"level":2,"title":"Symbol.toStringTag","slug":"symbol-tostringtag","link":"#symbol-tostringtag","children":[]},{"level":2,"title":"Symbol.unscopables","slug":"symbol-unscopables","link":"#symbol-unscopables","children":[]},{"level":2,"title":"Symbol.for()","slug":"symbol-for","link":"#symbol-for","children":[]},{"level":2,"title":"Symbol.keyFor()","slug":"symbol-keyfor","link":"#symbol-keyfor","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":1.94,"words":583},"filePathRelative":"notes/javascript/built-in-objects/04.Symbol.md","localizedDate":"2023年1月11日","excerpt":""}`);export{Je as comp,Oe as data};
