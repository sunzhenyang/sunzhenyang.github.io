import{_ as o,Q as p,S as i,$ as c,a0 as n,a2 as s,a1 as t,a3 as e,E as l}from"./framework-e3ca42fb.js";const r={},d=e(`<h2 id="commitizen" tabindex="-1"><a class="header-anchor" href="#commitizen" aria-hidden="true">#</a> Commitizen</h2><blockquote><p>当使用 Commitizen 提交时，系统会提示在提交时填写所有必需的提交字段</p></blockquote><ol><li>全局安装 <code>Commitizen</code></li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> commitizen@4.2.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>安装并配置 <code>cz-customizable</code> 插件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i cz-customizable@6.3.0 --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="3"><li>添加以下配置到 <code>package.json</code> 中</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token property">&quot;config&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;commitizen&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;path&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node_modules/cz-customizable&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>项目根目录下创建 <code>.cz-config.js</code> 自定义提示文件</li></ol><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 可选类型</span>
  <span class="token literal-property property">types</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>  <span class="token string">&#39;feat:     新功能&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;fix&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>   <span class="token string">&#39;fix:      修复&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;docs&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>  <span class="token string">&#39;docs:     文档变更&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;style:    代码格式(不影响代码运行的变动)&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;refactor&#39;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;refactor: 重构(既不是增加feature，也不是修复bug)&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;perf&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>   <span class="token string">&#39;perf:     性能优化&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>   <span class="token string">&#39;test:     增加测试&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;chore&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>  <span class="token string">&#39;chore:    构建过程或辅助工具的变动&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;revert&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;revert:   回退&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span>  <span class="token string">&#39;build:    打包&#39;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 消息步骤</span>
  <span class="token literal-property property">messages</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;请选择提交类型:&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">customScope</span><span class="token operator">:</span> <span class="token string">&#39;请输入修改范围(可选):&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&#39;请简要描述提交(必填):&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">body</span><span class="token operator">:</span> <span class="token string">&#39;请输入详细描述(可选):&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">footer</span><span class="token operator">:</span> <span class="token string">&#39;请输入要关闭的issue(可选):&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">confirmCommit</span><span class="token operator">:</span> <span class="token string">&#39;确认使用以上信息提交？(y/n/e/h)&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 跳过问题</span>
  <span class="token literal-property property">skipQuestions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;footer&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// subject文字长度默认是72</span>
  <span class="token literal-property property">subjectLimit</span><span class="token operator">:</span> <span class="token number">72</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li>用 <strong><code>git cz</code></strong> 代替 <code>git commit</code>，即可看到提示内容</li></ol><h2 id="git-hooks" tabindex="-1"><a class="header-anchor" href="#git-hooks" aria-hidden="true">#</a> Git Hooks</h2>`,12),u=n("p",null,[n("code",null,"git"),s(" 在执行某个事件之前或之后进行一些其他额外的操作")],-1),m={href:"https://git-scm.com/docs/githooks",target:"_blank",rel:"noopener noreferrer"},k=e('<table><thead><tr><th><div style="width:172px;white-space:nowrap;">Git Hook</div></th><th>调用时机</th><th>说明</th></tr></thead><tbody><tr><td>pre-applypatch</td><td><code>git am</code>执行前</td><td></td></tr><tr><td>applypatch-msg</td><td><code>git am</code>执行前</td><td></td></tr><tr><td>post-applypatch</td><td><code>git am</code>执行后</td><td>不影响<code>git am</code>的结果</td></tr><tr><td><strong>pre-commit</strong></td><td><strong><code>git commit</code>执行前</strong>，不接受任何参数，并且在获取提交日志消息并进行提交之前被调用，脚本<code>git commit</code>以非零状态退出会导致命令在创建提交之前中止<br><strong>会在提交前被调用，并且可以按需指定是否要拒绝本次提交</strong></td><td><strong>可以用<code>git commit --no-verify</code>绕过</strong></td></tr><tr><td><strong>commit-msg</strong></td><td><strong><code>git commit</code>执行前</strong>，可用于将消息规范化为某种项目标准格式，还可用于在检查消息文件后拒绝提交<br><strong>可以用来规范化标准格式，并且可以按需指定是否要拒绝本次提交</strong></td><td><strong>可以用<code>git commit --no-verify</code>绕过</strong></td></tr><tr><td>post-commit</td><td><code>git commit</code>执行后</td><td>不影响<code>git commit</code>的结果</td></tr><tr><td>pre-merge-commit</td><td><code>git merge</code>执行前</td><td>可以用<code>git merge --no-verify</code>绕过。</td></tr><tr><td>prepare-commit-msg</td><td><code>git commit</code>执行后，编辑器打开之前</td><td></td></tr><tr><td>pre-rebase</td><td><code>git rebase</code>执行前</td><td></td></tr><tr><td>post-checkout</td><td><code>git checkout</code>或<code>git switch</code>执行后</td><td>如果不使用<code>--no-checkout</code>参数，则在<code>git clone</code>之后也会执行。</td></tr><tr><td>post-merge</td><td><code>git commit</code>执行后</td><td>在执行<code>git pull</code>时也会被调用</td></tr><tr><td>pre-push</td><td><code>git push</code>执行前</td><td></td></tr><tr><td>pre-receive</td><td><code>git-receive-pack</code>执行前</td><td></td></tr><tr><td>update</td><td></td><td></td></tr><tr><td>post-receive</td><td><code>git-receive-pack</code>执行后</td><td>不影响<code>git-receive-pack</code>的结果</td></tr><tr><td>post-update</td><td>当 <code>git-receive-pack</code>对 <code>git push</code> 作出反应并更新仓库中的引用时</td><td></td></tr><tr><td>push-to-checkout</td><td>当``git-receive-pack<code>对</code>git push<code>做出反应并更新仓库中的引用时，以及当推送试图更新当前被签出的分支且</code>receive.denyCurrentBranch<code>配置被设置为</code>updateInstead`时</td><td></td></tr><tr><td>pre-auto-gc</td><td><code>git gc --auto</code>执行前</td><td></td></tr><tr><td>post-rewrite</td><td>执行<code>git commit --amend</code>或<code>git rebase</code>时</td><td></td></tr><tr><td>sendemail-validate</td><td><code>git send-email</code>执行前</td><td></td></tr><tr><td>fsmonitor-watchman</td><td>配置<code>core.fsmonitor</code>被设置为<code>.git/hooks/fsmonitor-watchman</code>或<code>.git/hooks/fsmonitor-watchmanv2</code>时</td><td></td></tr><tr><td>p4-pre-submit</td><td><code>git-p4 submit</code>执行前</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-prepare-changelist</td><td><code>git-p4 submit</code>执行后，编辑器启动前</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-changelist</td><td><code>git-p4 submit</code>执行并编辑完<code>changelist message</code>后</td><td>可以用<code>git-p4 submit --no-verify</code>绕过</td></tr><tr><td>p4-post-changelist</td><td><code>git-p4 submit</code>执行后</td><td></td></tr><tr><td>post-index-change</td><td>索引被写入到<code>read-cache.c do_write_locked_index</code>后</td><td></td></tr></tbody></table><h2 id="commitlint" tabindex="-1"><a class="header-anchor" href="#commitlint" aria-hidden="true">#</a> commitlint</h2><blockquote><p>用于检查提交信息（<strong><code>npm</code> 需要在 7.x 以上版本！</strong>）</p></blockquote><ol><li>安装依赖</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev @commitlint/config-conventional@12.1.4 @commitlint/cli@12.1.4\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>创建 <code>commitlint.config.js</code> 文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}&quot;</span> <span class="token operator">&gt;</span> commitlint.config.js\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',7),g={start:"3"},v=n("code",null,"commitlint.config.js",-1),b={href:"https://github.com/conventional-changelog/commitlint/blob/master/@commitlint/config-conventional/index.js",target:"_blank",rel:"noopener noreferrer"},h=e(`<blockquote><p><strong>注意：确保保存为 <code>UTF-8</code> 的编码格式</strong>，否则可能会出现错误</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 继承的规则</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;@commitlint/config-conventional&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// 定义规则类型</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// type 类型定义，表示 git 提交的 type 必须在以下类型范围内</span>
    <span class="token string-property property">&#39;type-enum&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span>
      <span class="token punctuation">[</span>
        <span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 新功能 feature</span>
        <span class="token string">&#39;fix&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 修复 bug</span>
        <span class="token string">&#39;docs&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 文档注释</span>
        <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 代码格式(不影响代码运行的变动)</span>
        <span class="token string">&#39;refactor&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 重构(既不增加新功能，也不是修复bug)</span>
        <span class="token string">&#39;perf&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 性能优化</span>
        <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 增加测试</span>
        <span class="token string">&#39;chore&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 构建过程或辅助工具的变动</span>
        <span class="token string">&#39;revert&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 回退</span>
        <span class="token string">&#39;build&#39;</span> <span class="token comment">// 打包</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// subject 大小写不做校验</span>
    <span class="token string-property property">&#39;subject-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="husky" tabindex="-1"><a class="header-anchor" href="#husky" aria-hidden="true">#</a> husky</h2><blockquote><p><code>git hooks</code>工具（<strong><code>npm</code> 需要在 7.x 以上版本！</strong>）</p></blockquote><ol><li>安装依赖</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> husky@7.0.1 --save-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>启动 <code>hooks</code> ， 生成 <code>.husky</code> 文件夹</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img@main/img/616fcf5e092cec4f02410081.jpg" alt="图片描述" tabindex="0" loading="lazy"><figcaption>图片描述</figcaption></figure><ol start="3"><li>在 <code>package.json</code> 中生成 <code>prepare</code> 指令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> set-script prepare <span class="token string">&quot;husky install&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img@main/img/616fcf7909a0cc5407790256.jpg" alt="图片描述" tabindex="0" loading="lazy"><figcaption>图片描述</figcaption></figure><ol start="4"><li>执行 <code>prepare</code> 指令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> run prepare
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="5"><li>执行成功，提示</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img@main/img/616fcf8f0984aeb203920097.jpg" alt="图片描述" tabindex="0" loading="lazy"><figcaption>图片描述</figcaption></figure><ol start="6"><li>添加 <code>commitlint</code> 的 <code>hook</code> 到 <code>husky</code>中，并指令在 <code>commit-msg</code> 的 <code>hooks</code> 下执行 <code>npx --no-install commitlint --edit &quot;$1&quot;</code> 指令</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/commit-msg <span class="token string">&#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="7"><li>此时的 <code>.husky</code> 的文件结构</li></ol><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img@main/img/616fcfa90931dcba02290130.jpg" alt="图片描述" tabindex="0" loading="lazy"><figcaption>图片描述</figcaption></figure><p><strong>至此， 不符合规范的 commit 将不再可提交</strong></p><h2 id="pre-commit" tabindex="-1"><a class="header-anchor" href="#pre-commit" aria-hidden="true">#</a> pre-commit</h2><blockquote><p>提交时检测代码规范</p></blockquote><ol><li>执行 <code>npx husky add .husky/pre-commit &quot;npx eslint --ext .js,.vue src&quot;</code> 添加 <code>commit</code> 时的 <code>hook</code>（<code>npx eslint --ext .js,.vue src</code> 会在执行到该 <code>hook</code> 时运行）</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/pre-commit <span class="token string">&quot;npx eslint --ext .js,.vue src&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>该操作会生成对应文件 <code>pre-commit</code></li></ol><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img@main/img/616fcfc809d6861403020111.jpg" alt="图片描述" tabindex="0" loading="lazy"><figcaption>图片描述</figcaption></figure><ol start="3"><li><p>关闭 <code>VSCode</code> 的自动保存操作</p></li><li><p>修改一处代码，使其不符合 <code>ESLint</code> 校验规则</p></li><li><p>执行 <strong>提交操作</strong> 会发现，抛出一系列的错误，代码无法提交</p></li><li><p>想要提交代码，必须处理完成所有的错误信息</p></li></ol><h2 id="post-commit" tabindex="-1"><a class="header-anchor" href="#post-commit" aria-hidden="true">#</a> post-commit</h2><blockquote><p>提交后自动推送</p></blockquote><p>该操作会生成对应文件 <code>post-commit</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>npx husky <span class="token function">add</span> .husky/post-commit <span class="token string">&quot;git push&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="lint-staged" tabindex="-1"><a class="header-anchor" href="#lint-staged" aria-hidden="true">#</a> lint-staged</h2>`,33),y=n("p",null,"只检查本次修改更新的代码，并在出现错误的时候，自动修复并且推送",-1),f={href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"},x=e(`<ol><li>安装依赖</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> --save-dev lint-staged
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>修改 <code>package.json</code> 配置</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;lint-staged&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
  <span class="token string">&quot;src/**/*.{js,vue}&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
  	<span class="token string">&quot;eslint --fix&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>修改 <code>.husky/pre-commit</code> 文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/sh</span>
<span class="token builtin class-name">.</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">dirname</span> <span class="token string">&quot;<span class="token variable">$0</span>&quot;</span><span class="token variable">)</span></span>/_/husky.sh&quot;</span>

npx lint-staged
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),_=n("code",null,"commit",-1),q=n("code",null,"eslint",-1),j={href:"https://panjiachen.github.io/vue-element-admin-site/zh/guide/advanced/eslint.html",target:"_blank",rel:"noopener noreferrer"},z=n("ul",null,[n("li",null,[n("p",null,"如果符合规则，则提交成功")]),n("li",null,[n("p",null,[s("如果不符合规则，会自动执行 "),n("code",null,"eslint --fix"),s(" 尝试自动修复")]),n("ul",null,[n("li",null,"如果修复成功，则会把修复好的代码提交"),n("li",null,"如果修复失败，则会提示错误，必须修复好错误之后才能允许提交代码")])])],-1);function w(C,E){const a=l("ExternalLinkIcon");return p(),i("div",null,[c(" more "),d,n("blockquote",null,[u,n("p",null,[n("a",m,[s("【官方文档】"),t(a)])])]),k,n("ol",g,[n("li",null,[s("打开 "),v,s(" ， 增加配置项（ "),n("a",b,[s("config-conventional 默认配置点击可查看"),t(a)]),s(" ）")])]),h,n("blockquote",null,[y,n("p",null,[n("a",f,[s("【GitHub】"),t(a)])])]),x,n("ul",null,[n("li",null,[n("p",null,[s("如上配置，每次会在本地 "),_,s(" 之前，校验提交的内容是否符合本地配置的 "),q,s("规则(见文档 "),n("a",j,[s("ESLint"),t(a)]),s(" )，校验会出现两种结果")]),z])])])}const V=o(r,[["render",w],["__file","git.html.vue"]]);export{V as default};
