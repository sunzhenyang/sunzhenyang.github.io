const e=JSON.parse(`{"key":"v-4ef06d69","path":"/technology/es6/object.html","title":"对象的扩展","lang":"zh-CN","frontmatter":{"title":"对象的扩展","icon":"article","category":"javascript","article":false,"tag":["es6"],"copyright":"Copyright by 阮一峰","description":"对象（object）是 JavaScript 最重要的数据结构。ES6 对它进行了重大升级，本章介绍数据结构本身的改变，下一章介绍Object对象的新增方法。 属性的简洁表示法 ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。 const foo = 'bar'; const baz = {foo}; baz // {foo: \\"bar\\"} // 等同于 const baz = {foo: foo};","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/es6/object.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"对象的扩展"}],["meta",{"property":"og:description","content":"对象（object）是 JavaScript 最重要的数据结构。ES6 对它进行了重大升级，本章介绍数据结构本身的改变，下一章介绍Object对象的新增方法。 属性的简洁表示法 ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。 const foo = 'bar'; const baz = {foo}; baz // {foo: \\"bar\\"} // 等同于 const baz = {foo: foo};"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"es6"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"对象的扩展\\",\\"description\\":\\"对象（object）是 JavaScript 最重要的数据结构。ES6 对它进行了重大升级，本章介绍数据结构本身的改变，下一章介绍Object对象的新增方法。 属性的简洁表示法 ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。 const foo = 'bar'; const baz = {foo}; baz // {foo: \\\\\\"bar\\\\\\"} // 等同于 const baz = {foo: foo};\\"}"]]},"headers":[{"level":2,"title":"属性的简洁表示法","slug":"属性的简洁表示法","link":"#属性的简洁表示法","children":[]},{"level":2,"title":"属性名表达式","slug":"属性名表达式","link":"#属性名表达式","children":[]},{"level":2,"title":"方法的 name 属性","slug":"方法的-name-属性","link":"#方法的-name-属性","children":[]},{"level":2,"title":"属性的可枚举性和遍历","slug":"属性的可枚举性和遍历","link":"#属性的可枚举性和遍历","children":[{"level":3,"title":"可枚举性","slug":"可枚举性","link":"#可枚举性","children":[]},{"level":3,"title":"属性的遍历","slug":"属性的遍历","link":"#属性的遍历","children":[]}]},{"level":2,"title":"super 关键字","slug":"super-关键字","link":"#super-关键字","children":[]},{"level":2,"title":"对象的扩展运算符","slug":"对象的扩展运算符","link":"#对象的扩展运算符","children":[{"level":3,"title":"解构赋值","slug":"解构赋值","link":"#解构赋值","children":[]},{"level":3,"title":"扩展运算符","slug":"扩展运算符","link":"#扩展运算符","children":[]}]},{"level":2,"title":"AggregateError 错误对象","slug":"aggregateerror-错误对象","link":"#aggregateerror-错误对象","children":[]},{"level":2,"title":"Error 对象的 cause 属性","slug":"error-对象的-cause-属性","link":"#error-对象的-cause-属性","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":15.95,"words":4785},"filePathRelative":"technology/es6/object.md","localizedDate":"2023年1月11日","excerpt":"<p>对象（object）是 JavaScript 最重要的数据结构。ES6 对它进行了重大升级，本章介绍数据结构本身的改变，下一章介绍<code>Object</code>对象的新增方法。</p>\\n<h2> 属性的简洁表示法</h2>\\n<p>ES6 允许在大括号里面，直接写入变量和函数，作为对象的属性和方法。这样的书写更加简洁。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> foo <span class=\\"token operator\\">=</span> <span class=\\"token string\\">'bar'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> baz <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>foo<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\nbaz <span class=\\"token comment\\">// {foo: \\"bar\\"}</span>\\n\\n<span class=\\"token comment\\">// 等同于</span>\\n<span class=\\"token keyword\\">const</span> baz <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token literal-property property\\">foo</span><span class=\\"token operator\\">:</span> foo<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
