import{_ as n,o as s,c as a,e}from"./app.095bd546.js";const t={},p=e(`<h2 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h2><p>\u5728\u4E4B\u524D\u7684\u7AE0\u8282\u6211\u4EEC\u4E86\u89E3\u5230\uFF0C\u5728\u53D1\u9001\u8BF7\u6C42\u7684\u65F6\u5019\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u914D\u7F6E\uFF0C\u6765\u51B3\u5B9A\u8BF7\u6C42\u7684\u4E0D\u540C\u884C\u4E3A\u3002\u6211\u4EEC\u4E5F\u5E0C\u671B <code>ts-axios</code> \u53EF\u4EE5\u6709\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u5B9A\u4E49\u4E00\u4E9B\u9ED8\u8BA4\u7684\u884C\u4E3A\u3002\u8FD9\u6837\u5728\u53D1\u9001\u6BCF\u4E2A\u8BF7\u6C42\uFF0C\u7528\u6237\u4F20\u9012\u7684\u914D\u7F6E\u53EF\u4EE5\u548C\u9ED8\u8BA4\u914D\u7F6E\u505A\u4E00\u5C42\u5408\u5E76\u3002</p><p>\u548C\u5B98\u7F51 <code>axios</code> \u5E93\u4FDD\u6301\u4E00\u81F4\uFF0C\u6211\u4EEC\u7ED9 <code>axios</code> \u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E2A <code>defaults</code> \u5C5E\u6027\uFF0C\u8868\u793A\u9ED8\u8BA4\u914D\u7F6E\uFF0C\u4F60\u751A\u81F3\u53EF\u4EE5\u76F4\u63A5\u4FEE\u6539\u8FD9\u4E9B\u9ED8\u8BA4\u914D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span>
axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>post<span class="token punctuation">[</span><span class="token string">&#39;Content-Type&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">2000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u5BF9\u4E8E <code>headers</code> \u7684\u9ED8\u8BA4\u914D\u7F6E\u652F\u6301 <code>common</code> \u548C\u4E00\u4E9B\u8BF7\u6C42 <code>method</code> \u5B57\u6BB5\uFF0C<code>common</code> \u8868\u793A\u5BF9\u4E8E\u4EFB\u4F55\u7C7B\u578B\u7684\u8BF7\u6C42\u90FD\u8981\u6DFB\u52A0\u8BE5\u5C5E\u6027\uFF0C\u800C <code>method</code> \u8868\u793A\u53EA\u6709\u8BE5\u7C7B\u578B\u8BF7\u6C42\u65B9\u6CD5\u624D\u4F1A\u6DFB\u52A0\u5BF9\u5E94\u7684\u5C5E\u6027\u3002</p><p>\u5728\u4E0A\u8FF0\u4F8B\u5B50\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u9ED8\u8BA4\u4E3A\u6240\u6709\u8BF7\u6C42\u7684 <code>header</code> \u6DFB\u52A0 <code>test</code> \u5C5E\u6027\uFF0C\u4F1A\u9ED8\u8BA4\u4E3A <code>post</code> \u8BF7\u6C42\u7684 <code>header</code> \u6DFB\u52A0 <code>Content-Type</code> \u5C5E\u6027\u3002</p><h2 id="\u9ED8\u8BA4\u914D\u7F6E" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u914D\u7F6E" aria-hidden="true">#</a> \u9ED8\u8BA4\u914D\u7F6E</h2><h3 id="\u9ED8\u8BA4\u914D\u7F6E\u5B9A\u4E49" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u914D\u7F6E\u5B9A\u4E49" aria-hidden="true">#</a> \u9ED8\u8BA4\u914D\u7F6E\u5B9A\u4E49</h3><p>\u63A5\u4E0B\u6765\uFF0C\u6211\u4EEC\u5148\u5B9E\u73B0\u9ED8\u8BA4\u914D\u7F6E</p><p><code>defaults.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AxiosRequestConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./types&#39;</span>

<span class="token keyword">const</span> defaults<span class="token operator">:</span> AxiosRequestConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>

  timeout<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    common<span class="token operator">:</span> <span class="token punctuation">{</span>
      Accept<span class="token operator">:</span> <span class="token string">&#39;application/json, text/plain, */*&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> methodsNoData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;options&#39;</span><span class="token punctuation">]</span>

methodsNoData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  defaults<span class="token punctuation">.</span>headers<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> methodsWithData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">]</span>

methodsWithData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  defaults<span class="token punctuation">.</span>headers<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> defaults
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5B9A\u4E49\u4E86 <code>defaults</code> \u5E38\u91CF\uFF0C\u5B83\u5305\u542B\u9ED8\u8BA4\u8BF7\u6C42\u7684\u65B9\u6CD5\u3001\u8D85\u65F6\u65F6\u95F4\uFF0C\u4EE5\u53CA <code>headers</code> \u914D\u7F6E\u3002</p><p>\u672A\u6765\u6211\u4EEC\u4F1A\u6839\u636E\u65B0\u7684\u9700\u6C42\u6DFB\u52A0\u66F4\u591A\u7684\u9ED8\u8BA4\u914D\u7F6E\u3002</p><h3 id="\u6DFB\u52A0\u5230-axios-\u5BF9\u8C61\u4E2D" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5230-axios-\u5BF9\u8C61\u4E2D" aria-hidden="true">#</a> \u6DFB\u52A0\u5230 axios \u5BF9\u8C61\u4E2D</h3><p>\u6839\u636E\u9700\u6C42\uFF0C\u6211\u4EEC\u8981\u7ED9 <code>axios</code> \u5BF9\u8C61\u6DFB\u52A0\u4E00\u4E2A <code>defaults</code> \u5C5E\u6027\uFF0C\u8868\u793A\u9ED8\u8BA4\u914D\u7F6E\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">Axios</span> <span class="token punctuation">{</span>
  defaults<span class="token operator">:</span> AxiosRequestConfig
  interceptors<span class="token operator">:</span> Interceptors

  <span class="token function">constructor</span><span class="token punctuation">(</span>initConfig<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>defaults <span class="token operator">=</span> initConfig
    <span class="token keyword">this</span><span class="token punctuation">.</span>interceptors <span class="token operator">=</span> <span class="token punctuation">{</span>
      request<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager<span class="token operator">&lt;</span>AxiosRequestConfig<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      response<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">InterceptorManager<span class="token operator">&lt;</span>AxiosResponse<span class="token operator">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u7ED9 <code>Axios</code> \u7C7B\u6DFB\u52A0\u4E00\u4E2A <code>defaults</code> \u6210\u5458\u5C5E\u6027\uFF0C\u5E76\u4E14\u8BA9 <code>Axios</code> \u7684\u6784\u9020\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A <code>initConfig</code> \u5BF9\u8C61\uFF0C\u628A <code>initConfig</code> \u8D4B\u503C\u7ED9 <code>this.defaults</code>\u3002</p><p>\u63A5\u7740\u4FEE\u6539 <code>createInstance</code> \u65B9\u6CD5\uFF0C\u652F\u6301\u4F20\u5165 <code>config</code> \u5BF9\u8C61\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> defaults <span class="token keyword">from</span> <span class="token string">&#39;./defaults&#39;</span>

<span class="token keyword">function</span> <span class="token function">createInstance</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> AxiosStatic <span class="token punctuation">{</span>
  <span class="token keyword">const</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Axios</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  <span class="token keyword">const</span> instance <span class="token operator">=</span> Axios<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>

  <span class="token comment">// extend(instance, Axios.prototype, context)</span>

  <span class="token function">extend</span><span class="token punctuation">(</span>instance<span class="token punctuation">,</span> context<span class="token punctuation">)</span>

  <span class="token keyword">return</span> instance <span class="token keyword">as</span> AxiosStatic
<span class="token punctuation">}</span>

<span class="token keyword">const</span> axios <span class="token operator">=</span> <span class="token function">createInstance</span><span class="token punctuation">(</span>defaults<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u6211\u4EEC\u5C31\u53EF\u4EE5\u5728\u6267\u884C <code>createInstance</code> \u521B\u5EFA <code>axios</code> \u5BF9\u8C61\u7684\u65F6\u5019\uFF0C\u628A\u9ED8\u8BA4\u914D\u7F6E\u4F20\u5165\u4E86\u3002</p><h2 id="\u914D\u7F6E\u5408\u5E76\u53CA\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u914D\u7F6E\u5408\u5E76\u53CA\u7B56\u7565" aria-hidden="true">#</a> \u914D\u7F6E\u5408\u5E76\u53CA\u7B56\u7565</h2><p>\u5B9A\u4E49\u4E86\u9ED8\u8BA4\u914D\u7F6E\u540E\uFF0C\u6211\u4EEC\u53D1\u9001\u6BCF\u4E2A\u8BF7\u6C42\u7684\u65F6\u5019\u9700\u8981\u628A\u81EA\u5B9A\u4E49\u914D\u7F6E\u548C\u9ED8\u8BA4\u914D\u7F6E\u505A\u5408\u5E76\uFF0C\u5B83\u5E76\u4E0D\u662F\u7B80\u5355\u7684 2 \u4E2A\u666E\u901A\u5BF9\u8C61\u7684\u5408\u5E76\uFF0C\u5BF9\u4E8E\u4E0D\u540C\u7684\u5B57\u6BB5\u5408\u5E76\uFF0C\u4F1A\u6709\u4E0D\u540C\u7684\u5408\u5E76\u7B56\u7565\u3002\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>config1 <span class="token operator">=</span> <span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>

  timeout<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>

  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    common<span class="token operator">:</span> <span class="token punctuation">{</span>
      Accept<span class="token operator">:</span> <span class="token string">&#39;application/json, text/plain, */*&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

config2 <span class="token operator">=</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/config/post&#39;</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    test<span class="token operator">:</span> <span class="token string">&#39;321&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

merged <span class="token operator">=</span> <span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/config/post&#39;</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    common<span class="token operator">:</span> <span class="token punctuation">{</span>
      Accept<span class="token operator">:</span> <span class="token string">&#39;application/json, text/plain, */*&#39;</span>
    <span class="token punctuation">}</span>
    test<span class="token operator">:</span> <span class="token string">&#39;321&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u5728 <code>core/mergeConfig.ts</code> \u4E2D\u5B9E\u73B0\u5408\u5E76\u65B9\u6CD5\u3002</p><h3 id="\u5408\u5E76\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5408\u5E76\u65B9\u6CD5" aria-hidden="true">#</a> \u5408\u5E76\u65B9\u6CD5</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span>
  config1<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">,</span>
  config2<span class="token operator">?</span><span class="token operator">:</span> AxiosRequestConfig
<span class="token punctuation">)</span><span class="token operator">:</span> AxiosRequestConfig <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    config2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> config <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> config2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">mergeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> config1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>config2<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">mergeField</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">function</span> <span class="token function">mergeField</span><span class="token punctuation">(</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> strat <span class="token operator">=</span> strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">||</span> defaultStrat
    config<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">strat</span><span class="token punctuation">(</span>config1<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> config2<span class="token operator">!</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> config
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5408\u5E76\u65B9\u6CD5\u7684\u6574\u4F53\u601D\u8DEF\u5C31\u662F\u5BF9 <code>config1</code> \u548C <code>config2</code> \u4E2D\u7684\u5C5E\u6027\u904D\u5386\uFF0C\u6267\u884C <code>mergeField</code> \u65B9\u6CD5\u505A\u5408\u5E76\uFF0C\u8FD9\u91CC <code>config1</code> \u4EE3\u8868\u9ED8\u8BA4\u914D\u7F6E\uFF0C<code>config2</code> \u4EE3\u8868\u81EA\u5B9A\u4E49\u914D\u7F6E\u3002</p><p>\u904D\u5386\u8FC7\u7A0B\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u901A\u8FC7 <code>config2[key]</code> \u8FD9\u79CD\u7D22\u5F15\u7684\u65B9\u5F0F\u8BBF\u95EE\uFF0C\u6240\u4EE5\u9700\u8981\u7ED9 <code>AxiosRequestConfig</code> \u7684\u63A5\u53E3\u5B9A\u4E49\u6DFB\u52A0\u4E00\u4E2A\u5B57\u7B26\u4E32\u7D22\u5F15\u7B7E\u540D\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosRequestConfig</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>

  <span class="token punctuation">[</span>propName<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 <code>mergeField</code> \u65B9\u6CD5\u4E2D\uFF0C\u6211\u4EEC\u4F1A\u9488\u5BF9\u4E0D\u540C\u7684\u5C5E\u6027\u4F7F\u7528\u4E0D\u540C\u7684\u5408\u5E76\u7B56\u7565\u3002</p><h3 id="\u9ED8\u8BA4\u5408\u5E76\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u9ED8\u8BA4\u5408\u5E76\u7B56\u7565" aria-hidden="true">#</a> \u9ED8\u8BA4\u5408\u5E76\u7B56\u7565</h3><p>\u8FD9\u662F\u5927\u90E8\u5206\u5C5E\u6027\u7684\u5408\u5E76\u7B56\u7565\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">defaultStrat</span><span class="token punctuation">(</span>val1<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> val2<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">typeof</span> val2 <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> val2 <span class="token operator">:</span> val1
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B83\u5F88\u7B80\u5355\uFF0C\u5982\u679C\u6709 <code>val2</code> \u5219\u8FD4\u56DE <code>val2</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>val1</code>\uFF0C\u4E5F\u5C31\u662F\u5982\u679C\u81EA\u5B9A\u4E49\u914D\u7F6E\u4E2D\u5B9A\u4E49\u4E86\u67D0\u4E2A\u5C5E\u6027\uFF0C\u5C31\u91C7\u7528\u81EA\u5B9A\u4E49\u7684\uFF0C\u5426\u5219\u5C31\u7528\u9ED8\u8BA4\u914D\u7F6E\u3002</p><h3 id="\u53EA\u63A5\u53D7\u81EA\u5B9A\u4E49\u914D\u7F6E\u5408\u5E76\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u53EA\u63A5\u53D7\u81EA\u5B9A\u4E49\u914D\u7F6E\u5408\u5E76\u7B56\u7565" aria-hidden="true">#</a> \u53EA\u63A5\u53D7\u81EA\u5B9A\u4E49\u914D\u7F6E\u5408\u5E76\u7B56\u7565</h3><p>\u5BF9\u4E8E\u4E00\u4E9B\u5C5E\u6027\u5982 <code>url</code>\u3001<code>params</code>\u3001<code>data</code>\uFF0C\u5408\u5E76\u7B56\u7565\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">fromVal2Strat</span><span class="token punctuation">(</span>val1<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> val2<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val2 <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val2
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> stratKeysFromVal2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;params&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">]</span>

stratKeysFromVal2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> fromVal2Strat
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u5BF9\u4E8E <code>url</code>\u3001<code>params</code>\u3001<code>data</code> \u8FD9\u4E9B\u5C5E\u6027\uFF0C\u9ED8\u8BA4\u914D\u7F6E\u663E\u7136\u662F\u6CA1\u6709\u610F\u4E49\u7684\uFF0C\u5B83\u4EEC\u662F\u548C\u6BCF\u4E2A\u8BF7\u6C42\u5F3A\u76F8\u5173\u7684\uFF0C\u6240\u4EE5\u6211\u4EEC\u53EA\u4ECE\u81EA\u5B9A\u4E49\u914D\u7F6E\u4E2D\u83B7\u53D6\u3002</p><h3 id="\u590D\u6742\u5BF9\u8C61\u5408\u5E76\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#\u590D\u6742\u5BF9\u8C61\u5408\u5E76\u7B56\u7565" aria-hidden="true">#</a> \u590D\u6742\u5BF9\u8C61\u5408\u5E76\u7B56\u7565</h3><p>\u5BF9\u4E8E\u4E00\u4E9B\u5C5E\u6027\u5982 <code>headers</code>\uFF0C\u5408\u5E76\u7B56\u7565\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">deepMergeStrat</span><span class="token punctuation">(</span>val1<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> val2<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>val2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>val1<span class="token punctuation">,</span> val2<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val2 <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val2
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>val1<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> val1 <span class="token operator">!==</span> <span class="token string">&#39;undefined&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> val1
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> stratKeysDeepMerge <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;headers&#39;</span><span class="token punctuation">]</span>

stratKeysDeepMerge<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  strats<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> deepMergeStrat
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>helpers/util.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span><span class="token operator">...</span>objs<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>

  objs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>obj <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>key <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> val <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isPlainObject</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> val
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E <code>headers</code> \u8FD9\u7C7B\u7684\u590D\u6742\u5BF9\u8C61\u5C5E\u6027\uFF0C\u6211\u4EEC\u9700\u8981\u4F7F\u7528\u6DF1\u62F7\u8D1D\u7684\u65B9\u5F0F\uFF0C\u540C\u65F6\u4E5F\u5904\u7406\u4E86\u5176\u5B83\u4E00\u4E9B\u60C5\u51B5\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u4E5F\u53EF\u80FD\u662F\u4E00\u4E2A\u975E\u5BF9\u8C61\u7684\u666E\u901A\u503C\u3002\u672A\u6765\u6211\u4EEC\u8BB2\u5230\u8BA4\u8BC1\u6388\u6743\u7684\u65F6\u5019\uFF0C<code>auth</code> \u5C5E\u6027\u4E5F\u662F\u8FD9\u4E2A\u5408\u5E76\u7B56\u7565\u3002</p><p>\u6700\u540E\u6211\u4EEC\u5728 <code>request</code> \u65B9\u6CD5\u91CC\u6DFB\u52A0\u5408\u5E76\u914D\u7F6E\u7684\u903B\u8F91\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>config <span class="token operator">=</span> <span class="token function">mergeConfig</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>defaults<span class="token punctuation">,</span> config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="flatten-headers" tabindex="-1"><a class="header-anchor" href="#flatten-headers" aria-hidden="true">#</a> flatten headers</h2><p>\u7ECF\u8FC7\u5408\u5E76\u540E\u7684\u914D\u7F6E\u4E2D\u7684 <code>headers</code> \u662F\u4E00\u4E2A\u590D\u6742\u5BF9\u8C61\uFF0C\u591A\u4E86 <code>common</code>\u3001<code>post</code>\u3001<code>get</code> \u7B49\u5C5E\u6027\uFF0C\u800C\u8FD9\u4E9B\u5C5E\u6027\u4E2D\u7684\u503C\u624D\u662F\u6211\u4EEC\u8981\u771F\u6B63\u6DFB\u52A0\u5230\u8BF7\u6C42 <code>header</code> \u4E2D\u7684\u3002</p><p>\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>headers<span class="token operator">:</span> <span class="token punctuation">{</span>
  common<span class="token operator">:</span> <span class="token punctuation">{</span>
    Accept<span class="token operator">:</span> <span class="token string">&#39;application/json, text/plain, */*&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  post<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span><span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u9700\u8981\u628A\u5B83\u538B\u6210\u4E00\u7EA7\u7684\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>headers<span class="token operator">:</span> <span class="token punctuation">{</span>
  Accept<span class="token operator">:</span> <span class="token string">&#39;application/json, text/plain, */*&#39;</span><span class="token punctuation">,</span>
 <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span><span class="token string">&#39;application/x-www-form-urlencoded&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u8981\u6CE8\u610F\u7684\u662F\uFF0C\u5BF9\u4E8E <code>common</code> \u4E2D\u5B9A\u4E49\u7684 <code>header</code> \u5B57\u6BB5\uFF0C\u6211\u4EEC\u90FD\u8981\u63D0\u53D6\uFF0C\u800C\u5BF9\u4E8E <code>post</code>\u3001<code>get</code> \u8FD9\u7C7B\u63D0\u53D6\uFF0C\u9700\u8981\u548C\u8BE5\u6B21\u8BF7\u6C42\u7684\u65B9\u6CD5\u5BF9\u5E94\u3002</p><p>\u63A5\u4E0B\u6765\u6211\u4EEC\u5B9E\u73B0 <code>flattenHeaders</code> \u65B9\u6CD5\u3002</p><p><code>helpers/header.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">flattenHeaders</span><span class="token punctuation">(</span>headers<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> method<span class="token operator">:</span> Method<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>headers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> headers
  <span class="token punctuation">}</span>
  headers <span class="token operator">=</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>headers<span class="token punctuation">.</span>common <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> headers<span class="token punctuation">[</span>method<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> headers<span class="token punctuation">)</span>

  <span class="token keyword">const</span> methodsToDelete <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;delete&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;head&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;options&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;put&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;patch&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;common&#39;</span><span class="token punctuation">]</span>

  methodsToDelete<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>method <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">delete</span> headers<span class="token punctuation">[</span>method<span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> headers
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 <code>deepMerge</code> \u7684\u65B9\u5F0F\u628A <code>common</code>\u3001<code>post</code> \u7684\u5C5E\u6027\u62F7\u8D1D\u5230 <code>headers</code> \u8FD9\u4E00\u7EA7\uFF0C\u7136\u540E\u518D\u628A <code>common</code>\u3001<code>post</code> \u8FD9\u4E9B\u5C5E\u6027\u5220\u6389\u3002</p><p>\u7136\u540E\u6211\u4EEC\u5728\u771F\u6B63\u53D1\u9001\u8BF7\u6C42\u524D\u6267\u884C\u8FD9\u4E2A\u903B\u8F91\u3002</p><p><code>core/dispatchRequest.ts</code>\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">processConfig</span><span class="token punctuation">(</span>config<span class="token operator">:</span> AxiosRequestConfig<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token function">transformURL</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  config<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token function">transformHeaders</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  config<span class="token punctuation">.</span>data <span class="token operator">=</span> <span class="token function">transformRequestData</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
  config<span class="token punctuation">.</span>headers <span class="token operator">=</span> <span class="token function">flattenHeaders</span><span class="token punctuation">(</span>config<span class="token punctuation">.</span>headers<span class="token punctuation">,</span> config<span class="token punctuation">.</span>method<span class="token operator">!</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u786E\u4FDD\u6211\u4EEC\u4E86\u914D\u7F6E\u4E2D\u7684 <code>headers</code> \u662F\u53EF\u4EE5\u6B63\u786E\u6DFB\u52A0\u5230\u8BF7\u6C42 <code>header</code> \u4E2D\u7684</p><h2 id="demo-\u7F16\u5199" tabindex="-1"><a class="header-anchor" href="#demo-\u7F16\u5199" aria-hidden="true">#</a> demo \u7F16\u5199</h2><p>\u5728 <code>examples</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>config</code> \u76EE\u5F55\uFF0C\u5728 <code>config</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>index.html</code>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Config example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/__build__/config.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u521B\u5EFA <code>app.ts</code> \u4F5C\u4E3A\u5165\u53E3\u6587\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;../../src/index&#39;</span>
<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>

axios<span class="token punctuation">.</span>defaults<span class="token punctuation">.</span>headers<span class="token punctuation">.</span>common<span class="token punctuation">[</span><span class="token string">&#39;test2&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">123</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/config/post&#39;</span><span class="token punctuation">,</span>
  method<span class="token operator">:</span> <span class="token string">&#39;post&#39;</span><span class="token punctuation">,</span>
  data<span class="token operator">:</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    a<span class="token operator">:</span> <span class="token number">1</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  headers<span class="token operator">:</span> <span class="token punctuation">{</span>
    test<span class="token operator">:</span> <span class="token string">&#39;321&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u6211\u4EEC\u989D\u5916\u5F15\u5165\u4E86 <code>qs</code> \u5E93\uFF0C\u5B83\u662F\u4E00\u4E2A\u67E5\u8BE2\u5B57\u7B26\u4E32\u89E3\u6790\u548C\u5B57\u7B26\u4E32\u5316\u7684\u5E93\u3002</p><p>\u6BD4\u5982\u6211\u4EEC\u7684\u4F8B\u5B50\u4E2D\u5BF9\u4E8E <code>{a:1}</code> \u7ECF\u8FC7 <code>qs.stringify</code> \u53D8\u6210 <code>a=1</code>\u3002</p><p>\u7531\u4E8E\u6211\u4EEC\u7684\u4F8B\u5B50\u7ED9\u9ED8\u8BA4\u503C\u6DFB\u52A0\u4E86 <code>post</code> \u548C <code>common</code> \u7684 <code>headers</code>\uFF0C\u6211\u4EEC\u5728\u8BF7\u6C42\u524D\u505A\u914D\u7F6E\u5408\u5E76\uFF0C\u4E8E\u662F\u6211\u4EEC\u8BF7\u6C42\u7684 <code>header</code> \u5C31\u6DFB\u52A0\u4E86 <code>Content-Type</code> \u5B57\u6BB5\uFF0C\u5B83\u7684\u503C\u662F <code>application/x-www-form-urlencoded</code>\uFF1B\u53E6\u5916\u6211\u4EEC\u4E5F\u6DFB\u52A0\u4E86 <code>test2</code> \u5B57\u6BB5\uFF0C\u5B83\u7684\u503C\u662F <code>123</code>\u3002</p><p>\u81F3\u6B64\uFF0C\u6211\u4EEC\u5408\u5E76\u914D\u7F6E\u7684\u903B\u8F91\u5C31\u5B9E\u73B0\u5B8C\u4E86\u3002\u6211\u4EEC\u5728\u524D\u9762\u7684\u7AE0\u8282\u7F16\u5199 <code>axios</code> \u7684\u57FA\u7840\u529F\u80FD\u7684\u65F6\u5019\u5BF9\u8BF7\u6C42\u6570\u636E\u548C\u54CD\u5E94\u6570\u636E\u90FD\u505A\u4E86\u5904\u7406\uFF0C\u5B98\u65B9 <code>axios</code> \u5219\u628A\u8FD9\u4FE9\u90E8\u5206\u903B\u8F91\u4E5F\u505A\u5230\u4E86\u9ED8\u8BA4\u914D\u7F6E\u4E2D\uFF0C\u610F\u5473\u8FD9\u7528\u6237\u53EF\u4EE5\u53BB\u4FEE\u6539\u8FD9\u4FE9\u90E8\u5206\u7684\u903B\u8F91\uFF0C\u5B9E\u73B0\u81EA\u5DF1\u5BF9\u8BF7\u6C42\u548C\u54CD\u5E94\u6570\u636E\u5904\u7406\u7684\u903B\u8F91\u3002\u90A3\u4E48\u4E0B\u4E00\u8282\u6211\u4EEC\u5C31\u6765\u5B9E\u73B0\u8FD9\u4E2A feature\u3002</p>`,70),o=[p];function c(i,l){return s(),a("div",null,o)}var d=n(t,[["render",c],["__file","merge.html.vue"]]);export{d as default};
