import{_ as r,P as n,Q as i,Z as s,$ as e,a1 as l,a0 as o,a2 as a,G as p}from"./framework-7099b8bf.js";const c={},d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"},h=a('<br><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><ul><li>对象保存键值对，并且能够记住键的原始插入顺序。任何值(对象或者原始值) 都可以作为一个键或一个值</li><li><code>for...of</code> 循环在每次迭代后会返回一个形式为[key，value]的数组（迭代时会根据对象中元素的插入顺序来进行）</li></ul><br><h2 id="map-length" tabindex="-1"><a class="header-anchor" href="#map-length" aria-hidden="true">#</a> Map.length</h2><blockquote><p>值为 0</p></blockquote>',6),_={id:"map-prototype-size",tabindex:"-1"},u=e("a",{class:"header-anchor",href:"#map-prototype-size","aria-hidden":"true"},"#",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/size",target:"_blank",rel:"noopener noreferrer"},f=e("blockquote",null,[e("p",null,"一个Map 对象的成员数量")],-1),y=e("br",null,null,-1),M={id:"map-prototype-set",tabindex:"-1"},m=e("a",{class:"header-anchor",href:"#map-prototype-set","aria-hidden":"true"},"#",-1),k={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/set",target:"_blank",rel:"noopener noreferrer"},v=e("ul",null,[e("li",null,"描述：为 Map 对象添加或更新一个指定了键（key）和值（value）的（新）键值对"),e("li",null,[l("语法："),e("code",null,"myMap.set(key, value)")]),e("li",null,[l("参数 "),e("ul",null,[e("li",null,"key：要添加至相应 Map 对象的元素的键"),e("li",null,"Value：要添加至相应 Map 对象的元素的值")])]),e("li",null,"返回值：Map 对象")],-1),g=e("br",null,null,-1),z={id:"map-prototype-get",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#map-prototype-get","aria-hidden":"true"},"#",-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/get",target:"_blank",rel:"noopener noreferrer"},C=e("ul",null,[e("li",null,"描述：返回某个 Map 对象中的一个指定元素"),e("li",null,[l("语法："),e("code",null,"myMap.get(key)")]),e("li",null,[l("参数 "),e("ul",null,[e("li",null,"key：要从目标 Map 对象中获取的元素的键")])]),e("li",null,"返回值：返回一个 Map 对象中与指定键相关联的值，如果找不到这个键则返回 undefined")],-1),G=e("br",null,null,-1),S={id:"map-prototype-has",tabindex:"-1"},j=e("a",{class:"header-anchor",href:"#map-prototype-has","aria-hidden":"true"},"#",-1),J={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/has",target:"_blank",rel:"noopener noreferrer"},O=e("ul",null,[e("li",null,"描述：检测 map 中是否存在指定元素"),e("li",null,[l("语法："),e("code",null,"myMap.has(key)")]),e("li",null,[l("参数 "),e("ul",null,[e("li",null,"key：用来检测是否存在指定元素的键值")])]),e("li",null,"返回值：如果指定元素存在于 Map 中，则返回t rue。其他情况返回 false")],-1),R=e("br",null,null,-1),W={id:"map-prototype-delete",tabindex:"-1"},E=e("a",{class:"header-anchor",href:"#map-prototype-delete","aria-hidden":"true"},"#",-1),V={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/delete",target:"_blank",rel:"noopener noreferrer"},I=a("<ul><li>描述：移除 Map 对象中指定的元素</li><li>语法：<code>myMap.delete(key)</code></li><li>参数 <ul><li>key：从 Map 对象中移除的元素的键</li></ul></li><li>返回值 <ul><li>如果 Map 对象中存在该元素，则移除它并返回 true</li><li>如果该元素不存在则返回 false</li></ul></li></ul><br>",2),q={id:"map-prototype-clear",tabindex:"-1"},B=e("a",{class:"header-anchor",href:"#map-prototype-clear","aria-hidden":"true"},"#",-1),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/clear",target:"_blank",rel:"noopener noreferrer"},L=e("ul",null,[e("li",null,"描述：移除 Map 对象中的所有元素"),e("li",null,[l("语法："),e("code",null,"myMap.clear()")]),e("li",null,"返回值：undefined")],-1),P=e("br",null,null,-1),Q={id:"map-prototype-foreach",tabindex:"-1"},T=e("a",{class:"header-anchor",href:"#map-prototype-foreach","aria-hidden":"true"},"#",-1),Z={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach",target:"_blank",rel:"noopener noreferrer"},$=a("<ul><li>描述：以插入顺序对 Map 对象中的每一个键值对执行一次参数中提供的回调函数</li><li>语法：<code>myMap.forEach(callback[, thisArg])</code></li><li>参数 <ul><li>callback：每个元素所要执行的函数，它可以接收三个参数 <ul><li>value：元素的值</li><li>key：元素的键</li><li>Map：当前正在被遍历的对象</li></ul></li><li>thisArg：callback 执行时其 this 的值</li></ul></li><li>返回值：undefined</li></ul><br>",2),w={id:"map-prototype-entries",tabindex:"-1"},D=e("a",{class:"header-anchor",href:"#map-prototype-entries","aria-hidden":"true"},"#",-1),F={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/entries",target:"_blank",rel:"noopener noreferrer"},H=e("ul",null,[e("li",null,"描述：返回一个新的包含 [key, value] 对的 Iterator 对象，返回的迭代器的迭代顺序与 Map 对象的插入顺序相同"),e("li",null,[l("语法："),e("code",null,"myMap.entries()")]),e("li",null,"返回值：一个新的 Map 迭代器对象")],-1),K=e("br",null,null,-1),U={id:"map-prototype-keys",tabindex:"-1"},X=e("a",{class:"header-anchor",href:"#map-prototype-keys","aria-hidden":"true"},"#",-1),Y={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/keys",target:"_blank",rel:"noopener noreferrer"},ee=e("ul",null,[e("li",null,"描述：返回一个引用的 Iterator 对象。它包含按照顺序插入 Map 对象中每个元素的key值"),e("li",null,[l("语法："),e("code",null,"myMap.keys()")]),e("li",null,"返回值：一个存在引用关系的 Map iterator 对象")],-1),le=e("br",null,null,-1),te={id:"map-prototype-values",tabindex:"-1"},oe=e("a",{class:"header-anchor",href:"#map-prototype-values","aria-hidden":"true"},"#",-1),ae={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map/values",target:"_blank",rel:"noopener noreferrer"},re=e("ul",null,[e("li",null,"描述：回一个新的 Iterator 对象。它包含按顺序插入 Map 对象中每个元素的 value 值"),e("li",null,[l("语法："),e("code",null,"myMap.values()")]),e("li",null,"返回值：一个新的 Map 可迭代对象")],-1);function ne(ie,se){const t=p("ExternalLinkIcon");return n(),i("div",null,[s(" more "),e("p",null,[e("a",d,[l("Map"),o(t)])]),h,e("h2",_,[u,l(),e("a",b,[l("Map.prototype.size"),o(t)])]),f,y,e("h2",M,[m,l(),e("a",k,[l("Map.prototype.set()"),o(t)])]),v,g,e("h2",z,[x,l(),e("a",N,[l("Map.prototype.get()"),o(t)])]),C,G,e("h2",S,[j,l(),e("a",J,[l("Map.prototype.has()"),o(t)])]),O,R,e("h2",W,[E,l(),e("a",V,[l("Map.prototype.delete()"),o(t)])]),I,e("h2",q,[B,l(),e("a",A,[l("Map.prototype.clear()"),o(t)])]),L,P,e("h2",Q,[T,l(),e("a",Z,[l("Map.prototype.forEach()"),o(t)])]),$,e("h2",w,[D,l(),e("a",F,[l("Map.prototype.entries()"),o(t)])]),H,K,e("h2",U,[X,l(),e("a",Y,[l("Map.prototype.keys()"),o(t)])]),ee,le,e("h2",te,[oe,l(),e("a",ae,[l("Map.prototype.values()"),o(t)])]),re])}const ce=r(c,[["render",ne],["__file","13.Map.html.vue"]]);export{ce as default};
