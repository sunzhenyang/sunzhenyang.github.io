const e=JSON.parse(`{"key":"v-7c68513a","path":"/notes/typescript/advance.html","title":"高级类型","lang":"zh-CN","frontmatter":{"title":"高级类型","icon":"article","category":"typescript","article":false,"tag":["typescript"],"description":"交叉类型 交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。 例如，Person & Loggable 同时是 Person 和 Loggable。 就是说这个类型的对象同时拥有了这两种类型的成员。 我们大多是在混入（mixins）或其它不适合典型面向对象模型的地方看到交叉类型的使用...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/typescript/advance.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"高级类型"}],["meta",{"property":"og:description","content":"交叉类型 交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。 例如，Person & Loggable 同时是 Person 和 Loggable。 就是说这个类型的对象同时拥有了这两种类型的成员。 我们大多是在混入（mixins）或其它不适合典型面向对象模型的地方看到交叉类型的使用..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"高级类型\\",\\"description\\":\\"交叉类型 交叉类型是将多个类型合并为一个类型。 这让我们可以把现有的多种类型叠加到一起成为一种类型，它包含了所需的所有类型的特性。 例如，Person & Loggable 同时是 Person 和 Loggable。 就是说这个类型的对象同时拥有了这两种类型的成员。 我们大多是在混入（mixins）或其它不适合典型面向对象模型的地方看到交叉类型的使用...\\"}"]]},"headers":[{"level":2,"title":"交叉类型","slug":"交叉类型","link":"#交叉类型","children":[]},{"level":2,"title":"联合类型","slug":"联合类型","link":"#联合类型","children":[]},{"level":2,"title":"类型保护","slug":"类型保护","link":"#类型保护","children":[{"level":3,"title":"用户自定义的类型保护","slug":"用户自定义的类型保护","link":"#用户自定义的类型保护","children":[]},{"level":3,"title":"typeof 类型保护","slug":"typeof-类型保护","link":"#typeof-类型保护","children":[]},{"level":3,"title":"instanceof 类型保护","slug":"instanceof-类型保护","link":"#instanceof-类型保护","children":[]}]},{"level":2,"title":"可以为 null 的类型","slug":"可以为-null-的类型","link":"#可以为-null-的类型","children":[{"level":3,"title":"可选参数和可选属性","slug":"可选参数和可选属性","link":"#可选参数和可选属性","children":[]},{"level":3,"title":"类型保护和类型断言","slug":"类型保护和类型断言","link":"#类型保护和类型断言","children":[]}]},{"level":2,"title":"字符串字面量类型","slug":"字符串字面量类型","link":"#字符串字面量类型","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":8.87,"words":2662},"filePathRelative":"notes/typescript/advance.md","localizedDate":"2023年1月11日","excerpt":"","autoDesc":true}`);export{e as data};
