const e=JSON.parse(`{"key":"v-7133517a","path":"/notes/typescript/inference.html","title":"类型推断","lang":"zh-CN","frontmatter":{"title":"类型推断","icon":"article","category":["typescript"],"article":false,"tag":["typescript"],"description":"这节介绍 TypeScript 里的类型推断。即，类型是在哪里如何被推断的。 基础 TypeScript 里，在有些没有明确指出类型的地方，类型推断会帮助提供类型。如下面的例子： 变量 x 的类型被推断为数字。 这种推断发生在初始化变量和成员，设置默认参数值和决定函数返回值时。 大多数情况下，类型推断是直截了当地。后面的小节，我们会浏览类型推断时的细微...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/typescript/inference.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"类型推断"}],["meta",{"property":"og:description","content":"这节介绍 TypeScript 里的类型推断。即，类型是在哪里如何被推断的。 基础 TypeScript 里，在有些没有明确指出类型的地方，类型推断会帮助提供类型。如下面的例子： 变量 x 的类型被推断为数字。 这种推断发生在初始化变量和成员，设置默认参数值和决定函数返回值时。 大多数情况下，类型推断是直截了当地。后面的小节，我们会浏览类型推断时的细微..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"类型推断\\",\\"description\\":\\"这节介绍 TypeScript 里的类型推断。即，类型是在哪里如何被推断的。 基础 TypeScript 里，在有些没有明确指出类型的地方，类型推断会帮助提供类型。如下面的例子： 变量 x 的类型被推断为数字。 这种推断发生在初始化变量和成员，设置默认参数值和决定函数返回值时。 大多数情况下，类型推断是直截了当地。后面的小节，我们会浏览类型推断时的细微...\\"}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"最佳通用类型","slug":"最佳通用类型","link":"#最佳通用类型","children":[]},{"level":2,"title":"上下文类型","slug":"上下文类型","link":"#上下文类型","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":2.68,"words":803},"filePathRelative":"notes/typescript/inference.md","localizedDate":"2023年1月11日","excerpt":"","autoDesc":true}`);export{e as data};
