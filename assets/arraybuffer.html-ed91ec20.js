const e=JSON.parse(`{"key":"v-57906d91","path":"/technology/es6/arraybuffer.html","title":"ArrayBuffer","lang":"zh-CN","frontmatter":{"title":"ArrayBuffer","icon":"article","category":"javascript","article":false,"tag":["es6"],"copyright":"Copyright by 阮一峰","description":"ArrayBuffer对象、TypedArray视图和DataView视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格（2011 年 2 月发布），ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。 这个接口的原始设计目的，与 WebGL 项目有关。所谓 WebGL，就是指浏览器与显卡之间的通信接口，为了满足 JavaScript 与显卡之间大量的、实时的数据交换，它们之间的数据通信必须是二进制的，而不能是传统的文本格式。文本格式传递一个 32 位整数，两端的 JavaScript 脚本与显卡都要进行格式转化，将非常耗时。这时要是存在一种机制，可以像 C 语言那样，直接操作字节，将 4 个字节的 32 位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/es6/arraybuffer.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"ArrayBuffer"}],["meta",{"property":"og:description","content":"ArrayBuffer对象、TypedArray视图和DataView视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格（2011 年 2 月发布），ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。 这个接口的原始设计目的，与 WebGL 项目有关。所谓 WebGL，就是指浏览器与显卡之间的通信接口，为了满足 JavaScript 与显卡之间大量的、实时的数据交换，它们之间的数据通信必须是二进制的，而不能是传统的文本格式。文本格式传递一个 32 位整数，两端的 JavaScript 脚本与显卡都要进行格式转化，将非常耗时。这时要是存在一种机制，可以像 C 语言那样，直接操作字节，将 4 个字节的 32 位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"es6"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"ArrayBuffer\\",\\"description\\":\\"ArrayBuffer对象、TypedArray视图和DataView视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格（2011 年 2 月发布），ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。 这个接口的原始设计目的，与 WebGL 项目有关。所谓 WebGL，就是指浏览器与显卡之间的通信接口，为了满足 JavaScript 与显卡之间大量的、实时的数据交换，它们之间的数据通信必须是二进制的，而不能是传统的文本格式。文本格式传递一个 32 位整数，两端的 JavaScript 脚本与显卡都要进行格式转化，将非常耗时。这时要是存在一种机制，可以像 C 语言那样，直接操作字节，将 4 个字节的 32 位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。\\"}"]]},"headers":[{"level":2,"title":"ArrayBuffer 对象","slug":"arraybuffer-对象","link":"#arraybuffer-对象","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"ArrayBuffer.prototype.byteLength","slug":"arraybuffer-prototype-bytelength","link":"#arraybuffer-prototype-bytelength","children":[]},{"level":3,"title":"ArrayBuffer.prototype.slice()","slug":"arraybuffer-prototype-slice","link":"#arraybuffer-prototype-slice","children":[]},{"level":3,"title":"ArrayBuffer.isView()","slug":"arraybuffer-isview","link":"#arraybuffer-isview","children":[]}]},{"level":2,"title":"TypedArray 视图","slug":"typedarray-视图","link":"#typedarray-视图","children":[{"level":3,"title":"概述","slug":"概述-1","link":"#概述-1","children":[]},{"level":3,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[]},{"level":3,"title":"数组方法","slug":"数组方法","link":"#数组方法","children":[]},{"level":3,"title":"字节序","slug":"字节序","link":"#字节序","children":[]},{"level":3,"title":"BYTES_PER_ELEMENT 属性","slug":"bytes-per-element-属性","link":"#bytes-per-element-属性","children":[]},{"level":3,"title":"ArrayBuffer 与字符串的互相转换","slug":"arraybuffer-与字符串的互相转换","link":"#arraybuffer-与字符串的互相转换","children":[]},{"level":3,"title":"溢出","slug":"溢出","link":"#溢出","children":[]},{"level":3,"title":"TypedArray.prototype.buffer","slug":"typedarray-prototype-buffer","link":"#typedarray-prototype-buffer","children":[]},{"level":3,"title":"TypedArray.prototype.byteLength，TypedArray.prototype.byteOffset","slug":"typedarray-prototype-bytelength-typedarray-prototype-byteoffset","link":"#typedarray-prototype-bytelength-typedarray-prototype-byteoffset","children":[]},{"level":3,"title":"TypedArray.prototype.length","slug":"typedarray-prototype-length","link":"#typedarray-prototype-length","children":[]},{"level":3,"title":"TypedArray.prototype.set()","slug":"typedarray-prototype-set","link":"#typedarray-prototype-set","children":[]},{"level":3,"title":"TypedArray.prototype.subarray()","slug":"typedarray-prototype-subarray","link":"#typedarray-prototype-subarray","children":[]},{"level":3,"title":"TypedArray.prototype.slice()","slug":"typedarray-prototype-slice","link":"#typedarray-prototype-slice","children":[]},{"level":3,"title":"TypedArray.of()","slug":"typedarray-of","link":"#typedarray-of","children":[]},{"level":3,"title":"TypedArray.from()","slug":"typedarray-from","link":"#typedarray-from","children":[]}]},{"level":2,"title":"复合视图","slug":"复合视图","link":"#复合视图","children":[]},{"level":2,"title":"DataView 视图","slug":"dataview-视图","link":"#dataview-视图","children":[]},{"level":2,"title":"二进制数组的应用","slug":"二进制数组的应用","link":"#二进制数组的应用","children":[{"level":3,"title":"AJAX","slug":"ajax","link":"#ajax","children":[]},{"level":3,"title":"Canvas","slug":"canvas","link":"#canvas","children":[]},{"level":3,"title":"WebSocket","slug":"websocket","link":"#websocket","children":[]},{"level":3,"title":"Fetch API","slug":"fetch-api","link":"#fetch-api","children":[]},{"level":3,"title":"File API","slug":"file-api","link":"#file-api","children":[]}]},{"level":2,"title":"SharedArrayBuffer","slug":"sharedarraybuffer","link":"#sharedarraybuffer","children":[]},{"level":2,"title":"Atomics 对象","slug":"atomics-对象","link":"#atomics-对象","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":38.57,"words":11572},"filePathRelative":"technology/es6/arraybuffer.md","localizedDate":"2023年1月11日","excerpt":"<p><code>ArrayBuffer</code>对象、<code>TypedArray</code>视图和<code>DataView</code>视图是 JavaScript 操作二进制数据的一个接口。这些对象早就存在，属于独立的规格（2011 年 2 月发布），ES6 将它们纳入了 ECMAScript 规格，并且增加了新的方法。它们都是以数组的语法处理二进制数据，所以统称为二进制数组。</p>\\n<p>这个接口的原始设计目的，与 WebGL 项目有关。所谓 WebGL，就是指浏览器与显卡之间的通信接口，为了满足 JavaScript 与显卡之间大量的、实时的数据交换，它们之间的数据通信必须是二进制的，而不能是传统的文本格式。文本格式传递一个 32 位整数，两端的 JavaScript 脚本与显卡都要进行格式转化，将非常耗时。这时要是存在一种机制，可以像 C 语言那样，直接操作字节，将 4 个字节的 32 位整数，以二进制形式原封不动地送入显卡，脚本的性能就会大幅提升。</p>","autoDesc":true}`);export{e as data};
