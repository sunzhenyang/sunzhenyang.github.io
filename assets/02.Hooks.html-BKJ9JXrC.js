import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,f as n}from"./app-DdwQwFQ1.js";const s={},o=n(`<h2 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate"><span>useState</span></a></h2><blockquote><p>为函数组件引入可记忆的状态</p></blockquote><div class="language-react line-numbers-mode" data-ext="react" data-title="react"><pre class="language-react"><code>import React, { useState } from &#39;react&#39;

const Home: React.FC = props =&gt; {
  const [count, setCount] = useState&lt;number&gt;(0)
  const handleClick = () =&gt; {
    setCount(count + 1)
  }
  return (
    &lt;&gt;
      &lt;h1&gt;Count：{count}&lt;/h1&gt;
      &lt;button onClick={handleClick}&gt;点击加一&lt;/button&gt;
    &lt;/&gt;
  )
}

export default Home
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="useeffect" tabindex="-1"><a class="header-anchor" href="#useeffect"><span>useEffect</span></a></h2><h2 id="useref" tabindex="-1"><a class="header-anchor" href="#useref"><span>useRef</span></a></h2><h2 id="usecontext" tabindex="-1"><a class="header-anchor" href="#usecontext"><span>useContext</span></a></h2><h2 id="usecallback" tabindex="-1"><a class="header-anchor" href="#usecallback"><span>useCallback</span></a></h2><h2 id="usememo" tabindex="-1"><a class="header-anchor" href="#usememo"><span>useMemo</span></a></h2><h2 id="usereducer" tabindex="-1"><a class="header-anchor" href="#usereducer"><span>useReducer</span></a></h2><h2 id="自定义-hook" tabindex="-1"><a class="header-anchor" href="#自定义-hook"><span>自定义 Hook</span></a></h2>`,10),c=[o];function l(r,i){return t(),a("div",null,c)}const h=e(s,[["render",l],["__file","02.Hooks.html.vue"]]),m=JSON.parse(`{"path":"/fe/react/02.Hooks.html","title":"React Hooks","lang":"zh-CN","frontmatter":{"title":"React Hooks","icon":"article","article":false,"date":"2023-02-22T00:00:00.000Z","category":["react"],"tag":["react","hooks"],"description":"useState 为函数组件引入可记忆的状态 useEffect useRef useContext useCallback useMemo useReducer 自定义 Hook","head":[["meta",{"property":"og:url","content":"https://codemake.fun/fe/react/02.Hooks.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"React Hooks"}],["meta",{"property":"og:description","content":"useState 为函数组件引入可记忆的状态 useEffect useRef useContext useCallback useMemo useReducer 自定义 Hook"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T08:31:10.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"hooks"}],["meta",{"property":"article:published_time","content":"2023-02-22T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-17T08:31:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"React Hooks\\",\\"description\\":\\"useState 为函数组件引入可记忆的状态 useEffect useRef useContext useCallback useMemo useReducer 自定义 Hook\\"}"]]},"headers":[{"level":2,"title":"useState","slug":"usestate","link":"#usestate","children":[]},{"level":2,"title":"useEffect","slug":"useeffect","link":"#useeffect","children":[]},{"level":2,"title":"useRef","slug":"useref","link":"#useref","children":[]},{"level":2,"title":"useContext","slug":"usecontext","link":"#usecontext","children":[]},{"level":2,"title":"useCallback","slug":"usecallback","link":"#usecallback","children":[]},{"level":2,"title":"useMemo","slug":"usememo","link":"#usememo","children":[]},{"level":2,"title":"useReducer","slug":"usereducer","link":"#usereducer","children":[]},{"level":2,"title":"自定义 Hook","slug":"自定义-hook","link":"#自定义-hook","children":[]}],"git":{"createdTime":1684312270000,"updatedTime":1684312270000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":0.26,"words":78},"filePathRelative":"fe/react/02.Hooks.md","localizedDate":"2023年2月22日","excerpt":"<h2>useState</h2>\\n<blockquote>\\n<p>为函数组件引入可记忆的状态</p>\\n</blockquote>\\n<div class=\\"language-react\\" data-ext=\\"react\\" data-title=\\"react\\"><pre class=\\"language-react\\"><code>import React, { useState } from 'react'\\n\\nconst Home: React.FC = props =&gt; {\\n  const [count, setCount] = useState&lt;number&gt;(0)\\n  const handleClick = () =&gt; {\\n    setCount(count + 1)\\n  }\\n  return (\\n    &lt;&gt;\\n      &lt;h1&gt;Count：{count}&lt;/h1&gt;\\n      &lt;button onClick={handleClick}&gt;点击加一&lt;/button&gt;\\n    &lt;/&gt;\\n  )\\n}\\n\\nexport default Home\\n</code></pre></div>","autoDesc":true}`);export{h as comp,m as data};
