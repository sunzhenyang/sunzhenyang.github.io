import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as d,c as o,a as s,b as t,d as e,e as r,w as c,f as l}from"./app-BybQgHW9.js";const p={},u=l('<h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h2><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210317115821602.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p>基本数据类型</p><ul><li>数值型 <ul><li>整数类型 <ul><li>byte：字节型</li><li>short：短整型</li><li>int：整型</li><li>long：长整型，以大写的或小写的（L/l）结尾，未加 L 被视为 int</li></ul></li><li>浮点类型 <ul><li>float：单精度浮点型，以大写的或小写的（F/f）结尾</li><li>double：双精度浮点型，浮点型字面值默认为 double 类型</li></ul></li></ul></li><li>字符型(char)</li><li>布尔型(boolean)</li></ul></li><li><p>引用数据类型</p><ul><li><p>字符串(String)</p></li><li><p>类(class)</p></li><li><p>接口(interface)</p></li><li><p>数组</p></li></ul></li></ul><h2 id="空间占用" tabindex="-1"><a class="header-anchor" href="#空间占用"><span>空间占用</span></a></h2><table><thead><tr><th>数据类型</th><th>说明</th><th>字节</th><th>位</th><th>最小范围</th><th>最大范围</th></tr></thead><tbody><tr><td>byte</td><td>字节型</td><td>1</td><td>8</td><td>-2^7</td><td>2^7-1</td></tr><tr><td>short</td><td>短整型</td><td>2</td><td>16</td><td>-2^15</td><td>2^15-1</td></tr><tr><td>int</td><td>整型</td><td>4</td><td>32</td><td>-2^31</td><td>2^31-1</td></tr><tr><td>long</td><td>长整型</td><td>8</td><td>64</td><td>-2^63</td><td>2^63-1</td></tr><tr><td>float</td><td>单精度浮点型</td><td>4</td><td>32</td><td>-3.40E+38</td><td>3.40E+38</td></tr><tr><td>double</td><td>双精度浮点型位有效数字）</td><td>8</td><td>64</td><td>-1.79E+308</td><td>1.79E+308</td></tr><tr><td>char</td><td>字符型</td><td>2</td><td>16</td><td>0</td><td>65535</td></tr><tr><td>boolean</td><td>布尔型</td><td>1</td><td>8</td><td></td><td></td></tr></tbody></table><h2 id="字面值" tabindex="-1"><a class="header-anchor" href="#字面值"><span>字面值</span></a></h2>',6),h=l("<li>整型字面值 <ul><li>二进制(BIN)</li><li>十进制(DEC)</li><li>八进制(OCT)：以 0 开头，包括 0-7 的数字(例：037、056)</li><li>十六进制(HEX)：以 0x 或 0X 开头，包括 0-9 的数字，及字母 a-f(例：0x12、0xabcf) <ul><li>也可以是 A-F，a 表示数字 10，以此类推</li><li>后面加 <code>L</code> 表示长整型数据</li></ul></li></ul></li><li>浮点型字面值 <ul><li>float 类型需要在字面值后加 <code>f</code> 或 <code>F</code></li><li>默认情况下表示 double 类型，也可在字面值后加 <code>d</code> 或 <code>D</code></li></ul></li>",2),g=t("li",null,"用单引号内的单个字符表示('a'、'b'、'c'、'$')",-1),m=t("ul",null,[t("li",null,"如果字面值超出 char 类型所表示的数值范围，需要进行强制类型转换")],-1),b=t("li",null,[e("布尔型字面值 "),t("ul",null,[t("li",null,"true"),t("li",null,"false")])],-1),f=t("li",null,[e("字符串字面值 "),t("ul",null,[t("li",null,"双引号引起来的 0 个或多个字符")])],-1),v=l(`<h2 id="基本数据类型变量的存储" tabindex="-1"><a class="header-anchor" href="#基本数据类型变量的存储"><span>基本数据类型变量的存储</span></a></h2><ul><li>按作用范围分类 <ul><li>类级</li><li>对象实例级</li><li>方法级(局部变量) <ul><li>存储在 <strong>栈</strong> 中</li></ul></li><li>块级</li></ul></li></ul><h2 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h2><h3 id="自动-隐式-类型转换" tabindex="-1"><a class="header-anchor" href="#自动-隐式-类型转换"><span>自动(隐式)类型转换</span></a></h3><blockquote><p>下图箭头相反方向均需要强制类型转换</p></blockquote><ul><li><code>byte</code>、<code>short</code>、<code>char</code> 三种类型变量之间随意组合做运算，结果均为 <code>int</code> 类型</li></ul><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20201215161030045.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="强制类型转换" tabindex="-1"><a class="header-anchor" href="#强制类型转换"><span>强制类型转换</span></a></h3><blockquote><p>如果 A 类型的数据表示范围比 B 类型大，则将 A 类型的值赋值给 B 类型，需要强制类型转换</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 转换格式</span>
<span class="token keyword">long</span> num1 <span class="token operator">=</span> <span class="token number">10L</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> num2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> num1<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10);function _(y,k){const a=i("RouteLink");return d(),o("div",null,[s(" more "),u,t("ul",null,[h,t("li",null,[e("字符型字面值 "),t("ul",null,[g,t("li",null,[e("值可以是 "),r(a,{to:"/notes/other/encode.html#ascll-%E7%A0%81"},{default:c(()=>[e("ASCLL码")]),_:1}),e(" 的编号 "),m])])]),b,f]),v])}const B=n(p,[["render",_],["__file","02.数据类型.html.vue"]]),j=JSON.parse(`{"path":"/notes/java/Java%E5%9F%BA%E7%A1%80/02.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html","title":"数据类型","lang":"zh-CN","frontmatter":{"title":"数据类型","icon":"java","article":true,"breadcrumb":false,"date":"2023-02-23T00:00:00.000Z","order":2,"category":["Java"],"tag":["Java基础","数据类型"],"description":"分类 基本数据类型 数值型 整数类型 byte：字节型 short：短整型 int：整型 long：长整型，以大写的或小写的（L/l）结尾，未加 L 被视为 int 浮点类型 float：单精度浮点型，以大写的或小写的（F/f）结尾 double：双精度浮点型，浮点型字面值默认为 double 类型 字符型(char) 布尔型(boolean) 引用数...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/java/Java%E5%9F%BA%E7%A1%80/02.%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"数据类型"}],["meta",{"property":"og:description","content":"分类 基本数据类型 数值型 整数类型 byte：字节型 short：短整型 int：整型 long：长整型，以大写的或小写的（L/l）结尾，未加 L 被视为 int 浮点类型 float：单精度浮点型，以大写的或小写的（F/f）结尾 double：双精度浮点型，浮点型字面值默认为 double 类型 字符型(char) 布尔型(boolean) 引用数..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210317115821602.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-01T04:40:50.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:tag","content":"数据类型"}],["meta",{"property":"article:published_time","content":"2023-02-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-01T04:40:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型\\",\\"image\\":[\\"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210317115821602.png\\",\\"https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20201215161030045.png\\"],\\"datePublished\\":\\"2023-02-23T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-01T04:40:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yang\\",\\"url\\":\\"https://codemake.fun/\\",\\"email\\":\\"874530670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"分类","slug":"分类","link":"#分类","children":[]},{"level":2,"title":"空间占用","slug":"空间占用","link":"#空间占用","children":[]},{"level":2,"title":"字面值","slug":"字面值","link":"#字面值","children":[]},{"level":2,"title":"基本数据类型变量的存储","slug":"基本数据类型变量的存储","link":"#基本数据类型变量的存储","children":[]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"自动(隐式)类型转换","slug":"自动-隐式-类型转换","link":"#自动-隐式-类型转换","children":[]},{"level":3,"title":"强制类型转换","slug":"强制类型转换","link":"#强制类型转换","children":[]}]}],"git":{"createdTime":1680324050000,"updatedTime":1680324050000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":2.09,"words":626},"filePathRelative":"notes/java/Java基础/02.数据类型.md","localizedDate":"2023年2月23日","excerpt":"","autoDesc":true}`);export{B as comp,j as data};
