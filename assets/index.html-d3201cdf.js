import{_ as o,Q as c,S as p,$ as i,a0 as n,a1 as s,a2 as e,a3 as t,C as l}from"./framework-3ab2aaf6.js";const u={},d=t(`<h2 id="弹窗" tabindex="-1"><a class="header-anchor" href="#弹窗" aria-hidden="true">#</a> 弹窗</h2><ul><li>弹窗是一个独立的窗口，具有自己的独立 JavaScript 环境。因此，使用弹窗打开一个不信任的第三方网站是安全的</li><li>弹窗可以导航（修改 URL），并将消息发送到 opener 窗口</li><li>如果弹窗是在用户触发的事件处理程序（如 <code>onclick</code>）之外调用的，大多数浏览器都会阻止此类弹窗</li></ul><h3 id="打开新的弹窗" tabindex="-1"><a class="header-anchor" href="#打开新的弹窗" aria-hidden="true">#</a> 打开新的弹窗</h3><blockquote><p>语法：<code>window.open(url, name, param)</code></p><p>默认情况下，浏览器会打开一个新标签页，但如果提供了窗口大小，那么浏览器将打开一个弹窗</p></blockquote><ul><li><p><code>url</code>：要在新窗口加载的 URL</p></li><li><p><code>name</code>：新窗口的名称，每个窗口都有一个 <code>window.name</code>，可以指定哪个窗口用于弹窗，如果已经有一个这样名字的窗口，将在该窗口打开给定的 URL，否则会打开一个新窗口</p></li><li><p><code>param</code>：新窗口的配置字符串，它包括设置，用逗号分隔，参数之间不能有空格，例如：<code>width=200,height=100</code>（多屏环境下，某些参数会失效）</p><ul><li>位置 <ul><li><code>left/top</code>（数字）：屏幕上窗口的左上角的坐标。这有一个限制：不能将新窗口置于屏幕外</li><li><code>width/height</code>（数字）：新窗口的宽度和高度。宽度/高度的最小值是有限制的，因此不可能创建一个不可见的窗口</li></ul></li><li>窗口功能（参数值均为 <code>yes/no</code>） <ul><li><code>menubar</code>：显示或隐藏新窗口的浏览器菜单</li><li><code>toolbar</code>：显示或隐藏新窗口的浏览器导航栏（后退，前进，重新加载等）</li><li><code>location</code>：显示或隐藏新窗口的 URL 字段。Firefox 和 IE 浏览器不允许默认隐藏它</li><li><code>status</code>：显示或隐藏状态栏。同样，大多数浏览器都强制显示它</li><li><code>resizable</code>：允许禁用新窗口大小调整。不建议使用</li><li><code>scrollbars</code>：允许禁用新窗口的滚动条。不建议使用</li></ul></li></ul></li></ul><blockquote><p>参数规则</p></blockquote><ul><li>如果 <code>open</code> 调用中没有第三个参数，或者它是空的，则使用默认的窗口参数</li><li>如果这里有一个参数字符串，但是某些 <code>yes/no</code> 功能被省略了，那么被省略的功能则被默认值为 <code>no</code>。因此，如果你指定参数，请确保将所有必需的功能明确设置为 <code>yes</code></li><li>如果参数中没有 <code>left/top</code>，那么浏览器会尝试在最后打开的窗口附近打开一个新窗口</li><li>如果没有 <code>width/height</code>，那么新窗口的大小将与上次打开的窗口大小相同</li></ul><h3 id="操作新窗口" tabindex="-1"><a class="header-anchor" href="#操作新窗口" aria-hidden="true">#</a> 操作新窗口</h3><blockquote><p>如果主窗口和弹窗同源，那么它们可以彼此自由地读取和修改。否则，它们可以更改彼此的地址（location），交换消息</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> newWin <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost/test.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 重写新窗口内容</span>
newWin<span class="token punctuation">.</span>document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, world!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 获取新窗口内容</span>
newWin<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newWin<span class="token punctuation">.</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="从弹窗访问窗口" tabindex="-1"><a class="header-anchor" href="#从弹窗访问窗口" aria-hidden="true">#</a> 从弹窗访问窗口</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 弹窗窗口通过 window.opener 获取父窗口对象</span>
window<span class="token punctuation">.</span>opener<span class="token punctuation">.</span>document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;&lt;h1&gt;新页面修改&lt;/h1&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="关闭窗口" tabindex="-1"><a class="header-anchor" href="#关闭窗口" aria-hidden="true">#</a> 关闭窗口</h3><ul><li><code>window.closed</code>：检查窗口是否被关闭</li><li><code>window.close()</code>：关闭窗口 <ul><li>适用于任何 <code>window</code>，如果 <code>window</code> 不是通过 <code>window.open()</code> 创建的，那么大多数浏览器都会忽略 <code>window.close()</code>。因此，<code>close()</code> 只对弹窗起作用</li></ul></li></ul><h3 id="调整窗口" tabindex="-1"><a class="header-anchor" href="#调整窗口" aria-hidden="true">#</a> 调整窗口</h3><blockquote><p>为了防止滥用，浏览器通常会阻止这些方法。它们仅在我们打开的，没有其他选项卡的弹窗中能够可靠地工作</p><p>JavaScript 无法最小化或者最大化一个窗口。这些操作系统级别的功能对于前端开发者而言是隐藏的</p><p>移动或者调整大小的方法不适用于最小化/最大化的窗口</p></blockquote><ul><li><code>win.moveBy(x,y)</code>：将窗口相对于当前位置向右移动 <code>x</code> 像素，并向下移动 <code>y</code> 像素。允许负值（向上/向左移动）</li><li><code>win.moveTo(x,y)</code>：将窗口移动到屏幕上的坐标 <code>(x,y)</code> 处</li><li><code>win.resizeBy(width,height)</code>：根据给定的相对于当前大小的 <code>width/height</code> 调整窗口大小。允许负值</li><li><code>win.resizeTo(width,height)</code>：将窗口调整为给定的大小</li></ul><h2 id="跨窗口通信" tabindex="-1"><a class="header-anchor" href="#跨窗口通信" aria-hidden="true">#</a> 跨窗口通信</h2><h3 id="同源" tabindex="-1"><a class="header-anchor" href="#同源" aria-hidden="true">#</a> 同源</h3><blockquote><p>如果两个 URL 具有相同的协议，域和端口，则称它们是“同源”的</p></blockquote><ul><li><p>如果有对另外一个窗口（例如：一个使用 <code>window.open</code> 创建的弹窗，或者一个窗口中的 <code>iframe</code>）的引用，并且该窗口是同源的，则具有对该窗口的全部访问权限</p></li><li><p>否则，如果该窗口不是同源的，则无法访问该窗口中的内容：变量，文档，任何东西。</p><ul><li>唯一的例外是 <code>location</code>：可以修改它（进而重定向用户）。但是无法读取 <code>location</code>（因此，无法看到用户当前所处的位置，也就不会泄漏任何信息）</li></ul></li></ul><h3 id="iframe" tabindex="-1"><a class="header-anchor" href="#iframe" aria-hidden="true">#</a> iframe</h3>`,22),r=n("p",null,[s("承载了一个单独的嵌入的窗口，它具有自己的 "),n("code",null,"document"),s(" 和 "),n("code",null,"window")],-1),k=n("p",null,[s("当访问嵌入的窗口中的东西时，浏览器会检查 "),n("code",null,"iframe"),s(" 是否具有相同的源。如果不是，则会拒绝访问（对 "),n("code",null,"location"),s(" 进行写入是一个例外，它是会被允许的）")],-1),m={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/iframe",target:"_blank",rel:"noopener noreferrer"},v={href:"https://zh.javascript.info/clickjacking",target:"_blank",rel:"noopener noreferrer"},h=t(`<ul><li><code>iframe.contentWindow </code>：获取 <code>&lt;iframe&gt;</code> 中的 <code>window</code></li><li><code>iframe.contentDocument</code>：获取 <code>&lt;iframe&gt;</code> 中的 <code>document</code>，是 <code>iframe.contentWindow.document</code> 的简写形式</li><li>一个 iframe 内可能嵌套了其他的 iframe。相应的 <code>window</code> 对象会形成一个层次结构 <ul><li><code>window.frames</code>：“子”窗口的集合（用于嵌套的 iframe）</li><li><code>window.parent</code>：对“父”（外部）窗口的引用</li><li><code>window.top</code>：对最顶级父窗口的引用</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://localhost/test.html<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>iframe<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  iframe<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 获取对内部 window 的引用</span>
    <span class="token keyword">let</span> iframeWindow <span class="token operator">=</span> iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">;</span> <span class="token comment">// OK</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// 无法获取其中的文档</span>
      <span class="token keyword">let</span> doc <span class="token operator">=</span> iframe<span class="token punctuation">.</span>contentDocument<span class="token punctuation">;</span> <span class="token comment">// ERROR</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Security Error（另一个源）</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 并且无法读取 iframe 中页面的 URL</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token comment">// 无法从 location 对象中读取 URL</span>
      <span class="token keyword">let</span> href <span class="token operator">=</span> iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span> <span class="token comment">// ERROR</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">alert</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Security Error</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 可以写入 location（所以，在 iframe 中加载了其他内容）！</span>
    iframe<span class="token punctuation">.</span>contentWindow<span class="token punctuation">.</span>location <span class="token operator">=</span> <span class="token string">&#39;/&#39;</span><span class="token punctuation">;</span> <span class="token comment">// OK</span>

    iframe<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 清空处理程序，在 location 更改后不要再运行它</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二级域名下的通信" tabindex="-1"><a class="header-anchor" href="#二级域名下的通信" aria-hidden="true">#</a> 二级域名下的通信</h3><blockquote><p>需要再每个窗口中添加如下代码，使浏览器忽略该差异，使得它们可以被作为“同源”的来对待，以便进行跨窗口通信</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 已弃用，但仍有效</span>
document<span class="token punctuation">.</span>domain <span class="token operator">=</span> <span class="token string">&#39;http://localhost&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="postmessage" tabindex="-1"><a class="header-anchor" href="#postmessage" aria-hidden="true">#</a> postMessage</h3>`,6),b=n("p",null,"允许窗口之间相互通信，无论它们来自什么源，是解决“同源”策略的方式之一",-1),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/postMessage",target:"_blank",rel:"noopener noreferrer"},f=t(`<ul><li>发送方语法：<code>otherWin.postMessage(data, targetOrigin)</code>（ <ul><li><code>otherWin</code>：接收方 window</li><li><code>data</code>：要发送的数据。可以是任何对象，IE 浏览器只支持字符串，因此需要对复杂的对象调用 <code>JSON.stringify</code> 方法进行处理，以支持该浏览器</li><li><code>targetOrigin</code>：接收方的源，以便只有来自给定的源的窗口才能获得该消息 <ul><li>如果不做这个检查，可以将 <code>targetOrigin</code> 设置为 <code>*</code></li></ul></li></ul></li><li>接收方使用 <code>onmessage</code> 事件接收，参数 <code>event</code> 相关参数如下 <ul><li><code>event.data</code>：传递过来的数据</li><li><code>event.prigin</code>：发送方的源</li><li><code>event.source</code>：对发送方窗口的引用（发送方 window）</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- index.html 发送方 http://127.0.0.1:56082 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	newWin <span class="token operator">=</span> <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;http://127.0.0.1:64361&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newWin<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;http://127.0.0.1:64361&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- test.html 接收方 http://127.0.0.1:64361 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;message&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>data<span class="token punctuation">)</span>
    <span class="token comment">// 可以使用 event.source.postMessage(...) 向回发送消息</span>
    <span class="token comment">// event.origin http://127.0.0.1:56082/</span>
    event<span class="token punctuation">.</span>source<span class="token punctuation">.</span><span class="token function">postMessage</span><span class="token punctuation">(</span><span class="token string">&#39;反向发送信息&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>origin<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function w(_,y){const a=l("ExternalLinkIcon");return c(),p("div",null,[i(" more "),d,n("blockquote",null,[r,k,n("p",null,[n("a",m,[s("【MDN文档】"),e(a)]),s(),n("a",v,[s("【点击劫持攻击】"),e(a)])])]),h,n("blockquote",null,[b,n("p",null,[n("a",g,[s("【MDN文档】"),e(a)])])]),f])}const q=o(u,[["render",w],["__file","index.html.vue"]]);export{q as default};
