import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as n,c as s,a as t,b as e,d as l,e as d,f as a}from"./app-d18dfe82.js";const r={},u=a('<h2 id="相关概念" tabindex="-1"><a class="header-anchor" href="#相关概念" aria-hidden="true">#</a> 相关概念</h2><h3 id="操作系统" tabindex="-1"><a class="header-anchor" href="#操作系统" aria-hidden="true">#</a> 操作系统</h3><blockquote><p>是应用程序运行的基础支撑环境</p></blockquote><ul><li>作用：管理和控制计算机系统的硬件与软件资源</li></ul><h3 id="tty" tabindex="-1"><a class="header-anchor" href="#tty" aria-hidden="true">#</a> TTY</h3><blockquote><p>计算机的终端(terminal)设备</p></blockquote><h3 id="文件" tabindex="-1"><a class="header-anchor" href="#文件" aria-hidden="true">#</a> 文件</h3><blockquote><p>Linux 中一切都是文件</p></blockquote><h4 id="目录" tabindex="-1"><a class="header-anchor" href="#目录" aria-hidden="true">#</a> 目录</h4>',9),p={href:"https://linuxtoy.org/archives/linux-file-structure.html",target:"_blank",rel:"noopener noreferrer"},h=e("li",null,[e("p",null,[l("有且只有一个根目录，就是 "),e("code",null,"/")])],-1),m=e("li",null,[e("p",null,[l("用 "),e("code",null,"/"),l(" 表示目录层级关系，例如："),e("code",null,"/usr/bin")])],-1),v=e("li",null,[e("p",null,"一般在 Linux 下命名目录时尽量不要使用空格或其他特殊符号，尽量使用小写字母，会省去很多不必要的麻烦")],-1),b=a(`<h4 id="直属子目录" tabindex="-1"><a class="header-anchor" href="#直属子目录" aria-hidden="true">#</a> 直属子目录</h4><ul><li><code>bin</code>：常用二进制命令存放目录 <ul><li>包含会被所有用户使用的可执行文件</li><li><strong>普通用户</strong> 和 <strong>root</strong> 用户均可使用命令</li></ul></li><li><code>sbin</code>：系统管理命令存放目录 <ul><li>包含系统级的重要可执行程序</li><li><strong>root</strong> 用户可用命令</li></ul></li><li><code>boot</code>：启动目录，Linux 内核与系统引导程序目录</li><li><code>dev</code>：设备文件存放目录，里面的每个子目录对应一个外设（光盘驱动器文件）</li><li><code>etc</code>：系统配置文件存放目录</li><li><code>root</code>：超级用户 root 的家目录</li><li><code>home</code>：普通用户家目录，用户私人目录 <ul><li>每个用户都在 home 目录下有一个私人目录，除 root，root 用户拥有所有权限，和普通用户不在一起</li></ul></li><li><code>lib</code>：函数库存放目录，启动系统与运行命令所需的共享库文件与内核模块目录 <ul><li>包含被程序所调用的库文件，例如 <code>.so</code> 结尾的文件</li><li>windows 中这样的库文件是以 <code>.dll</code> 结尾的</li></ul></li><li><code>media</code>：媒体设备挂载目录 <ul><li>当可移动的外设(USB 盘、SD 卡、DVD、光盘等等)插入时，可以通过 media 子目录来访问这些外设中的内容</li></ul></li><li><code>mnt</code>：系统挂载目录 <ul><li>类似 media 目录，但一般用于临时挂载一些装置</li></ul></li><li><code>opt</code>：第三方软件存放目录 <ul><li>表示可选的应用软件包，用于安装多数第三方软件和插件</li></ul></li><li><code>srv</code>：服务存放数据目录 <ul><li>包含一些网络服务启动之后所需要取用的数据</li></ul></li><li><code>tmp</code>：临时目录，普通用户和程序存放临时文件的地方</li><li><code>usr</code>：存放用户应用程序的目录 <ul><li><code>/usr/local</code>：编译方式安装程序的默认目录</li><li><code>/usr/src</code>：程序源码目录</li></ul></li><li><code>var</code>：系统相关文档内容目录 <ul><li>通常包含程序的数据，比如 log(日志)文件</li></ul></li><li><code>proc</code>：系统运行时，进程信息与内核信息存放</li><li><code>lib64</code>：</li><li><code>run</code>：</li><li><code>sys</code>：</li></ul><h4 id="路径格式" tabindex="-1"><a class="header-anchor" href="#路径格式" aria-hidden="true">#</a> 路径格式</h4><ul><li>绝对路径 <ul><li>从根目录 <code>/</code> 开始写起</li></ul></li><li>相对路径 <ul><li>当前目录 <code>.</code></li><li>上级目录 <code>..</code></li><li>家目录 <code>~</code></li></ul></li></ul><h3 id="命令提示符" tabindex="-1"><a class="header-anchor" href="#命令提示符" aria-hidden="true">#</a> 命令提示符</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>sunzhenyang@localhost ~<span class="token punctuation">]</span>$
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><code>sunzhenyang</code>：当前用户的名字(Linux 是多用户才做系统)</p><ul><li>修改位置：<code>setting -&gt; Details -&gt; User</code></li></ul></li><li><p><code>@</code>：前面是用户名，后面是所在的域，例如：874530670@qq.com</p></li><li><p><code>localhost</code>：电脑/主机的名字，也就是主机名(hostname)</p><ul><li>修改位置：<code>setting -&gt; Details -&gt; About</code></li></ul></li><li><p><code>~</code>：当前所在目录的名字，会随着用户进入不同目录而改变</p><ul><li>表示当前用户的家目录(home directory)</li></ul></li><li><p><code>$</code>：指示所具有的权限，表示普通用户，有权限的限制</p></li><li><p><code>#</code>：表示超级用户，也就是 root，拥有所有权限</p></li></ul><h3 id="命令参数" tabindex="-1"><a class="header-anchor" href="#命令参数" aria-hidden="true">#</a> 命令参数</h3><ul><li>参数是写在命令之后的一些补充选项，命令和参数之间有空格隔开</li><li>格式：<code>command parameters</code></li><li>参数没有固定格式，可以包含数字、字母等等，但一般遵循一定的规范</li><li>短参数 <ul><li>最常用的参数形式是一个短横线后接一个字母：<code>command -p</code></li><li>一次可以加多个短参数，用空格隔开：<code>command -p -a -T -c</code></li><li>多个短参数可以合并：<code>command -paTc</code></li><li>短参数字母是区分大小写的，表示不同含义</li></ul></li><li>长参数 <ul><li>以两个短横线开始</li><li>格式：<code>command --parameters</code></li><li>多个长参数不能合并，只能以空格隔开 <ul><li><code>command --paramters1 --paramters2</code></li></ul></li></ul></li><li>可以组合使用短参数和长参数</li><li>同一个意义的参数有短参数和长参数两种形式 <ul><li>例如：<code>ls -a</code> 和 <code>ls --all</code></li></ul></li><li>参数的值 <ul><li>有一些参数需要赋值，短参数和长参数赋值方式不同</li><li>短参数赋值：<code>command -p 10</code></li><li>长参数赋值：<code>command --paramters=10</code></li></ul></li></ul><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3><ul><li><p>Linux 或 unix 的许多程序启动时，都需要 <code>rc</code> 后缀的初始文件或配置文件</p></li><li><p>Linux 中配置文件大多以 点(<code>.</code>)开头表示隐藏，而且大多以 rc 结尾</p></li><li><p>一般配置在用户家目录下</p></li></ul><h2 id="快捷键" tabindex="-1"><a class="header-anchor" href="#快捷键" aria-hidden="true">#</a> 快捷键</h2><ul><li><p><code>Ctrl + Alt + F1</code>：回到图形界面</p></li><li><p><code>Ctrl + Alt + F2</code>：terminal 1(:0 大致等于 tty1)</p></li><li><p><code>Ctrl + Alt + F3</code>：terminal 2(tty2)</p></li><li><p><code>Ctrl + Alt + F4</code>：terminal 3(tty3)</p></li><li><p><code>Ctrl + Alt + F5</code>：terminal 4(tty4)</p></li><li><p><code>Ctrl + Alt + F6</code>：terminal 5(tty5)</p></li><li><p><code>Ctrl + C</code>：可以终止大部分终端的命令和正在执行的程序，有点类似 windows 中的 <code>Alt + F4</code></p></li><li><p><code>Ctrl + L</code>：清空命令行(同 <code>clear</code> 命令)</p></li><li><p><code>Ctrl + D</code>：给终端传递 EOF ( End Of File, 文件结束符 )</p></li><li><p><code>Shift + PgUp</code>：用于向上滚屏，与鼠标滚轮向上滚屏一个效果</p></li><li><p><code>Shift + PgDown</code>：用于向下滚屏，与鼠标滚轮向下滚屏一个效果</p></li><li><p><code>Ctrl + A</code>：光标跳到一行命令的开头，同键盘上的 Home 键</p></li><li><p><code>Ctrl + E</code>：光标跳到一行命令的结尾，同键盘上的 End 键</p></li><li><p><code>Ctrl + U</code>：删除光标左侧命令字符</p></li><li><p><code>Ctrl + K</code>：删除光标右侧命令字符</p></li><li><p><code>Ctrl + W</code>：删除光标左侧单词(单词指用空格隔开的一个字符串，例如：<code>-a</code>)</p></li><li><p><code>Ctrl + Y</code>：粘贴 <code>Ctrl + U</code>、<code>Ctrl + K</code>、<code>Ctrl + W</code> 删除的字符串</p></li></ul><h2 id="命令" tabindex="-1"><a class="header-anchor" href="#命令" aria-hidden="true">#</a> 命令</h2><blockquote><p>Tab 键补全命令</p><p>按两次 Tab 键补全文件名、路径名（结果过多时：空格键跳转到下一页，回车键跳转到下一行，Q 键退出列表）</p><p>方向键上下用于显示上一条或下一条命令</p><p><code>Ctrl + R</code>：查找使用过的命令</p><p><code>history</code>：列出之前使用过的所有命令，可以用 <code>!编号</code>的格式重新运行 history 输出中对应的命令</p></blockquote><h3 id="系统相关" tabindex="-1"><a class="header-anchor" href="#系统相关" aria-hidden="true">#</a> 系统相关</h3><ul><li><code>uname</code>：查看当前系统</li><li><code>uname -a</code>：查看当前系统的详细描述</li><li><code>hostname</code>：获取当前主机名</li><li><code>命令 --help</code>：查看某个命令的帮助信息</li><li><code>ip addr</code>：查看 ip 地址 <ul><li>可以简写为 <code>ip -a</code></li></ul></li><li><code>data</code>：显示当前时间 3 <ul><li>CST：Central Standard Time 的缩写，表示中央标准时间(时区)</li></ul></li><li><code>clear</code>：清屏</li><li><code>shutdown</code> [选项][时间 hh:mm / mm] [消息]并有如下选项： <ul><li>k 不执行任何关机操作，只发出警告信息给所有用户</li><li>r 重新启动计算机（或 <code>reboot</code>）</li><li>h 关机并彻底断电</li><li>f 快速关机且重启动时跳过 fsck</li><li>n 快速关机不经过 init 程序</li><li>c 取消之前的定时关机</li></ul></li></ul><h3 id="系统管理" tabindex="-1"><a class="header-anchor" href="#系统管理" aria-hidden="true">#</a> 系统管理</h3><ul><li><p><code>ifconfig</code>：获取 IP 地址</p></li><li><p><code>netstat -tulpn</code> 或 <code>netstat -ano</code>：查看网络端口号</p><ul><li>命令参数 <ul><li><code>t</code>：显示 TCP 传输协议连接状况</li><li><code>u</code>：显示 UDP 传输协议连接状况</li><li><code>l</code>：显示处于监听状态的网络连接</li><li><code>p</code>：显示应用的 PID 和 程序名称</li><li><code>n</code>：显示 IP 地址</li><li><code>a</code>：显示所有连接</li><li><code>o</code>：显示计时器</li></ul></li><li>结果参数 <ul><li><code>Proto</code>：网络协议</li><li><code>Recv-Q</code>：接收队列，等待处理的数据包的数量</li><li><code>Send-Q</code>：发送队列，等待处理的数据包的数量</li><li><code>Local Address</code>：本地地址</li><li><code>Foreign Address</code>：远程地址</li><li><code>State</code>：网络连接状态 <ul><li>·<code>LISTEN</code>：表示此连接正在被监听</li></ul></li><li><code>PID/Program name</code>：应用进程编号/应用名称</li></ul></li></ul></li><li><p><code>ps -ef</code>：查看进程</p><ul><li><code>ps -ef | grep vim</code></li></ul></li><li><p><code>kill -9 PID</code>：杀掉 PID 进程</p></li><li><p><code>kill -s QUIT PID</code>：采用正常方式关闭进程</p></li></ul><h3 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理" aria-hidden="true">#</a> 用户管理</h3><ul><li><code>sudo su</code>：切换为 root 用户</li><li><code>visudo</code>：对某些用户进行授权</li><li><code>visudo -c</code>：对文件进行格式化检查</li><li><code>Ctrl + D</code> 或 <code>exit</code>：退出 root 用户</li><li><code>who</code>：查看当前已登录的用户信息</li><li><code>whoami</code>：获取当前用户名字</li><li><code>useradd [-g 群组] 用户名</code>：创建用户并分配群组</li><li><code>passwd 用户名</code>：设置密码</li><li><code>userdel [-r] 用户名</code>：删除用户</li></ul><h3 id="文件管理" tabindex="-1"><a class="header-anchor" href="#文件管理" aria-hidden="true">#</a> 文件管理</h3><h4 id="查看" tabindex="-1"><a class="header-anchor" href="#查看" aria-hidden="true">#</a> 查看</h4><ul><li><code>echo</code><ul><li><code>echo &quot;文本&quot;</code>：在终端输出指定字符，字符用双引号包裹</li><li><code>echo &quot;hello&quot; &gt; hello.txt</code>：<code>&gt;</code> 表示将左侧位置产生的结果重写至右侧文件</li><li><code>echo &quot;hello&quot; &gt;&gt; hello.txt</code>：<code>&gt;&gt;</code> 表示将左侧位置产生的结果追加至右侧文件</li></ul></li><li><code>cat 文件路径 文件路径</code>：一次性在终端显示文件的所有内容 <ul><li>可以连接多个文件，会把多个文件内容合并显示</li><li><code>-n</code>：显示行号</li><li><code>-E</code>：显示空行</li><li><code>cat a.txt b.txt &gt;&gt; c.txt</code>：将多个文件内容合并输出到一个文件</li><li><code>cat &gt; test.txt &lt;&lt; EOF</code>：创建输入流并将输入文本重写入到指定文件 <ul><li><code>&lt;&lt;</code>：创建输入留</li><li><code>EOF</code>：指定的结束字符（可以是其他文本）</li><li>将 <code>&gt;</code> 改为 <code>&gt;&gt;</code> 即可把重写文本操作改为追加文本操作</li></ul></li></ul></li><li><code>head + 文件路径</code>：显示文件的开头几行 <ul><li><code>-n + 行数</code>：指定显示行数</li></ul></li><li><code>tail + 文件路径</code>：显示文件的结尾几行(默认显示 10 行) <ul><li><code>-n + 行数</code>：指定显示行数</li><li><code>-f</code>：实时追踪文件的更新 <ul><li>默认每隔 1s 检查一下文件是否有新内容</li></ul></li><li><code>-s + 秒数</code>：指定间隔检查的描述</li></ul></li><li><code>grep 要查找的文本 文件路径</code>：将<strong>包含</strong>文本的文本行进行提取 <ul><li><code>-v</code>：将<strong>不包含</strong>文本的文本行进行提取</li><li>要查找的文本可以是正则表达式</li><li><code>|</code>：通道，将前面命令的输出结果作为后面命令的依据 <ul><li><code>ll | grep bin</code></li></ul></li><li><code>-E</code>：使用扩展的正则表达式对结果进行筛选</li><li><code>ll | grep bin[0-9]{1,5}.txt</code></li></ul></li><li><code>less + 文件路径</code>：分页显示文件内容 <ul><li>命令中快捷键 <ul><li><code>d</code> 键：前进半页(半个屏幕)</li><li><code>u</code> 键：后退半页(半个屏幕)</li><li><code>空格</code> 键：文件内容读取下一个终端屏幕的行数，相当于前进一个屏幕页，与键盘上的 PageDown(下一页) 效果相同</li><li><code>b</code> 键：后退一页，与键盘上的 PageUp(上一页) 效果相同</li><li><code>回车</code> 键：文件内容读取下一行，与向下键效果相同</li><li><code>y</code> 键：后退一行，与向上键效果相同</li><li><code>q</code> 键：终止 <code>less</code> 命令或退出帮助文档</li><li><code>h</code> 键：显示帮助文档</li><li><code>=</code> 键：显示在文件中的位置 <ul><li>当前页面的内容是文件的第几行到第几行</li><li>整个文件的行数</li><li>当前页面的字符数</li><li>整个页面的字符数</li><li>当前页面占整个文件的百分比</li></ul></li><li><code>/</code> (斜杠)：进入搜索模式 <ul><li>在斜杠后输入要搜索的文字按下回车键，就回把所有符合的结果都表示出来</li><li>要在搜索的结果中跳转 <ul><li>按 <code>n</code> 键(跳到下一个符合项目)</li><li>按 <code>N</code> 键(<code>shift + n</code>跳到上一个符合项目)</li></ul></li><li>正则表达式也可以用在搜索内容中</li></ul></li></ul></li></ul></li></ul><h4 id="操作" tabindex="-1"><a class="header-anchor" href="#操作" aria-hidden="true">#</a> 操作</h4><ul><li><code>touch + 文件路径</code>：当文件不存在时，创建一个空白文件，可同时创建多个文件</li><li><code>cp</code>：拷贝文件 <ul><li><code>-r/-R</code>：拷贝目录</li><li><code>*</code>：通配符</li></ul></li><li><code>mv</code>：移动或重命名文件或目录</li><li><code>rm</code>：删除目录或文件 <ul><li><code>-i</code>：向用户确认是否删除</li><li><code>-f</code>：不询问用户是否确定删除文件</li><li><code>-r</code>：递归删除，用于删除目录</li></ul></li></ul><h4 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h4><ul><li><p><code>locate + filename|function|reg</code>：搜索包含关键字的所有文件或目录</p><ul><li>不会对实际的整个硬盘进行查找，而是在文件的数据库里进行查找</li><li>对于刚创建不久的文件，还没有被收录进文件数据库，所以找不到其索引，不会返回任何结果</li><li>一般每天会更新一次数据库，隔 24 小时再用 locate 查找就可以找到了</li></ul></li><li><p><code>updatedb</code>：强制系统立即更新文件数据库，此命令只能由 root 用户执行</p></li><li><p><code>find</code>：查找文件</p><ul><li>可以让我们对每个找到的文件做后续的操作</li><li>不会在文件数据库中查找文件的记录，而是遍历实际硬盘</li><li><code>find [何处] 何物 [做什么]</code><ul><li><strong>何处</strong>：指定在哪个目录中查找，此目录的所有子目录也会被查找 <ul><li>如果没有提供此参数，会在当前目录及其子目录进行查找</li></ul></li><li><strong>何物</strong>：(必须)可以根据 <strong>文件名字、大小、最近访问时间</strong> 等等来查找</li><li><strong>做什么</strong>：找到文件后最为每个文件做一定的操作，称为“后续处理” <ul><li>默认地，假如不指定这个参数，该命令只会显示找到的文件</li></ul></li><li><code>-name</code>：按名称查找</li><li><code>-type</code>：按类型查找 <ul><li><code>d</code>：目录</li><li><code>f</code>：文件</li></ul></li><li><code>-printf</code>：格式化打印查找结果 <ul><li><code>%p</code>：文件名</li><li><code>%u</code>：文件所有者</li></ul></li><li><code>-delete</code>：删除查找到的文件</li><li><code>-exec</code>：可以后接一个命令，对每个查找到的文件进行操作 <ul><li>不必用双引号括起来</li><li><code>{}</code>：会用查找到的每个文件来替代</li><li><code>\\</code>：是必须的结尾</li></ul></li><li><code>-ok</code>：和<code>-exec</code> 类似，但每次操作查找到的文件前都有一次确认提示</li></ul></li><li>find 只会查找完全符合 <code>何物</code> 字符串表示的文件，locate 会查找所有包含关键字的文件 <ul><li>例如查找 <code>thing</code>，find 只会找到 <code>thing</code>, 为不会找到 <code>thing1</code></li><li>可以使用通配符(<code>*</code>)解决此问题</li></ul></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 根据文件名查找</span>
<span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;new_file&quot;</span>

<span class="token comment"># 根据文件大小查找</span>
<span class="token function">find</span> /var <span class="token parameter variable">-size</span> +10M
<span class="token function">find</span> /var <span class="token parameter variable">-size</span> <span class="token parameter variable">-50k</span>
<span class="token function">find</span> /var <span class="token parameter variable">-size</span> +20G

<span class="token comment"># 按文件类型查找</span>
<span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;new_file&quot;</span> <span class="token parameter variable">-type</span> d

<span class="token comment"># 按最近访问时间查找(7天内)</span>
<span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.txt&quot;</span> <span class="token parameter variable">-atime</span> <span class="token parameter variable">-7</span>

<span class="token comment"># 在特定的目录下按文件名查找</span>
<span class="token function">find</span> /var/log <span class="token parameter variable">-name</span> <span class="token string">&quot;syslog&quot;</span>

<span class="token comment"># 格式化打印查找结果</span>
<span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.txt&quot;</span> <span class="token parameter variable">-printf</span> <span class="token string">&quot;%p - %u<span class="token entity" title="\\n">\\n</span>&quot;</span>

<span class="token comment"># 删除当前目录及其子目录下所有以 .jpg 为后缀的文件</span>
<span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">&quot;*.jpg&quot;</span> <span class="token parameter variable">-delete</span>

<span class="token comment"># 对每个找到的文件修改权限</span>
<span class="token function">find</span> one <span class="token parameter variable">-name</span> <span class="token string">&quot;*.txt&quot;</span> <span class="token parameter variable">-exec</span> <span class="token function">chmod</span> <span class="token number">600</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="目录管理" tabindex="-1"><a class="header-anchor" href="#目录管理" aria-hidden="true">#</a> 目录管理</h3><h4 id="查看-1" tabindex="-1"><a class="header-anchor" href="#查看-1" aria-hidden="true">#</a> 查看</h4><ul><li><code>ls [-al] [文件名或目录名]</code>：列出当前目录下的目录和文件 <ul><li><code>-a</code>：列出所有文件，包含隐藏文件</li><li><code>-A</code>：与 <code>-a</code> 类似，但不包含 <code>.</code> 和 <code>..</code></li><li><code>-l</code>：使得 <code>ls</code> 命令列出一个显示文件和目类似-录的详细信息的列表（文件以字节为单位）</li><li><code>-h</code>：表示适合人类阅读的</li><li><code>-t</code>：按文件最近一次修改时键排序</li><li><code>-i</code>：显示文件的 inode</li></ul></li><li><code>ll</code>：列出当前目录下的目录和文件信息 <ul><li><code>|</code>：通道，将前面命令的输出结果作为后面命令的依据 <ul><li><code>ll | grep bin</code></li></ul></li></ul></li><li><code>cd [目录名称]</code>：切换目录 <ul><li>不加路径参数时会直接回到家目录(~)</li><li><code>cd ..</code>：返回上一级目录</li><li><code>cd ../..</code>：返回上上级目录</li></ul></li><li><code>pwd</code>：显示当前目录路径</li><li><code>du</code>：表示磁盘使用/占用(只显示目录) <ul><li><code>-a</code>：显示目录和文件的大小</li><li><code>-h</code>：表示适合人类阅读的</li><li><code>-s</code>：只显示总计大小</li></ul></li><li><code>which</code>：获取命令的可执行文件的位置 <ul><li><code>which node</code></li></ul></li><li><code>whereis 文件或目录</code>：查找特定目录</li><li><code>find 目录 [-name/user/size] 参数</code>：查找</li></ul><h4 id="操作-1" tabindex="-1"><a class="header-anchor" href="#操作-1" aria-hidden="true">#</a> 操作</h4><ul><li><p><code>mkdir [-p] 目录名称</code>：创建目录</p><ul><li><code>-p</code>：递归创建目录结构，例如：<code>mkdir -p one/two/three</code></li><li><code>-v</code>：用于显示执行过程</li></ul></li><li><p><code>rmdir [-p] 目录名称</code>：删除目录，只能用于删除空目录</p></li><li><p><code>cp</code>：拷贝文件</p><ul><li><code>-r/-R</code>：拷贝目录</li><li><code>*</code>：通配符</li></ul></li><li><p><code>mv</code>：移动或重命名文件或目录</p></li><li><p><code>rm</code>：删除目录或文件</p><ul><li><code>-i</code>：向用户确认是否删除</li><li><code>-f</code>：不询问用户是否确定删除文件</li><li><code>-r</code>：递归删除，用于删除目录</li></ul></li><li><p><code>ln</code>：创建链接(类似于 windows 中的快捷方式)</p><ul><li>physical link：物理连接或硬链接</li><li>Symbolic link：符号链接或软链接</li></ul></li></ul><h3 id="压缩和解压缩" tabindex="-1"><a class="header-anchor" href="#压缩和解压缩" aria-hidden="true">#</a> 压缩和解压缩</h3><h4 id="压缩文件类型" tabindex="-1"><a class="header-anchor" href="#压缩文件类型" aria-hidden="true">#</a> 压缩文件类型</h4><ul><li><code>*.gz</code>：gzip 压缩格式的文件</li><li><code>*.bz2</code>：bzip2 压缩格式的文件</li><li><code>*.xz</code>：xz 压缩格式的文件</li><li><code>*.tar</code>：tar 打包的文件</li><li><code>*.zip</code>：zip 压缩格式的文件</li><li><code>*.tar.gz</code>：打包并使用 gzip 压缩的文件</li><li><code>*.tar.bz2</code>：打包并使用 bzip2 压缩的文件</li><li><code>*.tar.xz</code>：打包并使用 xz 压缩的文件</li></ul><h4 id="压缩、解压缩命令" tabindex="-1"><a class="header-anchor" href="#压缩、解压缩命令" aria-hidden="true">#</a> 压缩、解压缩命令</h4><h5 id="gzip" tabindex="-1"><a class="header-anchor" href="#gzip" aria-hidden="true">#</a> gzip</h5><blockquote><p>gzip 是 linux 系统中的文件压缩程序，默认扩展名为 <code>.gz</code></p></blockquote><h5 id="tar" tabindex="-1"><a class="header-anchor" href="#tar" aria-hidden="true">#</a> tar</h5><blockquote><p>tar 是 linux 系统将多个文件打包和压缩的工具，本质是打包软件，扩展名为 <code>.tar</code></p><p>可以结合 gzip 或其他压缩工具实现打包压缩，扩展名为 <code>.tar.gz</code></p></blockquote><ul><li><code>tar [-ctxzjJvf] 压缩文件 [源文件]</code>：打包、压缩文件 <ul><li><code>z</code>：只用 gzip 方式</li><li><code>c</code>：打包压缩</li><li><code>x</code>：解打包解压缩</li><li><code>v</code>：显示过程</li><li><code>f</code>：指定压缩包名</li><li><code>t</code>：查看内容</li><li><code>j</code>：使用 bzip2 方式</li><li><code>J</code>：使用 xz 方式</li><li><code>-C + 目录</code>：解压缩到某个目录</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 压缩命令</span>
<span class="token function">tar</span> zcvf tomcat.tar.gz /usr/local/tomcat

<span class="token comment"># 解压缩命令</span>
<span class="token function">tar</span> zxvf tomcat.tar.gz <span class="token parameter variable">-C</span> /use/local/tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="软件的安装与卸载" tabindex="-1"><a class="header-anchor" href="#软件的安装与卸载" aria-hidden="true">#</a> 软件的安装与卸载</h3><h4 id="安装方式" tabindex="-1"><a class="header-anchor" href="#安装方式" aria-hidden="true">#</a> 安装方式</h4><ul><li><p>编译安装：用户自己从网站下载程序源码进行编译安装</p><ul><li>下载源码包（<code>curl、wget</code>）</li><li>解压（<code>tar</code>）</li><li>进入到该目录（<code>cd</code>）</li><li>编译前配置（<code>./configure</code>）</li><li>编译（<code>make</code>） <ul><li>错误时，可能需要先安装 <code>gcc</code><ul><li><code>gcc</code>：C 语言源代码的编译工具包</li><li><code>yum install -y gcc</code></li></ul></li><li>错误时，可能需要先删除文件夹并重新解压安装文件源码包</li></ul></li><li>编译安装（<code>make install</code>）</li><li>注意 <ul><li>编译安装时软件包依赖解决</li><li>删除 make clear 然后直接删除目录</li></ul></li></ul></li><li><p>rpm：Red Hat 软件包管理器，相当于应用程序安装文件的执行者</p><ul><li><code>rpm -ivh 软件包</code><ul><li><code>i</code>：安装</li><li><code>v</code>：显示详细信息</li><li><code>h</code>：显示进度</li></ul></li><li><code>rpm -q 安装包</code>：查询是否安装</li><li><code>rpm -qi 安装包</code>：查询包信息</li><li><code>rpm -ql 安装包</code>：查询安装位置</li><li><code>rpm -e 安装包</code>：卸载</li></ul></li><li><p>yum：软件仓库安装</p><ul><li><p><code>yum search 包名称</code>：在仓库中查询是否存在指定 应用</p></li><li><p><code>yum list 包名称</code>：查询可以安装的软件包</p></li><li><p><code>yum list installed 包名称</code>：查询已安装的软件包</p><ul><li><code>yum list installed *tree*</code>：模糊匹配筛选已安装的软件包</li></ul></li><li><p><code>yum info 包名称</code>：查看应用详细信息</p></li><li><p><code>yum install [-y] 包名称</code>：全自动下载安装应用及其依赖</p><ul><li><code>-y</code>：自动回答 yes</li></ul></li><li><p><code>yum update [-y] 包名称</code>：更新</p></li><li><p><code>yum remove [-y] 包名称</code>：卸载</p></li></ul></li></ul><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h4><ul><li>编译安装，兼容性强，同一平台都可以安装</li><li>rpm 安装管理方便 <ul><li>需要用户自己解决依赖问题</li></ul></li><li>yum 省时省力 <ul><li>引入软件仓库，联网下载 rpm 包及依赖，并依次自动安装</li><li>是 rpm 的前端程序，其目的是简化 rpm 的安装过程</li></ul></li></ul><h2 id="文件存储" tabindex="-1"><a class="header-anchor" href="#文件存储" aria-hidden="true">#</a> 文件存储</h2><ul><li>每个文件分为三部分：文件名、文件内容、权限</li><li>每个文件的文件内容都被分配到一个标识号码，就是 <code>inode</code></li><li>每个文件名都绑定到它的文件内容(用 <code>inode</code> 标识)</li></ul><h3 id="硬链接" tabindex="-1"><a class="header-anchor" href="#硬链接" aria-hidden="true">#</a> 硬链接</h3><blockquote><p>使链接的两个文件共享同样的文件内容，就是同样的 <code>inode</code></p></blockquote><ul><li><p>一旦文件 1 和文件 2 之间有了硬链接，那么修改文件 1 或文件 2，修改的是相同的一块内容</p></li><li><p>缺陷：只能创建指向文件的硬链接，不能创建指向目录的</p></li><li><p><code>ln file1 file2</code>：创建 file2 并指向 file1 的文件内容</p></li><li><p>对硬链接来说，删除任意一方的文件，共同指向的文件内容并不会从硬盘上被删除，同时删除硬链接的所有文件，共同指向的文件内容才会消失，也就是 <code>inode</code> 才会被删除</p></li></ul><h3 id="软链接" tabindex="-1"><a class="header-anchor" href="#软链接" aria-hidden="true">#</a> 软链接</h3><blockquote><p>类似于 windows 下的快捷方式，原理很相似</p></blockquote><ul><li><code>ln -s file1 file2</code>：创建 file1 的软链接 file2</li><li>如果删除了 file2，file1 不会有任何影响，如果删除 file1，file2 会变成死链接，因为指向的文件不见了</li><li>软链接可以指向目录</li></ul><h2 id="用户和权限" tabindex="-1"><a class="header-anchor" href="#用户和权限" aria-hidden="true">#</a> 用户和权限</h2><ul><li><code>sudo</code>：以 root 身份运行命令</li></ul><h3 id="用户组织" tabindex="-1"><a class="header-anchor" href="#用户组织" aria-hidden="true">#</a> 用户组织</h3><ul><li>root 用户是默认创建的，超级用户</li><li>进入 root 的几种方式 <ul><li><code>sudo su</code>：会输入当前用户密码，进入后使用 <code>pwd</code> 命令查看依然为普通用户目录</li><li><code>su</code>：会输入 root 密码，进入后使用 <code>pwd</code> 命令查看依然为普通用户目录</li><li><code>su -</code>：会输入 root 密码，进入后使用 <code>pwd</code> 命令查看为 root 家目录</li></ul></li></ul><h3 id="root-可用命令" tabindex="-1"><a class="header-anchor" href="#root-可用命令" aria-hidden="true">#</a> root 可用命令</h3><ul><li><p><code>useradd</code>：添加用户 <code>useradd user1</code></p></li><li><p><code>passwd 用户名</code> ：修改用户密码 <code>passwd user1</code></p></li><li><p><code>userdel</code>：删除已创建的用户 <code>userdel user1</code></p><ul><li>不加参数只会删除用户，不会删除用户的家目录</li><li><code>-r/--remove</code>：连用户家目录一并删除</li></ul></li><li><p><code>usermod</code>：修改用户账户</p><ul><li><code>-l</code>：对用户重命名，/home 中的家目录名不变，需要手动修改</li><li><code>-g</code>：修改用户所在群组，此用户家目录内所有文件所在的用户群组会相应改变(会将用户从之前的群组中删除) <ul><li><code>usermod -g friends user1</code></li></ul></li><li><code>-G</code>：将用户添加到多个群组，中间用逗号隔开(会将用户从之前的群组中删除) <code>usermod -G friend1,firend2 user1</code></li><li><code>-aG</code>：追加，改变群组时保留之前的群组，追加群组一定要用 <code>-G</code></li></ul></li></ul><h3 id="权限管理命令" tabindex="-1"><a class="header-anchor" href="#权限管理命令" aria-hidden="true">#</a> 权限管理命令</h3><h4 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h4><table><thead><tr><th></th><th>所有者</th><th>所属组</th><th>其他用户</th></tr></thead><tbody><tr><td>文件/目录</td><td>rwx</td><td>rwx</td><td>rwx</td></tr></tbody></table><table><thead><tr><th>符号(数值)</th><th>权限</th><th>对文件的含义</th><th>对目录的含义</th></tr></thead><tbody><tr><td>r(4)</td><td>读权限</td><td>查看文件</td><td>查看目录</td></tr><tr><td>w(2)</td><td>写权限</td><td>修改文件</td><td>修改目录内容</td></tr><tr><td>x(1)</td><td>执行权限</td><td>执行文件</td><td>进入目录</td></tr></tbody></table><table><thead><tr><th>权限</th><th>数字</th><th>计算</th></tr></thead><tbody><tr><td>---</td><td>0</td><td>0 + 0 + 0</td></tr><tr><td>r--</td><td>4</td><td>4 + 0 + 0</td></tr><tr><td>-w-</td><td>2</td><td>0 + 2 + 0</td></tr><tr><td>--x</td><td>1</td><td>0 + 0 + 1</td></tr><tr><td>rw-</td><td>6</td><td>4 + 2 + 0</td></tr><tr><td>r-x</td><td>5</td><td>4 + 0 + 1</td></tr><tr><td>-wx</td><td>3</td><td>0 + 2 + 1</td></tr><tr><td>rwx</td><td>7</td><td>4 + 2 + 1</td></tr></tbody></table><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20200604210209.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>第一个字符 <ul><li><code>-</code>：表示文件</li><li><code>d</code>：表示目录</li><li><code>l</code>：表示连接（windows 中的快捷方式）</li></ul></li><li>后面九个字符表示三组读写执行权限：所有者、所属组、其他用户</li><li>最后的小点表示 <strong>SELinux 的安全标签</strong></li><li><code>root root</code>：对应所有者和所属组</li></ul><h4 id="修改权限" tabindex="-1"><a class="header-anchor" href="#修改权限" aria-hidden="true">#</a> 修改权限</h4><ul><li><code>chmod</code>：修改访问权限，不需要是 root 用户才能运行，只要是文件的所有者就可以使用此命令来修改文件访问权限 <ul><li><code>chown [-R] 用户名 文件或目录</code>：修改所有者</li><li><code>chown [-R] 用户名:组名 文件或目录</code>：修改所有者和组</li><li><code>chgrp [-R] 组名 文件或目录</code>：修改所属组</li><li><code>chmod [-R] xyz 文件夹或目录</code>：权限修改</li><li><code>-R</code>：递归设置子目录和子文件</li><li>第一种修改法 <ul><li><code>x</code>：所有者权限数值之和</li><li><code>y</code> ：所属组权限数值之和</li><li><code>z</code>：其他用户权限数值之和</li></ul></li><li>第二种修改方法 <ul><li><code>x</code>：角色，** u g o a ** 分别表示所有者、所属组、其他用户、所有角色</li><li><code>y</code> ：设置，** + - = ** 分别表示增加、减少、设置</li><li><code>z</code> ：权限， ** r w x **：分别表示读权限、写权限、执行权限</li></ul></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 用数字分配权限，具体含义参考上面表格
<span class="token function">chmod</span> <span class="token number">777</span> file.txt
// 用字母分配权限
<span class="token function">chmod</span> u+rx file.txt
<span class="token function">chmod</span> g+r file.txt
<span class="token function">chmod</span> o-r file.txt
<span class="token function">chmod</span> g+r o-r file.txt
<span class="token function">chmod</span> go-r file.txt
<span class="token function">chmod</span> +x file.txt
<span class="token function">chmod</span> <span class="token assign-left variable">u</span><span class="token operator">=</span>rwx,g<span class="token operator">=</span>r,o<span class="token operator">=</span>- file.txt
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">700</span> /home/sunzhenyang
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="群组管理" tabindex="-1"><a class="header-anchor" href="#群组管理" aria-hidden="true">#</a> 群组管理</h2><ul><li>Linux 中每一个用户都属于一个特定的群组</li><li>如果不设置用户的群组，默认会创建一个和它用户名一样的群组</li><li><strong>只有 root 用户可以修改一个文件的所有者和群组</strong></li></ul><h3 id="群组命令" tabindex="-1"><a class="header-anchor" href="#群组命令" aria-hidden="true">#</a> 群组命令</h3><ul><li><p><code>groups</code>：显示当前用户所在群组，后加用户名会显示输入用户名所在群组</p></li><li><p><code>groupadd</code>：创建群组</p><ul><li><code>groupadd friends</code></li></ul></li><li><p><code>groupdel</code>：删除群组</p><ul><li><code>groupdel friends</code></li></ul></li><li><p><code>chown</code>：改变文件所有者 <code>chown friends file.txt</code></p><ul><li><code>chown sunzhenyang:firends file.txt</code></li><li><code>-R</code>：递归设置子目录和子文件</li></ul></li><li><p><code>chgrp</code>：改变文件的群组 <code>chgrp friends file.txt</code></p><ul><li><code>-R</code>：递归设置子目录和子文件</li></ul></li><li><p><code>newgrp 用户组</code>：将当前组切换到新的用户组</p></li></ul><h2 id="文本编辑器" tabindex="-1"><a class="header-anchor" href="#文本编辑器" aria-hidden="true">#</a> 文本编辑器</h2><h3 id="vim" tabindex="-1"><a class="header-anchor" href="#vim" aria-hidden="true">#</a> Vim</h3><blockquote><p><code>Vi</code> 的增强版，用于在远程环境下用命令的形式对文本进行在线编辑</p></blockquote><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/20200604210206.jpg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>vi 文件名</code>：用 vi 编辑器打开文件</li><li><code>vimtutor</code>：查看 vim 教程</li><li>模式 <ul><li>命令模式（默认） <ul><li><code>k j h l</code>：上 下 左 右</li><li><code>dd</code>：剪切当前行</li><li><code>yy</code>：复制当前行</li><li><code>p</code>：在下一行粘贴</li><li><code>P（shift + p）</code>：在上一行粘贴</li><li><code>w</code>：保存</li><li><code>delete</code> 或 <code>x</code>：删除单个字符</li><li><code>/str</code>：全文查找 <code>str</code> 字符串 <ul><li><code>n</code>：下一个</li><li><code>N</code>：上一个</li></ul></li><li><code>:% s/old/new/g</code>：替换文件内所有 <code>old</code> 字符为 <code>new</code></li><li><code>u</code>：撤销最近一次操作</li><li>转换到编辑模式 <ul><li><code>a</code>：在光标之后插入</li><li><code>A（shift + a）</code>：在当前行之后插入（行末）</li><li><code>i</code>：在光标之前插入</li><li><code>I （shift + i）</code>：在当前行之前插入（行首）</li><li><code>o</code>：在光标之下插入</li><li><code>O（shift + o）</code>：在上当前行之上插入</li></ul></li></ul></li><li>编辑模式</li><li>最后行模式 <ul><li><code>: 或 /</code>：进入最后行模式</li><li><code>w</code>：保存</li><li><code>wq</code>：保存并退出</li><li><code>wq!</code>：（强制只读文件）保存并退出</li><li><code>q</code>： 不保存退出</li><li><code>q!</code>： 文档已被修改时，强制不保存退出</li><li><code>set nu</code>：显示行号</li></ul></li></ul></li></ul><h3 id="nano" tabindex="-1"><a class="header-anchor" href="#nano" aria-hidden="true">#</a> Nano</h3><h4 id="配置文件-1" tabindex="-1"><a class="header-anchor" href="#配置文件-1" aria-hidden="true">#</a> 配置文件</h4><h5 id="nanorc" tabindex="-1"><a class="header-anchor" href="#nanorc" aria-hidden="true">#</a> .nanorc</h5><ul><li><p>一般配置在每个用户的家目录中新建 <code>.nanorc</code> 文件</p></li><li><p>全局配置：<code>/etc/nanorc</code></p></li><li><p>每一行一句配置语句，配置语句以 <code>set</code> 或 <code>unset</code> 开头</p><ul><li><code>set</code>：激活</li><li><code>unset</code>：关闭</li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 激活鼠标
<span class="token builtin class-name">set</span> mouse

// 激活自动缩进
<span class="token builtin class-name">set</span> autoindent

// 激活智能 Home 键
<span class="token builtin class-name">set</span> smarthome
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="命令-1" tabindex="-1"><a class="header-anchor" href="#命令-1" aria-hidden="true">#</a> 命令</h4><ul><li><code>nano file.txt</code>：打开文件 <ul><li>如果 file.txt 不存在，就会创建一个名为 file.txt 的空文件</li><li><code>-m</code>：激活鼠标</li><li><code>-i</code>：激活自动缩进功能</li><li><code>-A</code>：激活智能 Home 键功能 <ul><li>通常情况下按下键盘的 Home 键光标会自动跳到一行的开始，但是加了 <code>-A</code> 之后，会根据一行的开始出有无缩进来智能判断</li></ul></li><li><code>nano -miA file.txt</code>：同时激活上述三个属性</li></ul></li></ul><h4 id="快捷键-1" tabindex="-1"><a class="header-anchor" href="#快捷键-1" aria-hidden="true">#</a> 快捷键</h4><ul><li><p><code>Ctrl + C</code>：显示目前光标所在处的行数与列数等信息</p></li><li><p><code>Ctrl + R</code>：打开其他文件</p></li><li><p><code>Ctrl + G</code>：显示帮助文档</p></li><li><p><code>Ctrl + W</code>：查找</p></li><li><p><code>Ctrl + \\</code>：替换</p></li><li><p><code>Ctrl + K</code>：剪切当前行</p></li><li><p><code>Ctrl + U</code>：粘贴</p></li><li><p><code>Ctrl + Y</code>：上一页(PgUp)</p></li><li><p><code>Ctrl + V</code>：下一页(PgDn)</p></li><li><p><code>Ctrl + F</code>：向前移动一格光标(左键)</p></li><li><p><code>Ctrl + B</code>：向后移动一格光标(右键)</p></li><li><p><code>Ctrl + P</code>：向上移动一行(上键)</p></li><li><p><code>Ctrl + N</code>：向下移动一行(下键)</p></li><li><p><code>Ctrl + O</code>：保存文件</p></li><li><p><code>Ctrl + X</code>：退出</p></li></ul><h2 id="ssh" tabindex="-1"><a class="header-anchor" href="#ssh" aria-hidden="true">#</a> SSH</h2><blockquote><p>是专为远程登录和其他网络服务提供的安全协议</p></blockquote><ul><li>分为两个不兼容版本 1.x 和 2.x，默认通过 SSH2.x 连接</li><li>常见工具：Xshell、SecureCRT</li></ul><h2 id="应用服务化" tabindex="-1"><a class="header-anchor" href="#应用服务化" aria-hidden="true">#</a> 应用服务化</h2><blockquote><p>指让应用程序以服务方式在系统改后台运行</p></blockquote><ul><li>Linux 系统对服务化应用进行统一管理</li><li><code>systemctl</code>：服务管理命令</li></ul><table><thead><tr><th>指令</th><th>用途</th></tr></thead><tbody><tr><td><code>start</code></td><td>启动服务</td></tr><tr><td><code>stop</code></td><td>停止服务</td></tr><tr><td><code>restart</code></td><td>重启服务</td></tr><tr><td><code>enable</code></td><td>设置开机启动</td></tr><tr><td><code>disable</code></td><td>禁止开机启动</td></tr><tr><td><code>status</code></td><td>查看服务状态</td></tr><tr><td><code>daemon-reload</code></td><td>重载服务配置文件</td></tr><tr><td><code>list-unit-files</code></td><td>列出所有服务</td></tr></tbody></table><h3 id="操作步骤" tabindex="-1"><a class="header-anchor" href="#操作步骤" aria-hidden="true">#</a> 操作步骤</h3><ul><li>进入服务文件夹：<code>cd /usr/lib/systemd/system</code></li><li>新建 redis.service 文件并输入内容：<code>vim redis.service</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token comment"># 描述</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Redis
<span class="token comment"># 在某些系统服务之后启动</span>
<span class="token assign-left variable">After</span><span class="token operator">=</span>syslog.target network.target remote-fs.target nss-lookup.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token comment"># 类型 forking：后台运行</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token comment"># PID文件路径</span>
<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/var/run/redis_6379.pid
<span class="token comment"># 服务启动命令</span>
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/redis/redis-6.2.5/src/redis-server /usr/local/redis/redis-6.2.5/redis.conf
<span class="token comment"># 服务停止命令</span>
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/bin/kill <span class="token parameter variable">-s</span> QUIT <span class="token variable">$MAINPID</span>
<span class="token comment"># 为每个服务设置私有的临时文件目录</span>
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token comment"># 将当前服务分配到系统默认服务组，允许服务随系统启动</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 重载服务配置文件</span>
systemctl daemon-reload

<span class="token comment"># 启动 Redis 服务</span>
systemctl start redis

<span class="token comment"># 查看 Redis 服务状态</span>
systemctl status redis

<span class="token comment"># 关闭 Redis 服务</span>
systemctl stop redis

<span class="token comment"># 重启 Redis 服务</span>
systemctl restart redis

<span class="token comment"># 设置 Redis 服务 开机启动</span>
systemctl <span class="token builtin class-name">enable</span> redis

<span class="token comment"># 关闭 Redis 服务 开机启动</span>
systemctl disable redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="防火墙" tabindex="-1"><a class="header-anchor" href="#防火墙" aria-hidden="true">#</a> 防火墙</h2><blockquote><p>借助硬件和软件对内外部网络环境的保护措施</p></blockquote><ul><li><p>CentOS 7 基于 firewall 实现应用层防火墙</p><ul><li>核心命令：<code>firewall-cmd</code></li></ul></li><li><p>CentOS 6 基于 iptables</p></li></ul><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td><code>firewall-cmd --state</code></td><td>查看防火墙状态</td></tr><tr><td><code>firewall-cmd --list-ports</code></td><td>查看防火墙房型的端口</td></tr><tr><td><code>firewall-cmd --zone=public --permanent --add-port=8080/tcp</code></td><td>放行 8080 端口</td></tr><tr><td><code>firewall-cmd --zone=public --permanent --remove-port=8080/tcp</code></td><td>移除被放行的 8080 端口</td></tr><tr><td><code>firewall-cmd --zone=public --permanent --add-port=8000-9000/tcp</code></td><td>放行范围内的端口号</td></tr><tr><td><code>firewall-cmd --reload</code></td><td>配置重载</td></tr><tr><td><code>firewall-cmd --permanent --zone=public --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.163.210&quot; port protocol=&quot;tcp&quot; port=&quot;3306&quot; accept&quot;</code></td><td>对指定 IP 向本机指定端口发送的数据包放行</td></tr></tbody></table><h2 id="shell" tabindex="-1"><a class="header-anchor" href="#shell" aria-hidden="true">#</a> Shell</h2><blockquote><p>是用 C 语言 编写的脚本解释器，是用户通过代码操作 Linux 的桥梁</p></blockquote><ul><li>用于输入终端的各种命令</li><li>是一个用户跟操作系统之间的一个命令解释器，也就是用户与 Linux 操作系统之间沟通的桥梁</li><li>Shell 脚本描述要执行的任务，完成系列复杂的操作，文件通常以 <code>.sh</code> 后缀</li><li>Shell 脚本通过 Shell 解释器执行，按揭使其分类分为多种类型 <ul><li>目前大部分 Linux 发行版默认的 shell 是 <code>Bash</code></li></ul></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># deploy_tomcat.sh</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;准备下载Tomcat9&quot;</span>
<span class="token function">wget</span> https://mirror.bit.edu.cn/apache/tomcat/tomcat-9/v9.0.34/bin/apache-tomcat-9.0.34.tar.gz
<span class="token builtin class-name">echo</span> <span class="token string">&quot;正在解压缩Tomcat9&quot;</span>
<span class="token function">tar</span> zxf apache-tomcat-9.0.34.tar.gz
<span class="token builtin class-name">echo</span> <span class="token string">&quot;防火墙开放8080端口&quot;</span>
firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public <span class="token parameter variable">--permanent</span> --add-port<span class="token operator">=</span><span class="token number">8080</span>/tcp
firewall-cmd <span class="token parameter variable">--reload</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;启动Tomcat&quot;</span>
<span class="token builtin class-name">cd</span> ./apache-tomcat-9.0.34/bin
./startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bashrc" tabindex="-1"><a class="header-anchor" href="#bashrc" aria-hidden="true">#</a> .bashrc</h3><blockquote><p>是 Bash 这个 shell 程序的配置文件(不用登录的图形化终端)</p></blockquote><ul><li><p>位于家目录下</p></li><li><p><code>.bashrc</code> 本身的语法也是 Bash 语法，是一种脚本语言</p></li><li><p>默认在用户下次登录系统时才能生效</p></li><li><p><code>source .bashrc</code> ：使改动立即生效</p></li><li><p>终端 bash 全局配置文件：<code>/etc/bashrc</code></p></li></ul><h3 id="profile" tabindex="-1"><a class="header-anchor" href="#profile" aria-hidden="true">#</a> .profile</h3><blockquote><p>需要登录的，非图形界面的终端的配置文件</p></blockquote><ul><li><p>位于家目录下</p></li><li><p><code>profile</code> 文件会调用 <code>.bashrc</code>，<code>profile</code> 文件会用本身的配置加上 <code>.bashrc</code> 的配置</p></li><li><p>默认在用户下次登录系统时才能生效</p></li><li><p><code>source .profile</code>：使改动立即生效</p></li><li><p>全局配置文件：<code>/etc/profile</code></p></li></ul><h2 id="软件仓库-基于-redhat" tabindex="-1"><a class="header-anchor" href="#软件仓库-基于-redhat" aria-hidden="true">#</a> 软件仓库(基于 RedHat)</h2><h3 id="软件包" tabindex="-1"><a class="header-anchor" href="#软件包" aria-hidden="true">#</a> 软件包</h3><ul><li>一个软件包是软件所有文件的压缩包</li><li>二进制形式，包含了安装软件的所有指令</li><li>在 Red Hat 一族里，软件包的后缀是 <code>.rpm</code></li><li>Debian 一族(Ubuntu、Debian 等)的软件包后缀是 <code>.deb</code></li><li>软件包管理包括了依赖关系的管理</li><li>软件包不需要通过搜索引擎来找到并下载</li><li>几乎所有 <code>.rpm</code> 软件包存放在相同的地方，成为软件仓库</li></ul><h3 id="依赖关系" tabindex="-1"><a class="header-anchor" href="#依赖关系" aria-hidden="true">#</a> 依赖关系</h3><ul><li>通常来说，很少有一个软件可以单独在 Linux 上运行而不依赖于其他程序</li><li>一个软件经常需要使用其他程序或者其他程序的片段(称之为“库”)</li><li>一个软件依赖其他程序，忙着就是依赖关系</li></ul><h3 id="管理软件仓库" tabindex="-1"><a class="header-anchor" href="#管理软件仓库" aria-hidden="true">#</a> 管理软件仓库</h3>`,122),f=a("<li><p><code>package</code>：软件的二进制安装包</p></li><li><p><code>dependency</code>：依赖</p></li><li><p><code>repository</code>：仓库</p></li><li><p>包含软件仓库列表的文件</p><ul><li>CentOS：<code>/etc/yum.repos.d/CentOS-Base.repo</code> (系统文件，只能被 root 用户修改)</li></ul></li>",4),k={href:"https://www.centos.org/download/mirrors/",target:"_blank",rel:"noopener noreferrer"},g={href:"http://mirrors.163.com/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.aliyun.com/mirror/",target:"_blank",rel:"noopener noreferrer"},y=a(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 修改为阿里源</span>

<span class="token comment"># 备份源配置文件(CentOS 7)</span>
<span class="token function">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup

<span class="token comment"># 下载ailiyun的yum源配置文件到/etc/yum.repos.d/</span>
<span class="token function">wget</span> <span class="token parameter variable">-O</span> /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo

<span class="token comment"># 运行yum makecache生成缓存</span>
yum makecache
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),q={href:"https://blog.csdn.net/inslow/article/details/54177191",target:"_blank",rel:"noopener noreferrer"},w=a(`<h3 id="包管理工具" tabindex="-1"><a class="header-anchor" href="#包管理工具" aria-hidden="true">#</a> 包管理工具</h3><ul><li><p>终端的软件包管理工具一般用 <code>yum</code></p></li><li><p>yum 是 CentOS 中的默认包管理工具，也用于 Red Hat 一族</p><ul><li><code>yum update</code>：更新软件包(不删除旧包)，生产环境最好用此命令，防止因旧软件包依赖而出现问题</li><li><code>yum upgrade</code>：更新软件包(删除旧包)</li><li><code>yum search + package</code>：搜索软件包</li><li><code>yum install + package</code>：安装软件包</li><li><code>yum remove + package</code>：删除软件包(<code>yum remove autoremove + 软件包</code>)</li></ul></li><li><p>本地的 <code>.rpm</code> 软件包，可以用 <code>rpm</code> 命令来安装</p><ul><li><code>sudo rpm -i *.rpm</code>：安装</li><li><code>sudo rpm -e + 包名</code>：卸载</li></ul></li><li><p>本地的 <code>.rpm</code> 软件包，可以用 <code>yum</code> 命令来安装</p><ul><li><code>sudo yum localinstall *.rpm</code>：安装</li><li><code>sudo yum remove + 包名</code>：卸载</li></ul></li></ul><h2 id="最小化安装" tabindex="-1"><a class="header-anchor" href="#最小化安装" aria-hidden="true">#</a> 最小化安装</h2><ul><li><code>yum install -y net-tools.x86_64</code></li><li><code>yum install -y wget</code></li><li><code>yum install -y vim-commom</code></li><li><code>yum install -y vim-enhanced</code></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载 MySQL</span>
<span class="token function">wget</span> https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm
<span class="token comment"># 准备安装源</span>
yum localinstall <span class="token parameter variable">-y</span> mysql80-commumity-release-e17-3.noarch.rpm

<span class="token comment">#</span>
yum search mysql-comm

<span class="token comment">#</span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mysql-community-server

<span class="token comment"># 启动 MySQL</span>
systemctl start mysqld

<span class="token comment"># 查看 MySQL 默认密码</span>
<span class="token function">vi</span> /var/log/mysqld.log

<span class="token comment"># 进入 MySQL 命令行</span>
mysql <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span>

<span class="token comment"># 修改密码</span>
alter user <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> identified with mysql_native_password by ‘qwQW88173081<span class="token operator">!</span>’

<span class="token comment"># 修改访问</span>
use mysql<span class="token punctuation">;</span>
<span class="token keyword">select</span> host,user form user<span class="token punctuation">;</span>
update user <span class="token builtin class-name">set</span> <span class="token assign-left variable">host</span><span class="token operator">=</span><span class="token string">&#39;%&#39;</span> where <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token string">&#39;root&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># java环境安装</span>
yum search jdk
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> java-1.8.0-openjdk
<span class="token function">java</span> <span class="token parameter variable">-version</span>

<span class="token comment"># 安装 Tomcat</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="阅读手册-rtfm" tabindex="-1"><a class="header-anchor" href="#阅读手册-rtfm" aria-hidden="true">#</a> 阅读手册(RTFM)</h2><ul><li><code>man</code>：是 manual 的缩写，是英语 “使用手册” 的意思 <ul><li>若不加数字， <code>man</code> 默认从数字最小的手册中寻找相关命令和函数</li></ul></li><li>手册包含 <ul><li>可执行程序或 Shell 命令</li><li>系统调用(Linux 内核提供的函数)</li><li>库调用(程序库中的函数)</li><li>文件(例如：<code>/etc/passwd</code>)</li><li>特殊文件(通常在 <code>/dev</code> 下)</li><li>游戏</li><li>杂项(例如：man(7)、groff(7))</li><li>系统管理命令(通常只能被 root 用户使用)</li></ul></li><li>安装手册：<code>sudo yum install -y man-pages</code> (CentOS 中默认安装了)</li><li>补全/更新 手册：<code>sudo mandb</code></li><li><code>main + 数字编号 + 命令/函数等</code> 可以查找到相关的命令和函数</li><li><code>apropos</code>：查找命令(根据手册的关键字找到命令)</li><li><code>-h</code>：帮助，可查看相关命令的文档 <ul><li>大多数命令都接受这个参数，有时 <code>--help</code> 也可以</li></ul></li><li><code>whatis</code>：列出 <code>man</code> 命令显示的手册的开头部分，也就是概述命令</li></ul><h3 id="手册显示后快捷键" tabindex="-1"><a class="header-anchor" href="#手册显示后快捷键" aria-hidden="true">#</a> 手册显示后快捷键</h3><ul><li><p><code>上键</code>：向上移动一行</p></li><li><p><code>下键</code>：向下移动一行</p></li><li><p><code>PgUp</code>：上一页</p></li><li><p><code>PgDn</code>：下一页</p></li><li><p><code>Home</code>：跳转到开头</p></li><li><p><code>End</code>：跳转到结尾</p></li><li><p><code>/</code>：搜索，和 <code>less</code> 命令中功能类似</p><ul><li>在斜杠后输入要搜索的文字按下回车键，就回把所有符合的结果都表示出来</li><li>要在搜索的结果中跳转 <ul><li>按 <code>n</code> 键(跳到下一个符合项目)</li><li>按 <code>N</code> 键(<code>shift + n</code>跳到上一个符合项目)</li></ul></li><li>正则表达式也可以用在搜索内容中</li></ul></li><li><p><code>q</code>：退出手册</p></li></ul><h3 id="手册解析" tabindex="-1"><a class="header-anchor" href="#手册解析" aria-hidden="true">#</a> 手册解析</h3><ul><li><code>NAME</code>：手册对应命令或函数的名字，后接简单描述</li><li><code>SYNOPSIS</code>：使用此命令的所有方法(参数组合) <ul><li>粗体的文字标识要原封不断的输入</li><li>下划线的文字标识要用实际的内容替换(固定参数除外)</li><li><code>[OPTION]</code>：选项(命令参数)，表示可选的参数，可组合多个</li><li><code>... ...</code>：省略号表示可以有多个此类内容</li><li><code>[-hvc]</code>：<code>-h</code>、<code>-v</code>、<code>-c</code> 选项是可选的，非强制性的</li><li><code>a|b</code>：可以输入 <code>a</code> 或 输入 <code>b</code>，但不能同时输入 <code>a</code> 和 <code>b</code></li></ul></li><li><code>DESCRIPTION</code>：命令更深入的描述，包括所有参数及其用法</li><li><code>AUTHOR</code>：作者</li><li><code>COPYRIGHT</code>：版权</li><li><code>SEE ALSO</code>：与此命令有关的命令，扩展阅读</li></ul>`,12);function C(z,_){const i=c("ExternalLinkIcon");return n(),s("div",null,[t(" more "),u,e("ul",null,[e("li",null,[e("p",null,[l("文档："),e("a",p,[l("目录"),d(i)])])]),h,m,v]),b,e("ul",null,[f,e("li",null,[e("p",null,[l("CentOS 官方源列表："),e("a",k,[l("https://www.centos.org/download/mirrors/"),d(i)])]),e("ul",null,[e("li",null,[l("网易源："),e("a",g,[l("http://mirrors.163.com/"),d(i)])]),e("li",null,[l("阿里源："),e("a",x,[l("https://developer.aliyun.com/mirror/"),d(i)])])])])]),y,e("ul",null,[e("li",null,[l("参考网址："),e("a",q,[l("https://blog.csdn.net/inslow/article/details/54177191"),d(i)])])]),w])}const R=o(r,[["render",C],["__file","Linux.html.vue"]]);export{R as default};
