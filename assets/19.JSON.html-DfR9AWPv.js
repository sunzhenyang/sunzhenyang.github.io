import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as n,c as s,a as c,b as e,d as r,e as l,f as o}from"./app-DdwQwFQ1.js";const d={},p={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON",target:"_blank",rel:"noopener noreferrer"},h=o('<br><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述"><span>描述</span></a></h2><blockquote><p>JSON 是一种语法，用来序列化对象、数组、数值、字符串、布尔值和 null 。它基于 JavaScript 语法</p></blockquote><table><thead><tr><th>JavaScript类型</th><th>JSON 的不同点</th></tr></thead><tbody><tr><td>对象和数组</td><td>属性名称必须是双引号括起来的字符串；最后一个属性后不能有逗号</td></tr><tr><td>数值</td><td>禁止出现前导零（ JSON.stringify 方法自动忽略前导零，而在 JSON.parse 方法中将会抛出 SyntaxError）；如果有小数点, 则后面至少跟着一位数字</td></tr><tr><td>字符串</td><td>只有有限的一些字符可能会被转义；禁止某些控制字符</td></tr></tbody></table><br>',5),m={id:"json-parse",tabindex:"-1"},_={class:"header-anchor",href:"#json-parse"},u={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"},N=o("<ul><li>描述：解析 JSON 字符串</li><li>语法：<code>JSON.parse(text[, reviver])</code></li><li>参数 <ul><li>text：要被解析成 JavaScript 值的字符串</li><li>reviver：转换器, 如果传入该参数(函数)，可以用来修改解析生成的原始值，调用时机在 parse 函数返回之前</li></ul></li><li>返回值：<code>Object</code> 类型, 对应给定 JSON 文本的对象/值</li><li>注意：若传入的字符串不符合 JSON 规范，则会抛出 <code>SyntaxError</code>异常</li></ul><br>",2),S={id:"json-stringify",tabindex:"-1"},J={class:"header-anchor",href:"#json-stringify"},b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},f=o("<ul><li>描述：将一个 JavaScript 对象或值转换为 JSON 字符串</li><li>语法：<code>JSON.stringify(value[, replacer [, space]])</code></li><li>参数 <ul><li>value：将要序列化成 一个 JSON 字符串的值</li><li>replacer <ul><li>如果该参数是一个函数，则在序列化过程中，被序列化的值的每个属性都会经过该函数的转换和处理</li><li>如果该参数是一个数组，则只有包含在这个数组中的属性名才会被序列化到最终的 JSON 字符串中</li><li>如果该参数为 null 或者未提供，则对象所有的属性都会被序列化</li></ul></li><li>space：指定缩进用的空白字符串，用于美化输出类型 <ul><li>如果参数是个数字，它代表有多少的空格；上限为10。该值若小于1，则意味着没有空格</li><li>如果该参数为字符串（当字符串长度超过10个字母，取其前10个字母），该字符串将被作为空格</li><li>如果该参数没有提供（或者为 null），将没有空格</li></ul></li></ul></li><li>返回值：一个表示给定值的JSON字符串</li></ul>",1);function O(g,v){const t=i("ExternalLinkIcon");return n(),s("div",null,[c(" more "),e("p",null,[e("a",p,[r("JSON"),l(t)])]),h,e("h2",m,[e("a",_,[e("span",null,[e("a",u,[r("JSON.parse()"),l(t)])])])]),N,e("h2",S,[e("a",J,[e("span",null,[e("a",b,[r("JSON.stringify()"),l(t)])])])]),f])}const x=a(d,[["render",O],["__file","19.JSON.html.vue"]]),k=JSON.parse(`{"path":"/notes/javascript/built-in-objects/19.JSON.html","title":"JSON","lang":"zh-CN","frontmatter":{"title":"JSON","icon":"article","article":false,"sticky":20,"breadcrumb":false,"head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/javascript/built-in-objects/19.JSON.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"JSON"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"JSON\\"}"]]},"headers":[{"level":2,"title":"描述","slug":"描述","link":"#描述","children":[]},{"level":2,"title":"JSON.parse()","slug":"json-parse","link":"#json-parse","children":[]},{"level":2,"title":"JSON.stringify()","slug":"json-stringify","link":"#json-stringify","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":1.85,"words":556},"filePathRelative":"notes/javascript/built-in-objects/19.JSON.md","localizedDate":"2023年1月11日","excerpt":""}`);export{x as comp,k as data};
