import{_ as p,o as e,c as o,a as n,b as t,e as c,d as s,r as i}from"./app.d392b00a.js";const l={},u=c(`<h2 id="json-\u683C\u5F0F" tabindex="-1"><a class="header-anchor" href="#json-\u683C\u5F0F" aria-hidden="true">#</a> JSON \u683C\u5F0F</h2><p>JSON \u683C\u5F0F\uFF08JavaScript Object Notation \u7684\u7F29\u5199\uFF09\u662F\u4E00\u79CD\u7528\u4E8E\u6570\u636E\u4EA4\u6362\u7684\u6587\u672C\u683C\u5F0F\uFF0C2001\u5E74\u7531 Douglas Crockford \u63D0\u51FA\uFF0C\u76EE\u7684\u662F\u53D6\u4EE3\u7E41\u7410\u7B28\u91CD\u7684 XML \u683C\u5F0F\u3002</p><p>\u76F8\u6BD4 XML \u683C\u5F0F\uFF0CJSON \u683C\u5F0F\u6709\u4E24\u4E2A\u663E\u8457\u7684\u4F18\u70B9\uFF1A\u4E66\u5199\u7B80\u5355\uFF0C\u4E00\u76EE\u4E86\u7136\uFF1B\u7B26\u5408 JavaScript \u539F\u751F\u8BED\u6CD5\uFF0C\u53EF\u4EE5\u7531\u89E3\u91CA\u5F15\u64CE\u76F4\u63A5\u5904\u7406\uFF0C\u4E0D\u7528\u53E6\u5916\u6DFB\u52A0\u89E3\u6790\u4EE3\u7801\u3002\u6240\u4EE5\uFF0CJSON \u8FC5\u901F\u88AB\u63A5\u53D7\uFF0C\u5DF2\u7ECF\u6210\u4E3A\u5404\u5927\u7F51\u7AD9\u4EA4\u6362\u6570\u636E\u7684\u6807\u51C6\u683C\u5F0F\uFF0C\u5E76\u88AB\u5199\u5165\u6807\u51C6\u3002</p><p>\u6BCF\u4E2A JSON \u5BF9\u8C61\u5C31\u662F\u4E00\u4E2A\u503C\uFF0C\u53EF\u80FD\u662F\u4E00\u4E2A\u6570\u7EC4\u6216\u5BF9\u8C61\uFF0C\u4E5F\u53EF\u80FD\u662F\u4E00\u4E2A\u539F\u59CB\u7C7B\u578B\u7684\u503C\u3002\u603B\u4E4B\uFF0C\u53EA\u80FD\u662F\u4E00\u4E2A\u503C\uFF0C\u4E0D\u80FD\u662F\u4E24\u4E2A\u6216\u66F4\u591A\u7684\u503C\u3002</p><p>JSON \u5BF9\u503C\u7684\u7C7B\u578B\u548C\u683C\u5F0F\u6709\u4E25\u683C\u7684\u89C4\u5B9A\u3002</p><blockquote><ol><li><p>\u590D\u5408\u7C7B\u578B\u7684\u503C\u53EA\u80FD\u662F\u6570\u7EC4\u6216\u5BF9\u8C61\uFF0C\u4E0D\u80FD\u662F\u51FD\u6570\u3001\u6B63\u5219\u8868\u8FBE\u5F0F\u5BF9\u8C61\u3001\u65E5\u671F\u5BF9\u8C61\u3002</p></li><li><p>\u539F\u59CB\u7C7B\u578B\u7684\u503C\u53EA\u6709\u56DB\u79CD\uFF1A\u5B57\u7B26\u4E32\u3001\u6570\u503C\uFF08\u5FC5\u987B\u4EE5\u5341\u8FDB\u5236\u8868\u793A\uFF09\u3001\u5E03\u5C14\u503C\u548C<code>null</code>\uFF08\u4E0D\u80FD\u4F7F\u7528<code>NaN</code>, <code>Infinity</code>, <code>-Infinity</code>\u548C<code>undefined</code>\uFF09\u3002</p></li><li><p>\u5B57\u7B26\u4E32\u5FC5\u987B\u4F7F\u7528\u53CC\u5F15\u53F7\u8868\u793A\uFF0C\u4E0D\u80FD\u4F7F\u7528\u5355\u5F15\u53F7\u3002</p></li><li><p>\u5BF9\u8C61\u7684\u952E\u540D\u5FC5\u987B\u653E\u5728\u53CC\u5F15\u53F7\u91CC\u9762\u3002</p></li><li><p>\u6570\u7EC4\u6216\u5BF9\u8C61\u6700\u540E\u4E00\u4E2A\u6210\u5458\u7684\u540E\u9762\uFF0C\u4E0D\u80FD\u52A0\u9017\u53F7\u3002</p></li></ol></blockquote><p>\u4EE5\u4E0B\u90FD\u662F\u5408\u6CD5\u7684 JSON\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token string">&quot;one&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;two&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;three&quot;</span><span class="token punctuation">]</span>

<span class="token punctuation">{</span> <span class="token string-property property">&quot;one&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;two&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;three&quot;</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span>

<span class="token punctuation">{</span><span class="token string-property property">&quot;names&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>

<span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u674E\u56DB&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4EE5\u4E0B\u90FD\u662F\u4E0D\u5408\u6CD5\u7684 JSON\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;age&#39;</span><span class="token operator">:</span> <span class="token number">32</span> <span class="token punctuation">}</span>  <span class="token comment">// \u5C5E\u6027\u540D\u5FC5\u987B\u4F7F\u7528\u53CC\u5F15\u53F7</span>

<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0xFFF</span><span class="token punctuation">]</span> <span class="token comment">// \u4E0D\u80FD\u4F7F\u7528\u5341\u516D\u8FDB\u5236\u503C</span>

<span class="token punctuation">{</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span> <span class="token comment">// \u4E0D\u80FD\u4F7F\u7528 undefined</span>

<span class="token punctuation">{</span> <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;birthday&quot;</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;Fri, 26 Aug 2011 07:13:10 GMT&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token string-property property">&quot;getName&quot;</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token comment">// \u5C5E\u6027\u503C\u4E0D\u80FD\u4F7F\u7528\u51FD\u6570\u548C\u65E5\u671F\u5BF9\u8C61</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C<code>null</code>\u3001\u7A7A\u6570\u7EC4\u548C\u7A7A\u5BF9\u8C61\u90FD\u662F\u5408\u6CD5\u7684 JSON \u503C\u3002</p><h2 id="json-\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#json-\u5BF9\u8C61" aria-hidden="true">#</a> JSON \u5BF9\u8C61</h2><p><code>JSON</code>\u5BF9\u8C61\u662F JavaScript \u7684\u539F\u751F\u5BF9\u8C61\uFF0C\u7528\u6765\u5904\u7406 JSON \u683C\u5F0F\u6570\u636E\u3002\u5B83\u6709\u4E24\u4E2A\u9759\u6001\u65B9\u6CD5\uFF1A<code>JSON.stringify()</code>\u548C<code>JSON.parse()</code>\u3002</p><h2 id="json-stringify" tabindex="-1"><a class="header-anchor" href="#json-stringify" aria-hidden="true">#</a> JSON.stringify()</h2><h3 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h3><p><code>JSON.stringify()</code>\u65B9\u6CD5\u7528\u4E8E\u5C06\u4E00\u4E2A\u503C\u8F6C\u4E3A JSON \u5B57\u7B26\u4E32\u3002\u8BE5\u5B57\u7B26\u4E32\u7B26\u5408 JSON \u683C\u5F0F\uFF0C\u5E76\u4E14\u53EF\u4EE5\u88AB<code>JSON.parse()</code>\u65B9\u6CD5\u8FD8\u539F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;&quot;abc&quot;&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// &quot;1&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// &quot;false&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// &quot;[]&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// &quot;{}&quot;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;false&quot;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;[1,&quot;false&quot;,false]&#39;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;\u5F20\u4E09&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;name&quot;:&quot;\u5F20\u4E09&quot;}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5C06\u5404\u79CD\u7C7B\u578B\u7684\u503C\uFF0C\u8F6C\u6210 JSON \u5B57\u7B26\u4E32\u3002</p><p>\u6CE8\u610F\uFF0C\u5BF9\u4E8E\u539F\u59CB\u7C7B\u578B\u7684\u5B57\u7B26\u4E32\uFF0C\u8F6C\u6362\u7ED3\u679C\u4F1A\u5E26\u53CC\u5F15\u53F7\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;foo&quot;</span> <span class="token comment">// false</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;\\&quot;foo\\&quot;&quot;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5B57\u7B26\u4E32<code>foo</code>\uFF0C\u88AB\u8F6C\u6210\u4E86<code>&quot;\\&quot;foo\\&quot;&quot;</code>\u3002\u8FD9\u662F\u56E0\u4E3A\u5C06\u6765\u8FD8\u539F\u7684\u65F6\u5019\uFF0C\u5185\u5C42\u53CC\u5F15\u53F7\u53EF\u4EE5\u8BA9 JavaScript \u5F15\u64CE\u77E5\u9053\uFF0C\u8FD9\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u800C\u4E0D\u662F\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token comment">// &quot;false&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;\\&quot;false\\&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5982\u679C\u4E0D\u662F\u5185\u5C42\u7684\u53CC\u5F15\u53F7\uFF0C\u5C06\u6765\u8FD8\u539F\u7684\u65F6\u5019\uFF0C\u5F15\u64CE\u5C31\u65E0\u6CD5\u77E5\u9053\u539F\u59CB\u503C\u662F\u5E03\u5C14\u503C\u8FD8\u662F\u5B57\u7B26\u4E32\u3002</p><p>\u5982\u679C\u5BF9\u8C61\u7684\u5C5E\u6027\u662F<code>undefined</code>\u3001\u51FD\u6570\u6216 XML \u5BF9\u8C61\uFF0C\u8BE5\u5C5E\u6027\u4F1A\u88AB<code>JSON.stringify()</code>\u8FC7\u6EE4\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token function-variable function">b</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// &quot;{}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61<code>obj</code>\u7684<code>a</code>\u5C5E\u6027\u662F<code>undefined</code>\uFF0C\u800C<code>b</code>\u5C5E\u6027\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u7ED3\u679C\u90FD\u88AB<code>JSON.stringify</code>\u8FC7\u6EE4\u3002</p><p>\u5982\u679C\u6570\u7EC4\u7684\u6210\u5458\u662F<code>undefined</code>\u3001\u51FD\u6570\u6216 XML \u5BF9\u8C61\uFF0C\u5219\u8FD9\u4E9B\u503C\u88AB\u8F6C\u6210<code>null</code>\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token comment">// &quot;[null,null]&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u6570\u7EC4<code>arr</code>\u7684\u6210\u5458\u662F<code>undefined</code>\u548C\u51FD\u6570\uFF0C\u5B83\u4EEC\u90FD\u88AB\u8F6C\u6210\u4E86<code>null</code>\u3002</p><p>\u6B63\u5219\u5BF9\u8C61\u4F1A\u88AB\u8F6C\u6210\u7A7A\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// &quot;{}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>JSON.stringify()</code>\u65B9\u6CD5\u4F1A\u5FFD\u7565\u5BF9\u8C61\u7684\u4E0D\u53EF\u904D\u5386\u7684\u5C5E\u6027\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;foo&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;bar&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token literal-property property">enumerable</span><span class="token operator">:</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &quot;{&quot;foo&quot;:1}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>bar</code>\u662F<code>obj</code>\u5BF9\u8C61\u7684\u4E0D\u53EF\u904D\u5386\u5C5E\u6027\uFF0C<code>JSON.stringify</code>\u65B9\u6CD5\u4F1A\u5FFD\u7565\u8FD9\u4E2A\u5C5E\u6027\u3002</p><h3 id="\u7B2C\u4E8C\u4E2A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E8C\u4E2A\u53C2\u6570" aria-hidden="true">#</a> \u7B2C\u4E8C\u4E2A\u53C2\u6570</h3><p><code>JSON.stringify()</code>\u65B9\u6CD5\u8FD8\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u6307\u5B9A\u53C2\u6570\u5BF9\u8C61\u7684\u54EA\u4E9B\u5C5E\u6027\u9700\u8981\u8F6C\u6210\u5B57\u7B26\u4E32\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;prop1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;value1&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;prop2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;value2&#39;</span><span class="token punctuation">,</span>
  <span class="token string-property property">&#39;prop3&#39;</span><span class="token operator">:</span> <span class="token string">&#39;value3&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> selectedProperties <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;prop1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;prop2&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> selectedProperties<span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;prop1&quot;:&quot;value1&quot;,&quot;prop2&quot;:&quot;value2&quot;}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>JSON.stringify()</code>\u65B9\u6CD5\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6307\u5B9A\uFF0C\u53EA\u8F6C<code>prop1</code>\u548C<code>prop2</code>\u4E24\u4E2A\u5C5E\u6027\u3002</p><p>\u8FD9\u4E2A\u7C7B\u4F3C\u767D\u540D\u5355\u7684\u6570\u7EC4\uFF0C\u53EA\u5BF9\u5BF9\u8C61\u7684\u5C5E\u6027\u6709\u6548\uFF0C\u5BF9\u6570\u7EC4\u65E0\u6548\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;[&quot;a&quot;,&quot;b&quot;]&quot;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;0&quot;:&quot;a&quot;}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u6307\u5B9A JSON \u683C\u5F0F\u53EA\u8F6C<code>0</code>\u53F7\u5C5E\u6027\uFF0C\u5B9E\u9645\u4E0A\u5BF9\u6570\u7EC4\u662F\u65E0\u6548\u7684\uFF0C\u53EA\u5BF9\u5BF9\u8C61\u6709\u6548\u3002</p><p>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8FD8\u53EF\u4EE5\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u66F4\u6539<code>JSON.stringify()</code>\u7684\u8FD4\u56DE\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    value <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;a&quot;: 2,&quot;b&quot;: 4}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\u7684<code>f</code>\u51FD\u6570\uFF0C\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u5206\u522B\u662F\u88AB\u8F6C\u6362\u7684\u5BF9\u8C61\u7684\u952E\u540D\u548C\u952E\u503C\u3002\u5982\u679C\u952E\u503C\u662F\u6570\u503C\uFF0C\u5C31\u5C06\u5B83\u4E58\u4EE5<code>2</code>\uFF0C\u5426\u5219\u5C31\u539F\u6837\u8FD4\u56DE\u3002</p><p>\u6CE8\u610F\uFF0C\u8FD9\u4E2A\u5904\u7406\u51FD\u6570\u662F\u9012\u5F52\u5904\u7406\u6240\u6709\u7684\u952E\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span><span class="token operator">+</span> key <span class="token operator">+</span><span class="token string">&quot;]:&quot;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">// []:[object Object]</span>
<span class="token comment">// [a]:[object Object]</span>
<span class="token comment">// [b]:1</span>
<span class="token comment">// &#39;{&quot;a&quot;:{&quot;b&quot;:1}}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u5BF9\u8C61<code>obj</code>\u4E00\u5171\u4F1A\u88AB<code>f</code>\u51FD\u6570\u5904\u7406\u4E09\u6B21\uFF0C\u8F93\u51FA\u7684\u6700\u540E\u90A3\u884C\u662F<code>JSON.stringify()</code>\u7684\u9ED8\u8BA4\u8F93\u51FA\u3002\u7B2C\u4E00\u6B21\u952E\u540D\u4E3A\u7A7A\uFF0C\u952E\u503C\u662F\u6574\u4E2A\u5BF9\u8C61<code>obj</code>\uFF1B\u7B2C\u4E8C\u6B21\u952E\u540D\u4E3A<code>a</code>\uFF0C\u952E\u503C\u662F<code>{b: 1}</code>\uFF1B\u7B2C\u4E09\u6B21\u952E\u540D\u4E3A<code>b</code>\uFF0C\u952E\u503C\u4E3A1\u3002</p><p>\u9012\u5F52\u5904\u7406\u4E2D\uFF0C\u6BCF\u4E00\u6B21\u5904\u7406\u7684\u5BF9\u8C61\uFF0C\u90FD\u662F\u524D\u4E00\u6B21\u8FD4\u56DE\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;b&quot;: 4}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>f</code>\u51FD\u6570\u4FEE\u6539\u4E86\u5BF9\u8C61<code>obj</code>\uFF0C\u63A5\u7740<code>JSON.stringify()</code>\u65B9\u6CD5\u5C31\u9012\u5F52\u5904\u7406\u4FEE\u6539\u540E\u7684\u5BF9\u8C61<code>obj</code>\u3002</p><p>\u5982\u679C\u5904\u7406\u51FD\u6570\u8FD4\u56DE<code>undefined</code>\u6216\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u5219\u8BE5\u5C5E\u6027\u4F1A\u88AB\u5FFD\u7565\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token number">123</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">// &#39;{&quot;b&quot;: 123}&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>a</code>\u5C5E\u6027\u7ECF\u8FC7\u5904\u7406\u540E\uFF0C\u8FD4\u56DE<code>undefined</code>\uFF0C\u4E8E\u662F\u8BE5\u5C5E\u6027\u88AB\u5FFD\u7565\u4E86\u3002</p><h3 id="\u7B2C\u4E09\u4E2A\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u7B2C\u4E09\u4E2A\u53C2\u6570" aria-hidden="true">#</a> \u7B2C\u4E09\u4E2A\u53C2\u6570</h3><p><code>JSON.stringify()</code>\u8FD8\u53EF\u4EE5\u63A5\u53D7\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u7528\u4E8E\u589E\u52A0\u8FD4\u56DE\u7684 JSON \u5B57\u7B26\u4E32\u7684\u53EF\u8BFB\u6027\u3002</p><p>\u9ED8\u8BA4\u8FD4\u56DE\u7684\u662F\u5355\u884C\u5B57\u7B26\u4E32\uFF0C\u5BF9\u4E8E\u5927\u578B\u7684 JSON \u5BF9\u8C61\uFF0C\u53EF\u8BFB\u6027\u975E\u5E38\u5DEE\u3002\u7B2C\u4E09\u4E2A\u53C2\u6570\u4F7F\u5F97\u6BCF\u4E2A\u5C5E\u6027\u5355\u72EC\u5360\u636E\u4E00\u884C\uFF0C\u5E76\u4E14\u5C06\u6BCF\u4E2A\u5C5E\u6027\u524D\u9762\u6DFB\u52A0\u6307\u5B9A\u7684\u524D\u7F00\uFF08\u4E0D\u8D85\u8FC710\u4E2A\u5B57\u7B26\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u9ED8\u8BA4\u8F93\u51FA</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">p1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">p2</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// JSON.stringify({ p1: 1, p2: 2 })</span>

<span class="token comment">// \u5206\u884C\u8F93\u51FA</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">p1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">p2</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&#39;\\t&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// {</span>
<span class="token comment">// 	&quot;p1&quot;: 1,</span>
<span class="token comment">// 	&quot;p2&quot;: 2</span>
<span class="token comment">// }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4F8B\u5B50\u4E2D\uFF0C\u7B2C\u4E09\u4E2A\u5C5E\u6027<code>\\t</code>\u5728\u6BCF\u4E2A\u5C5E\u6027\u524D\u9762\u6DFB\u52A0\u4E00\u4E2A\u5236\u8868\u7B26\uFF0C\u7136\u540E\u5206\u884C\u663E\u793A\u3002</p><p>\u7B2C\u4E09\u4E2A\u5C5E\u6027\u5982\u679C\u662F\u4E00\u4E2A\u6570\u5B57\uFF0C\u5219\u8868\u793A\u6BCF\u4E2A\u5C5E\u6027\u524D\u9762\u6DFB\u52A0\u7684\u7A7A\u683C\uFF08\u6700\u591A\u4E0D\u8D85\u8FC710\u4E2A\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">p1</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">p2</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">/*
&quot;{
  &quot;p1&quot;: 1,
  &quot;p2&quot;: 2
}&quot;
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u53C2\u6570\u5BF9\u8C61\u7684-tojson-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u5BF9\u8C61\u7684-tojson-\u65B9\u6CD5" aria-hidden="true">#</a> \u53C2\u6570\u5BF9\u8C61\u7684 toJSON() \u65B9\u6CD5</h3><p>\u5982\u679C\u53C2\u6570\u5BF9\u8C61\u6709\u81EA\u5B9A\u4E49\u7684<code>toJSON()</code>\u65B9\u6CD5\uFF0C\u90A3\u4E48<code>JSON.stringify()</code>\u4F1A\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u53C2\u6570\uFF0C\u800C\u5FFD\u7565\u539F\u5BF9\u8C61\u7684\u5176\u4ED6\u5C5E\u6027\u3002</p><p>\u4E0B\u9762\u662F\u4E00\u4E2A\u666E\u901A\u7684\u5BF9\u8C61\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20&#39;</span><span class="token punctuation">,</span>

  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;firstName&quot;:&quot;\u4E09&quot;,&quot;lastName&quot;:&quot;\u5F20&quot;,&quot;fullName&quot;:&quot;\u5F20\u4E09&quot;}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u73B0\u5728\uFF0C\u4E3A\u8FD9\u4E2A\u5BF9\u8C61\u52A0\u4E0A<code>toJSON()</code>\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">firstName</span><span class="token operator">:</span> <span class="token string">&#39;\u4E09&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">lastName</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20&#39;</span><span class="token punctuation">,</span>

  <span class="token keyword">get</span> <span class="token function">fullName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token function-variable function">toJSON</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>lastName <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>firstName
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span>
<span class="token comment">// &quot;{&quot;name&quot;:&quot;\u5F20\u4E09&quot;}&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>JSON.stringify()</code>\u53D1\u73B0\u53C2\u6570\u5BF9\u8C61\u6709<code>toJSON()</code>\u65B9\u6CD5\uFF0C\u5C31\u76F4\u63A5\u4F7F\u7528\u8FD9\u4E2A\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u53C2\u6570\uFF0C\u800C\u5FFD\u7565\u539F\u5BF9\u8C61\u7684\u5176\u4ED6\u53C2\u6570\u3002</p><p><code>Date</code>\u5BF9\u8C61\u5C31\u6709\u4E00\u4E2A\u81EA\u5DF1\u7684<code>toJSON()</code>\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2015-01-01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
date<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// &quot;2015-01-01T00:00:00.000Z&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span> <span class="token comment">// &quot;&quot;2015-01-01T00:00:00.000Z&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>JSON.stringify()</code>\u53D1\u73B0\u5904\u7406\u7684\u662F<code>Date</code>\u5BF9\u8C61\u5B9E\u4F8B\uFF0C\u5C31\u4F1A\u8C03\u7528\u8FD9\u4E2A\u5B9E\u4F8B\u5BF9\u8C61\u7684<code>toJSON()</code>\u65B9\u6CD5\uFF0C\u5C06\u8BE5\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u4F5C\u4E3A\u53C2\u6570\u3002</p><p><code>toJSON()</code>\u65B9\u6CD5\u7684\u4E00\u4E2A\u5E94\u7528\u662F\uFF0C\u5C06\u6B63\u5219\u5BF9\u8C61\u81EA\u52A8\u8F6C\u4E3A\u5B57\u7B26\u4E32\u3002\u56E0\u4E3A<code>JSON.stringify()</code>\u9ED8\u8BA4\u4E0D\u80FD\u8F6C\u6362\u6B63\u5219\u5BF9\u8C61\uFF0C\u4F46\u662F\u8BBE\u7F6E\u4E86<code>toJSON()</code>\u65B9\u6CD5\u4EE5\u540E\uFF0C\u5C31\u53EF\u4EE5\u8F6C\u6362\u6B63\u5219\u5BF9\u8C61\u4E86\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">reg</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo</span><span class="token regex-delimiter">/</span></span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u4E0D\u8BBE\u7F6E toJSON \u65B9\u6CD5\u65F6</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// &quot;{&quot;reg&quot;:{}}&quot;</span>

<span class="token comment">// \u8BBE\u7F6E toJSON \u65B9\u6CD5\u65F6</span>
<span class="token class-name">RegExp</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toJSON <span class="token operator">=</span> <span class="token class-name">RegExp</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>toString<span class="token punctuation">;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">foo</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token comment">// &quot;&quot;/foo/&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u5728\u6B63\u5219\u5BF9\u8C61\u7684\u539F\u578B\u4E0A\u9762\u90E8\u7F72\u4E86<code>toJSON()</code>\u65B9\u6CD5\uFF0C\u5C06\u5176\u6307\u5411<code>toString()</code>\u65B9\u6CD5\uFF0C\u56E0\u6B64\u8F6C\u6362\u6210 JSON \u683C\u5F0F\u65F6\uFF0C\u6B63\u5219\u5BF9\u8C61\u5C31\u5148\u8C03\u7528<code>toJSON()</code>\u65B9\u6CD5\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u518D\u88AB<code>JSON.stringify()</code>\u65B9\u6CD5\u5904\u7406\u3002</p><h2 id="json-parse" tabindex="-1"><a class="header-anchor" href="#json-parse" aria-hidden="true">#</a> JSON.parse()</h2><p><code>JSON.parse()</code>\u65B9\u6CD5\u7528\u4E8E\u5C06 JSON \u5B57\u7B26\u4E32\u8F6C\u6362\u6210\u5BF9\u5E94\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span> <span class="token comment">// {}</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;foo&quot;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;foo&quot;</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;[1, 5, &quot;false&quot;]&#39;</span><span class="token punctuation">)</span> <span class="token comment">// [1, 5, &quot;false&quot;]</span>
<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span> <span class="token comment">// null</span>

<span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;{&quot;name&quot;: &quot;\u5F20\u4E09&quot;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
o<span class="token punctuation">.</span>name <span class="token comment">// \u5F20\u4E09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4F20\u5165\u7684\u5B57\u7B26\u4E32\u4E0D\u662F\u6709\u6548\u7684 JSON \u683C\u5F0F\uFF0C<code>JSON.parse()</code>\u65B9\u6CD5\u5C06\u62A5\u9519\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;String&#39;&quot;</span><span class="token punctuation">)</span> <span class="token comment">// illegal single quotes</span>
<span class="token comment">// SyntaxError: Unexpected token ILLEGAL</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C\u53CC\u5F15\u53F7\u5B57\u7B26\u4E32\u4E2D\u662F\u4E00\u4E2A\u5355\u5F15\u53F7\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A\u5355\u5F15\u53F7\u5B57\u7B26\u4E32\u4E0D\u7B26\u5408 JSON \u683C\u5F0F\uFF0C\u6240\u4EE5\u62A5\u9519\u3002</p><p>\u4E3A\u4E86\u5904\u7406\u89E3\u6790\u9519\u8BEF\uFF0C\u53EF\u4EE5\u5C06<code>JSON.parse()</code>\u65B9\u6CD5\u653E\u5728<code>try...catch</code>\u4EE3\u7801\u5757\u4E2D\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;&#39;String&#39;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;parsing error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>JSON.parse()</code>\u65B9\u6CD5\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5904\u7406\u51FD\u6570\uFF0C\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u7528\u6CD5\u4E0E<code>JSON.stringify()</code>\u65B9\u6CD5\u7C7B\u4F3C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> value <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> value<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&#39;{&quot;a&quot;: 1, &quot;b&quot;: 2}&#39;</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment">// {a: 11, b: 2}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u9762\u4EE3\u7801\u4E2D\uFF0C<code>JSON.parse()</code>\u7684\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5982\u679C\u952E\u540D\u662F<code>a</code>\uFF0C\u8BE5\u51FD\u6570\u4F1A\u5C06\u952E\u503C\u52A0\u4E0A10\u3002</p><h2 id="\u53C2\u8003\u94FE\u63A5" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u94FE\u63A5" aria-hidden="true">#</a> \u53C2\u8003\u94FE\u63A5</h2>`,85),r=s("MDN, "),d={href:"https://developer.mozilla.org/en-US/docs/Using_native_JSON",target:"_blank",rel:"noopener noreferrer"},k=s("Using native JSON"),v=s("MDN, "),m={href:"https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"},b=s("JSON.parse"),g=s("Dr. Axel Rauschmayer, "),y={href:"http://www.2ality.com/2011/08/json-api.html",target:"_blank",rel:"noopener noreferrer"},f=s("JavaScript\u2019s JSON API"),q=s("Jim Cowart, "),N={href:"http://freshbrewedcode.com/jimcowart/2013/01/29/what-you-might-not-know-about-json-stringify/",target:"_blank",rel:"noopener noreferrer"},h=s("What You Might Not Know About JSON.stringify()"),S=s("Marco Rogers, "),j={href:"https://docs.nodejitsu.com/articles/javascript-conventions/what-is-json/",target:"_blank",rel:"noopener noreferrer"},J=s("What is JSON?");function O(w,x){const a=i("ExternalLinkIcon");return e(),o("div",null,[u,n("ul",null,[n("li",null,[r,n("a",d,[k,t(a)])]),n("li",null,[v,n("a",m,[b,t(a)])]),n("li",null,[g,n("a",y,[f,t(a)])]),n("li",null,[q,n("a",N,[h,t(a)])]),n("li",null,[S,n("a",j,[J,t(a)])])])])}var L=p(l,[["render",O],["__file","json.html.vue"]]);export{L as default};
