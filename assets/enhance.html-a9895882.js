const n=JSON.parse(`{"key":"v-79380c03","path":"/technology/ts_axios/chapter5/enhance.html","title":"错误信息增强","lang":"zh-CN","frontmatter":{"title":"错误信息增强","icon":"article","category":"typescript","article":false,"tag":["typescript"],"copyright":"Copyright by ustbhuangyi","description":"需求分析 上一节课我们已经捕获了几类 AJAX 的错误，但是对于错误信息提供的非常有限，我们希望对外提供的信息不仅仅包含错误文本信息，还包括了请求对象配置 config，错误代码 code，XMLHttpRequest 对象实例 request以及自定义响应对象 response。 axios({ method: 'get', url: '/error/timeout', timeout: 2000 }).then((res) =&gt; { console.log(res) }).catch((e: AxiosError) =&gt; { console.log(e.message) console.log(e.request) console.log(e.code) })","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/ts_axios/chapter5/enhance.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"错误信息增强"}],["meta",{"property":"og:description","content":"需求分析 上一节课我们已经捕获了几类 AJAX 的错误，但是对于错误信息提供的非常有限，我们希望对外提供的信息不仅仅包含错误文本信息，还包括了请求对象配置 config，错误代码 code，XMLHttpRequest 对象实例 request以及自定义响应对象 response。 axios({ method: 'get', url: '/error/timeout', timeout: 2000 }).then((res) =&gt; { console.log(res) }).catch((e: AxiosError) =&gt; { console.log(e.message) console.log(e.request) console.log(e.code) })"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"错误信息增强\\",\\"description\\":\\"需求分析 上一节课我们已经捕获了几类 AJAX 的错误，但是对于错误信息提供的非常有限，我们希望对外提供的信息不仅仅包含错误文本信息，还包括了请求对象配置 config，错误代码 code，XMLHttpRequest 对象实例 request以及自定义响应对象 response。 axios({ method: 'get', url: '/error/timeout', timeout: 2000 }).then((res) =&gt; { console.log(res) }).catch((e: AxiosError) =&gt; { console.log(e.message) console.log(e.request) console.log(e.code) })\\"}"]]},"headers":[{"level":2,"title":"需求分析","slug":"需求分析","link":"#需求分析","children":[]},{"level":2,"title":"创建 AxiosError 类","slug":"创建-axioserror-类","link":"#创建-axioserror-类","children":[]},{"level":2,"title":"createError 方法应用","slug":"createerror-方法应用","link":"#createerror-方法应用","children":[]},{"level":2,"title":"导出类型定义","slug":"导出类型定义","link":"#导出类型定义","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":2.37,"words":712},"filePathRelative":"technology/ts_axios/chapter5/enhance.md","localizedDate":"2023年1月11日","excerpt":"<h2> 需求分析</h2>\\n<p>上一节课我们已经捕获了几类 AJAX 的错误，但是对于错误信息提供的非常有限，我们希望对外提供的信息不仅仅包含错误文本信息，还包括了请求对象配置 <code>config</code>，错误代码 <code>code</code>，<code>XMLHttpRequest</code> 对象实例 <code>request</code>以及自定义响应对象 <code>response</code>。</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token function\\">axios</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  method<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'get'</span><span class=\\"token punctuation\\">,</span>\\n  url<span class=\\"token operator\\">:</span> <span class=\\"token string\\">'/error/timeout'</span><span class=\\"token punctuation\\">,</span>\\n  timeout<span class=\\"token operator\\">:</span> <span class=\\"token number\\">2000</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">then</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>res<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">catch</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token operator\\">:</span> AxiosError<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span>message<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span>request<span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token builtin\\">console</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>e<span class=\\"token punctuation\\">.</span>code<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
