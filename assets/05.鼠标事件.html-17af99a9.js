import{_ as t,Q as o,S as c,$ as l,a0 as a,a2 as n,a1 as p,a3 as e,E as i}from"./framework-e3ca42fb.js";const d={},u=e(`<h2 id="事件顺序" tabindex="-1"><a class="header-anchor" href="#事件顺序" aria-hidden="true">#</a> 事件顺序</h2><blockquote><p><code>mousedown</code> → <code>mouseup</code> → <code>click </code></p></blockquote><h2 id="鼠标按钮" tabindex="-1"><a class="header-anchor" href="#鼠标按钮" aria-hidden="true">#</a> 鼠标按钮</h2><blockquote><p>与点击相关的事件始终具有 <code>button</code> 属性，该属性允许获取确切的鼠标按钮</p></blockquote><table><thead><tr><th style="text-align:left;">鼠标按键状态</th><th style="text-align:left;"><code>event.button</code></th><th><code>event.which</code>（过时）</th></tr></thead><tbody><tr><td style="text-align:left;">左键 (主要按键)</td><td style="text-align:left;">0</td><td>1</td></tr><tr><td style="text-align:left;">中键 (辅助按键)</td><td style="text-align:left;">1</td><td>2</td></tr><tr><td style="text-align:left;">右键 (次要按键)</td><td style="text-align:left;">2</td><td>3</td></tr><tr><td style="text-align:left;">X1 键 (后退按键)</td><td style="text-align:left;">3</td><td></td></tr><tr><td style="text-align:left;">X2 键 (前进按键)</td><td style="text-align:left;">4</td><td></td></tr></tbody></table><h2 id="组合键" tabindex="-1"><a class="header-anchor" href="#组合键" aria-hidden="true">#</a> 组合键</h2><h3 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h3><blockquote><p>所有的鼠标事件都包含有关按下的组合键的信息</p></blockquote><ul><li><code>shiftKey</code>：Shift</li><li><code>altKey</code>：Alt（或对于 Mac 是 Opt）</li><li><code>ctrlKey</code>：Ctrl</li><li><code>metaKey</code>：对于 Mac 是 Cmd</li></ul><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 仅在 Alt+Shift+click 时生效 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Alt + Shift + Click on me!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  button<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>altKey <span class="token operator">&amp;&amp;</span> event<span class="token punctuation">.</span>shiftKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Alt+Shift+click&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意" aria-hidden="true">#</a> 注意</h3><ul><li><p>在 MacOS 上左键单击和 <code>Ctrl</code> 一起使用会被解释为 <strong>右键单击</strong>，并且会生成 <code>contextmenu</code> 事件，而不是像 Windows/Linux 中的 <code>click</code> 事件</p></li><li><p>在 Mac 上我们通常使用 <code>Cmd</code> 代替 <code>Ctrl</code></p></li></ul><h2 id="坐标" tabindex="-1"><a class="header-anchor" href="#坐标" aria-hidden="true">#</a> 坐标</h2><h3 id="pagex-y" tabindex="-1"><a class="header-anchor" href="#pagex-y" aria-hidden="true">#</a> pageX/Y</h3><blockquote><p>相对于文档的坐标，以文档的左上角为参照物，并且同一位置的坐标不随页面的滚动而改变</p></blockquote><h3 id="clientx-y" tabindex="-1"><a class="header-anchor" href="#clientx-y" aria-hidden="true">#</a> clientX/Y</h3><blockquote><p>相对于窗口的坐标，以当前窗口的左上角为参照物，并且同一位置的坐标会随着页面的滚动而改变</p></blockquote><h2 id="小技巧" tabindex="-1"><a class="header-anchor" href="#小技巧" aria-hidden="true">#</a> 小技巧</h2><h3 id="防止复制" tabindex="-1"><a class="header-anchor" href="#防止复制" aria-hidden="true">#</a> 防止复制</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">oncopy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>alert(&#39;禁止复制文本!&#39;);return false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello, world!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="网页禁止选中" tabindex="-1"><a class="header-anchor" href="#网页禁止选中" aria-hidden="true">#</a> 网页禁止选中</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">onselectstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>return false<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="防止双击选中文本" tabindex="-1"><a class="header-anchor" href="#防止双击选中文本" aria-hidden="true">#</a> 防止双击选中文本</h3><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span> <span class="token special-attr"><span class="token attr-name">ondblclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Click!&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token special-attr"><span class="token attr-name">onmousedown</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token keyword">return</span> <span class="token boolean">false</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
  Double-click me
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="取消原生拖拽" tabindex="-1"><a class="header-anchor" href="#取消原生拖拽" aria-hidden="true">#</a> 取消原生拖拽</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>elem<span class="token punctuation">.</span><span class="token function-variable function">ondragstart</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="获取被拖拽元素下方的元素" tabindex="-1"><a class="header-anchor" href="#获取被拖拽元素下方的元素" aria-hidden="true">#</a> 获取被拖拽元素下方的元素</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>elem<span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> elemBelow <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">elementFromPoint</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>clientX<span class="token punctuation">,</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">)</span><span class="token punctuation">;</span>
elem<span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="指针事件" tabindex="-1"><a class="header-anchor" href="#指针事件" aria-hidden="true">#</a> 指针事件</h2>`,29),r={href:"https://zh.javascript.info/pointer-events",target:"_blank",rel:"noopener noreferrer"},h=e('<h2 id="事件类型" tabindex="-1"><a class="header-anchor" href="#事件类型" aria-hidden="true">#</a> 事件类型</h2><h3 id="contextmenu" tabindex="-1"><a class="header-anchor" href="#contextmenu" aria-hidden="true">#</a> contextmenu</h3><blockquote><p>在鼠标右键被按下时触发</p><p>还有其他打开上下文菜单的方式，例如使用特殊的键盘按键，在这种情况下它也会被触发，因此它并不完全是鼠标事件</p></blockquote><h3 id="mousedown" tabindex="-1"><a class="header-anchor" href="#mousedown" aria-hidden="true">#</a> mousedown</h3><blockquote><p>在元素上按下鼠标按钮时触发</p></blockquote><h3 id="mouseup" tabindex="-1"><a class="header-anchor" href="#mouseup" aria-hidden="true">#</a> mouseup</h3><blockquote><p>在元素上松开鼠标按钮时触发</p></blockquote><h3 id="click" tabindex="-1"><a class="header-anchor" href="#click" aria-hidden="true">#</a> click</h3><blockquote><p>如果使用的是鼠标左键，则在同一个元素上的 <code>mousedown</code> 及 <code>mouseup</code> 相继触发后，触发该事件。</p></blockquote><h3 id="dbclick" tabindex="-1"><a class="header-anchor" href="#dbclick" aria-hidden="true">#</a> dbclick</h3><blockquote><p>在短时间内双击同一元素后触发</p></blockquote><h3 id="mouseover" tabindex="-1"><a class="header-anchor" href="#mouseover" aria-hidden="true">#</a> mouseover</h3><blockquote><p>鼠标指针移入元素时触发</p><p><code>relatedTarget</code> 属性可以为 <code>null</code>，意味着鼠标不是来自另一个元素，而是来自窗口之外</p></blockquote><ul><li><code>event.target</code>：鼠标移入的元素</li><li><code>event.relatedTarget</code>：是鼠标来自的那个元素（<code>relatedTarget</code> → <code>target</code>）。</li></ul><h3 id="mouseout" tabindex="-1"><a class="header-anchor" href="#mouseout" aria-hidden="true">#</a> mouseout</h3><blockquote><p>鼠标指针移出元素时触发</p><p><code>relatedTarget</code> 属性可以为 <code>null</code>，意味着鼠标不是来自另一个元素，而是来自窗口之外</p><p>如果鼠标移动到另一个元素（甚至是一个<strong>后代元素</strong>），那么它将离开前一个元素（父元素）</p></blockquote><ul><li><code>event.target</code>：鼠标离开的元素。</li><li><code>event.relatedTarget</code>：是鼠标移动到的，当前指针位置下的元素（<code>target</code> → <code>relatedTarget</code>）。</li></ul><h3 id="mousemove" tabindex="-1"><a class="header-anchor" href="#mousemove" aria-hidden="true">#</a> mousemove</h3><blockquote><p>在元素上移动鼠标时触发</p><p>如果访问者非常快地移动鼠标，某些 DOM 元素就可能被跳过</p></blockquote><h3 id="mouseenter-mouseleave" tabindex="-1"><a class="header-anchor" href="#mouseenter-mouseleave" aria-hidden="true">#</a> mouseenter/mouseleave</h3><ul><li>在鼠标指针进入/离开元素时触发</li><li>元素内部与后代之间的转换不会产生影响</li><li>不会冒泡</li></ul>',21);function k(m,v){const s=i("ExternalLinkIcon");return o(),c("div",null,[l(" more "),u,a("blockquote",null,[a("p",null,[n("适用于触摸设备"),a("a",r,[n("【相关说明】"),p(s)])])]),h])}const g=t(d,[["render",k],["__file","05.鼠标事件.html.vue"]]);export{g as default};
