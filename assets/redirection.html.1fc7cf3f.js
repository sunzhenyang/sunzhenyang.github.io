import{_ as s,o as n,c as e,e as a}from"./app.20c50cc3.js";const i={},t=a(`<p>\u91CD\u5B9A\u5411\u6307\u7684\u662F\u5C06\u547D\u4EE4\u884C\u8F93\u51FA\u5199\u5165\u6307\u5B9A\u4F4D\u7F6E\u3002</p><ul><li><code>cmd1 | cmd2</code>\uFF1APipe; take standard output of cmd1 as standard input to cmd2.</li><li><code>&gt; file</code>\uFF1ADirect standard output to file.</li><li><code>&lt; file</code>\uFF1ATake standard input from file.</li><li><code>&gt;&gt; file</code>\uFF1ADirect standard output to file; append to file if it already exists.</li><li><code>&gt;| file</code>\uFF1AForce standard output to file even if noclobber is set.</li><li><code>n&gt;| file</code>\uFF1AForce output to file from file descriptor n even if noclobber is set.</li><li><code>&lt;&gt; file</code>\uFF1AUse file as both standard input and standard output.</li><li><code>n&lt;&gt; file</code>\uFF1AUse file as both input and output for file descriptor n.</li><li><code>&lt;&lt; label</code>\uFF1AHere-document; see text.</li><li><code>n &gt; file</code>\uFF1ADirect file descriptor n to file.</li><li><code>n &lt; file</code>\uFF1ATake file descriptor n from file.</li><li><code>n &gt;&gt; file</code>\uFF1ADirect file descriptor n to file; append to file if it already exists.</li><li><code>n&gt;&amp;</code>\uFF1ADuplicate standard output to file descriptor n.</li><li><code>n&lt;&amp;</code>\uFF1ADuplicate standard input from file descriptor n.</li><li><code>n&gt;&amp;m</code>\uFF1AFile descriptor \xA0n is made to be a copy of the output file descriptor.</li><li><code>n&lt;&amp;m</code>\uFF1AFile descriptor \xA0n is made to be a copy of the input file descriptor.</li><li><code>&amp;&gt;file</code>\uFF1ADirects standard output and standard error to file.</li><li><code>&lt;&amp;-</code>\uFF1AClose the standard input.</li><li><code>&gt;&amp;-</code>\uFF1AClose the standard output.</li><li><code>n&gt;&amp;-</code>\uFF1AClose the output from file descriptor \xA0n.</li><li><code>n&lt;&amp;-</code>\uFF1AClose the input from file descriptor \xA0n.</li><li><code>n&gt;&amp;word</code>\uFF1AIf \xA0n is not specified, the standard output (file descriptor 1) is used. If the digits in word do not specify a file descriptor open for output, a redirection error occurs. As a special case, if n is omitted, and word does not expand to one or more digits, the standard output and standard error are redirected as described previously.</li><li><code>n&lt;&amp;word</code>\uFF1AIf word expands to one or more digits, the file descriptor denoted by \xA0n is made to be a copy of that file descriptor. If the digits in word do not specify a file descriptor open for input, a redirection error occurs. If word evaluates to -, file descriptor n is closed. If n is not specified, the standard input (file descriptor 0) is used.</li><li><code>n&gt;&amp;digit-</code>\uFF1AMoves the file descriptor digit to file descriptor \xA0n, or the standard output (file descriptor 1) if n is not specified.</li><li><code>n&lt;&amp;digit-</code>\uFF1AMoves the file descriptor digit to file descriptor \xA0n, or the standard input (file descriptor 0) if n is not specified. digit is closed after being duplicated to n.</li></ul><p><code>&gt;</code>\u7528\u6765\u5C06\u6807\u51C6\u8F93\u51FA\u91CD\u5B9A\u5411\u5230\u6307\u5B9A\u6587\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /usr/bin <span class="token operator">&gt;</span> ls-output.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u91CD\u5B9A\u5411\u540E\u7684\u6307\u5B9A\u6587\u4EF6\u5DF2\u7ECF\u5B58\u5728\uFF0C\u5C31\u4F1A\u88AB\u8986\u76D6\uFF0C\u4E0D\u4F1A\u6709\u4EFB\u4F55\u63D0\u793A\u3002</p><p>\u5982\u679C\u547D\u4EE4\u6CA1\u6709\u4EFB\u4F55\u8F93\u51FA\uFF0C\u90A3\u4E48\u91CD\u5B9A\u5411\u4E4B\u540E\uFF0C\u5F97\u5230\u7684\u662F\u4E00\u4E2A\u957F\u5EA6\u4E3A<code>0</code>\u7684\u6587\u4EF6\u3002\u56E0\u6B64\uFF0C<code>&gt;</code>\u5177\u6709\u521B\u5EFA\u65B0\u6587\u4EF6\u6216\u6539\u5199\u73B0\u5B58\u6587\u4EF6\u3001\u5C06\u5176\u6539\u4E3A\u957F\u5EA6<code>0</code>\u7684\u4F5C\u7528\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token operator">&gt;</span> ls-output.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>&gt;&gt;</code>\u7528\u6765\u5C06\u6807\u51C6\u8F93\u51FA\u91CD\u5B9A\u5411\u8FFD\u52A0\u5230\u6307\u5B9A\u6587\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /usr/bin <span class="token operator">&gt;&gt;</span> ls-output.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>2&gt;</code>\u7528\u6765\u5C06\u6807\u51C6\u9519\u8BEF\u91CD\u5B9A\u5411\u5230\u6307\u5B9A\u6587\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /bin/usr <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> ls-error.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6807\u51C6\u8F93\u51FA\u548C\u6807\u51C6\u9519\u8BEF\uFF0C\u53EF\u4EE5\u91CD\u5B9A\u5411\u5230\u540C\u4E00\u4E2A\u6587\u4EF6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /bin/usr <span class="token operator">&gt;</span> ls-output.txt <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span>
<span class="token comment"># \u6216\u8005</span>
$ <span class="token function">ls</span> -l /bin/usr <span class="token operator">&amp;&gt;</span> ls-output.txt

<span class="token comment"># \u8FFD\u52A0\u5230\u540C\u4E00\u4E2A\u6587\u4EF6</span>
$ <span class="token function">ls</span> -l /bin/usr <span class="token operator">&amp;&gt;&gt;</span> ls-output.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u5E0C\u671B\u8F93\u51FA\u9519\u8BEF\u4FE1\u606F\uFF0C\u53EF\u4EE5\u5C06\u5B83\u91CD\u5B9A\u5411\u5230\u4E00\u4E2A\u7279\u6B8A\u6587\u4EF6<code>/dev/null</code>\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /bin/usr <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span> /dev/null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>|</code>\u7528\u4E8E\u5C06\u4E00\u4E2A\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u51FA\uFF0C\u91CD\u5B9A\u5411\u5230\u53E6\u4E00\u4E2A\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u5165\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> -l /usr/bin <span class="token operator">|</span> <span class="token function">less</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0D\u8981\u5C06<code>&gt;</code>\u4E0E<code>|</code>\u6DF7\u6DC6\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> <span class="token operator">&gt;</span> <span class="token function">less</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u4E0A\u9762\u547D\u4EE4\u4F1A\u5728\u5F53\u524D\u76EE\u5F55\uFF0C\u751F\u6210\u4E00\u4E2A\u540D\u4E3A<code>less</code>\u7684\u6587\u672C\u6587\u4EF6\u3002</p><p>\u4E0B\u9762\u662F\u6807\u51C6\u9519\u8BEF\u91CD\u5B9A\u5411\u7684\u4E00\u4E2A\u4F8B\u5B50\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function-name function">invalid_input</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;Invalid input &#39;<span class="token environment constant">$REPLY</span>&#39;&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
<span class="token builtin class-name">read</span> -p <span class="token string">&quot;Enter a single item &gt; &quot;</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span> -z <span class="token environment constant">$REPLY</span> <span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> invalid_input
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tee" tabindex="-1"><a class="header-anchor" href="#tee" aria-hidden="true">#</a> tee</h2><p><code>tee</code>\u547D\u4EE4\u7528\u4E8E\u540C\u65F6\u5C06\u6807\u51C6\u8F93\u51FA\u91CD\u5B9A\u5411\u5230\u6587\u4EF6\uFF0C\u4EE5\u53CA\u53E6\u4E00\u4E2A\u547D\u4EE4\u7684\u6807\u51C6\u8F93\u5165\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">ls</span> /usr/bin <span class="token operator">|</span> <span class="token function">tee</span> ls.txt <span class="token operator">|</span> <span class="token function">grep</span> <span class="token function">zip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u547D\u4EE4\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#\u547D\u4EE4\u66FF\u6362" aria-hidden="true">#</a> \u547D\u4EE4\u66FF\u6362</h2><p>\u547D\u4EE4\u66FF\u6362\uFF08command substitution\uFF09\u6307\u7684\u662F\u5C06\u4E00\u4E2A\u547D\u4EE4\u7684\u8F93\u51FA\uFF0C\u66FF\u6362\u8FDB\u5165\u53E6\u4E00\u4E2A\u547D\u4EE4\u3002<code>$(command)</code>\u8868\u793A\u547D\u4EE4\u66FF\u6362\uFF0C\u53E6\u4E00\u79CD\u5199\u6CD5\u662F\u4F7F\u7528\u53CD\u5F15\u53F7\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span><span class="token variable">)</span></span>
<span class="token comment"># \u6216\u8005</span>
$ <span class="token builtin class-name">echo</span> <span class="token variable"><span class="token variable">\`</span><span class="token function">ls</span><span class="token variable">\`</span></span>

$ <span class="token function">ls</span> -l <span class="token variable"><span class="token variable">$(</span><span class="token function">which</span> <span class="token function">cp</span><span class="token variable">)</span></span>
<span class="token comment"># \u6216\u8005</span>
$ <span class="token function">ls</span> -l <span class="token variable"><span class="token variable">\`</span><span class="token function">which</span> <span class="token function">cp</span><span class="token variable">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basename" tabindex="-1"><a class="header-anchor" href="#basename" aria-hidden="true">#</a> basename</h2><p><code>basename</code>\u547D\u4EE4\u6E05\u9664 \u4E00\u4E2A\u8DEF\u5F84\u540D\u7684\u5F00\u5934\u90E8\u5206\uFF0C\u53EA\u7559\u4E0B\u4E00\u4E2A\u6587\u4EF6\u7684\u57FA\u672C\u540D\u79F0\u3002</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># file_info: simple file information program</span>
<span class="token assign-left variable">PROGNAME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">basename</span> $0<span class="token variable">)</span></span>
<span class="token keyword">if</span> <span class="token punctuation">[</span><span class="token punctuation">[</span> -e <span class="token variable">$1</span> <span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> -e <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>File Type:&quot;</span>
    <span class="token function">file</span> <span class="token variable">$1</span>
    <span class="token builtin class-name">echo</span> -e <span class="token string">&quot;<span class="token entity" title="\\n">\\n</span>File Status:&quot;</span>
    <span class="token function">stat</span> <span class="token variable">$1</span>
<span class="token keyword">else</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$PROGNAME</span>: usage: <span class="token variable">$PROGNAME</span> file&quot;</span> <span class="token operator">&gt;</span><span class="token file-descriptor important">&amp;2</span>
    <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,31),l=[t];function o(c,p){return n(),e("div",null,l)}var r=s(i,[["render",o],["__file","redirection.html.vue"]]);export{r as default};
