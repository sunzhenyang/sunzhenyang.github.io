const e=JSON.parse(`{"key":"v-3bb0a964","path":"/technology/webapi/webcomponents.html","title":"Web Components","lang":"zh-CN","frontmatter":{"title":"Web Components","icon":"article","category":["Web API"],"article":false,"tag":["Web API"],"copyright":"Copyright by 阮一峰","description":"概述 各种网站往往需要一些相同的模块，比如日历、调色板等等，这种模块就被称为“组件”（component）。Web Components 就是浏览器原生的组件规范。 采用组件开发，有很多优点。 （1）有利于代码复用。组件是模块化编程思想的体现，可以跨平台、跨框架使用，构建、部署和与其他 UI 元素互动都有统一做法。 （2）使用非常容易。加载或卸载组件，只要添加或删除一行代码就可以了。 （3）开发和定制很方便。组件开发不需要使用框架，只要用原生的语法就可以了。开发好的组件往往留出接口，供使用者设置常见属性，比如上面代码的heading属性，就是用来设置对话框的标题。","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/webapi/webcomponents.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"Web Components"}],["meta",{"property":"og:description","content":"概述 各种网站往往需要一些相同的模块，比如日历、调色板等等，这种模块就被称为“组件”（component）。Web Components 就是浏览器原生的组件规范。 采用组件开发，有很多优点。 （1）有利于代码复用。组件是模块化编程思想的体现，可以跨平台、跨框架使用，构建、部署和与其他 UI 元素互动都有统一做法。 （2）使用非常容易。加载或卸载组件，只要添加或删除一行代码就可以了。 （3）开发和定制很方便。组件开发不需要使用框架，只要用原生的语法就可以了。开发好的组件往往留出接口，供使用者设置常见属性，比如上面代码的heading属性，就是用来设置对话框的标题。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"Web API"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"Web Components\\",\\"description\\":\\"概述 各种网站往往需要一些相同的模块，比如日历、调色板等等，这种模块就被称为“组件”（component）。Web Components 就是浏览器原生的组件规范。 采用组件开发，有很多优点。 （1）有利于代码复用。组件是模块化编程思想的体现，可以跨平台、跨框架使用，构建、部署和与其他 UI 元素互动都有统一做法。 （2）使用非常容易。加载或卸载组件，只要添加或删除一行代码就可以了。 （3）开发和定制很方便。组件开发不需要使用框架，只要用原生的语法就可以了。开发好的组件往往留出接口，供使用者设置常见属性，比如上面代码的heading属性，就是用来设置对话框的标题。\\"}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"Custom Element","slug":"custom-element","link":"#custom-element","children":[{"level":3,"title":"简介","slug":"简介","link":"#简介","children":[]},{"level":3,"title":"生命周期方法","slug":"生命周期方法","link":"#生命周期方法","children":[]},{"level":3,"title":"自定义属性和方法","slug":"自定义属性和方法","link":"#自定义属性和方法","children":[]},{"level":3,"title":"window.customElements.whenDefined()","slug":"window-customelements-whendefined","link":"#window-customelements-whendefined","children":[]},{"level":3,"title":"回调函数","slug":"回调函数","link":"#回调函数","children":[]},{"level":3,"title":"Custom Element 的子元素","slug":"custom-element-的子元素","link":"#custom-element-的子元素","children":[]}]},{"level":2,"title":"<template>标签","slug":"template-标签","link":"#template-标签","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"document.importNode()","slug":"document-importnode","link":"#document-importnode","children":[]}]},{"level":2,"title":"Shadow DOM","slug":"shadow-dom","link":"#shadow-dom","children":[]},{"level":2,"title":"HTML Import","slug":"html-import","link":"#html-import","children":[{"level":3,"title":"基本操作","slug":"基本操作","link":"#基本操作","children":[]},{"level":3,"title":"脚本的执行","slug":"脚本的执行","link":"#脚本的执行","children":[]},{"level":3,"title":"Web Component的封装","slug":"web-component的封装","link":"#web-component的封装","children":[]}]},{"level":2,"title":"Polymer.js","slug":"polymer-js","link":"#polymer-js","children":[{"level":3,"title":"直接使用的组件","slug":"直接使用的组件","link":"#直接使用的组件","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"自定义组件","slug":"自定义组件","link":"#自定义组件","children":[]},{"level":3,"title":"组件的使用方法","slug":"组件的使用方法","link":"#组件的使用方法","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":17.79,"words":5338},"filePathRelative":"technology/webapi/webcomponents.md","localizedDate":"2023年1月11日","excerpt":"<h2> 概述</h2>\\n<p>各种网站往往需要一些相同的模块，比如日历、调色板等等，这种模块就被称为“组件”（component）。Web Components 就是浏览器原生的组件规范。</p>\\n<p>采用组件开发，有很多优点。</p>\\n<p>（1）有利于代码复用。组件是模块化编程思想的体现，可以跨平台、跨框架使用，构建、部署和与其他 UI 元素互动都有统一做法。</p>\\n<p>（2）使用非常容易。加载或卸载组件，只要添加或删除一行代码就可以了。</p>\\n<p>（3）开发和定制很方便。组件开发不需要使用框架，只要用原生的语法就可以了。开发好的组件往往留出接口，供使用者设置常见属性，比如上面代码的<code>heading</code>属性，就是用来设置对话框的标题。</p>","autoDesc":true}`);export{e as data};
