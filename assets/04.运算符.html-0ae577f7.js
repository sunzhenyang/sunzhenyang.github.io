import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as t,c as d,a as c,f as o}from"./app-e1714ab0.js";const l={},r=o('<ul><li>表达式由运算符和操作数组成</li><li>按操作数个数运算符可分为：单目运算符、双目运算符、三目运算符</li></ul><h2 id="分类" tabindex="-1"><a class="header-anchor" href="#分类" aria-hidden="true">#</a> 分类</h2><ul><li>算术运算符：<code>+</code> <code>-</code> <code>*</code> <code>/</code> <code>%</code>（取余） <code>++</code>（自增） <code>--</code>（自减） <ul><li>除法运算时，当分子分母都是整型时，结果为整除后的结果（舍弃小数点后的）。如果需要保留小数点后的内容，则需要分子或分母必须有一个为浮点型</li></ul></li><li>赋值运算符：<code>=</code><ul><li>复合赋值运算符：<code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code>，不会改变变量本身的数据类型</li></ul></li><li>关系运算符：<code>&gt;</code> <code>&lt;</code> <code>&gt;=</code> <code>&lt;=</code> <code>==</code> <code>!=</code><ul><li>比较结果是一个布尔值 <ul><li>数值型之间都可以相互比较，<strong>浮点数与整数进行比较，只要值相等就返回 <code>true</code></strong></li><li>整型和字符型之间可以比较，是将整型与字符型的编码值进行比较</li><li>字符串不可以和整型、浮点型、字符型进行比较</li><li>布尔型不能和其他任何数据类型进行比较</li></ul></li></ul></li><li>逻辑运算符：<code>&amp;</code> <code>|</code> <code>!</code> <code>&amp;&amp;</code> <code>||</code><ul><li><code>&amp;&amp;</code> 和 <code>||</code> 也称作短路运算符，如果第一个表达式的值就能决定表达式最后的结果，运算符右边的表达式就不再进行计算</li></ul></li><li>条件运算符：<code>布尔表达式 ? 表达式1 : 表达式2</code>（三目运算符）</li><li>位运算符</li></ul><h2 id="优先级" tabindex="-1"><a class="header-anchor" href="#优先级" aria-hidden="true">#</a> 优先级</h2><blockquote><p>从上到下，优先级 <strong>依次降低</strong></p></blockquote><table><thead><tr><th style="text-align:center;">运算符</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>()</code></td><td style="text-align:center;">圆括号</td></tr><tr><td style="text-align:center;"><code>!</code> <code>++</code> <code>--</code></td><td style="text-align:center;">逻辑非、自增、自减</td></tr><tr><td style="text-align:center;"><code>*</code> <code>/</code> <code>%</code></td><td style="text-align:center;">乘法、除法、取余</td></tr><tr><td style="text-align:center;"><code>+</code> <code>-</code></td><td style="text-align:center;">加法、减法</td></tr><tr><td style="text-align:center;"><code>&lt;</code> <code>&lt;=</code> <code>&gt;</code> <code>&gt;=</code></td><td style="text-align:center;">小于、小于等于、大于、大于等于</td></tr><tr><td style="text-align:center;"><code>==</code> <code>!=</code></td><td style="text-align:center;">等于、不等于</td></tr><tr><td style="text-align:center;"><code>&amp;&amp;</code></td><td style="text-align:center;">逻辑与</td></tr><tr><td style="text-align:center;"><code>||</code></td><td style="text-align:center;">逻辑或</td></tr><tr><td style="text-align:center;"><code>=</code> <code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code> <code>%=</code></td><td style="text-align:center;">赋值运算符、复合赋值运算符</td></tr></tbody></table>',6);function i(n,a){return t(),d("div",null,[c(" more "),r])}const x=e(l,[["render",i],["__file","04.运算符.html.vue"]]);export{x as default};
