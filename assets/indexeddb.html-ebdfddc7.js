const e=JSON.parse(`{"key":"v-5db94551","path":"/technology/javascript/bom/indexeddb.html","title":"IndexedDB API","lang":"zh-CN","frontmatter":{"title":"IndexedDB API","icon":"article","category":"javascript","article":false,"tag":["javascript"],"copyright":"Copyright by 阮一峰","description":"概述 随着浏览器的功能不断增强，越来越多的网站开始考虑，将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。 现有的浏览器数据储存方案，都不适合储存大量数据：Cookie 的大小不超过 4KB，且每次请求都会发送回服务器；LocalStorage 在 2.5MB 到 10MB 之间（各家浏览器不同），而且不提供搜索功能，不能建立自定义的索引。所以，需要一种新的解决方案，这就是 IndexedDB 诞生的背景。 通俗地说，IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/javascript/bom/indexeddb.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"IndexedDB API"}],["meta",{"property":"og:description","content":"概述 随着浏览器的功能不断增强，越来越多的网站开始考虑，将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。 现有的浏览器数据储存方案，都不适合储存大量数据：Cookie 的大小不超过 4KB，且每次请求都会发送回服务器；LocalStorage 在 2.5MB 到 10MB 之间（各家浏览器不同），而且不提供搜索功能，不能建立自定义的索引。所以，需要一种新的解决方案，这就是 IndexedDB 诞生的背景。 通俗地说，IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"javascript"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"IndexedDB API\\",\\"description\\":\\"概述 随着浏览器的功能不断增强，越来越多的网站开始考虑，将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。 现有的浏览器数据储存方案，都不适合储存大量数据：Cookie 的大小不超过 4KB，且每次请求都会发送回服务器；LocalStorage 在 2.5MB 到 10MB 之间（各家浏览器不同），而且不提供搜索功能，不能建立自定义的索引。所以，需要一种新的解决方案，这就是 IndexedDB 诞生的背景。 通俗地说，IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。\\"}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"操作流程","slug":"操作流程","link":"#操作流程","children":[{"level":3,"title":"打开数据库","slug":"打开数据库","link":"#打开数据库","children":[]},{"level":3,"title":"新建数据库","slug":"新建数据库","link":"#新建数据库","children":[]},{"level":3,"title":"新增数据","slug":"新增数据","link":"#新增数据","children":[]},{"level":3,"title":"读取数据","slug":"读取数据","link":"#读取数据","children":[]},{"level":3,"title":"遍历数据","slug":"遍历数据","link":"#遍历数据","children":[]},{"level":3,"title":"更新数据","slug":"更新数据","link":"#更新数据","children":[]},{"level":3,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[]},{"level":3,"title":"使用索引","slug":"使用索引","link":"#使用索引","children":[]}]},{"level":2,"title":"indexedDB 对象","slug":"indexeddb-对象","link":"#indexeddb-对象","children":[{"level":3,"title":"indexedDB.open()","slug":"indexeddb-open","link":"#indexeddb-open","children":[]},{"level":3,"title":"indexedDB.deleteDatabase()","slug":"indexeddb-deletedatabase","link":"#indexeddb-deletedatabase","children":[]},{"level":3,"title":"indexedDB.cmp()","slug":"indexeddb-cmp","link":"#indexeddb-cmp","children":[]}]},{"level":2,"title":"IDBRequest 对象","slug":"idbrequest-对象","link":"#idbrequest-对象","children":[]},{"level":2,"title":"IDBDatabase 对象","slug":"idbdatabase-对象","link":"#idbdatabase-对象","children":[{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"IDBObjectStore 对象","slug":"idbobjectstore-对象","link":"#idbobjectstore-对象","children":[{"level":3,"title":"属性","slug":"属性-1","link":"#属性-1","children":[]},{"level":3,"title":"方法","slug":"方法-1","link":"#方法-1","children":[]}]},{"level":2,"title":"IDBTransaction 对象","slug":"idbtransaction-对象","link":"#idbtransaction-对象","children":[]},{"level":2,"title":"IDBIndex 对象","slug":"idbindex-对象","link":"#idbindex-对象","children":[]},{"level":2,"title":"IDBCursor 对象","slug":"idbcursor-对象","link":"#idbcursor-对象","children":[]},{"level":2,"title":"IDBKeyRange 对象","slug":"idbkeyrange-对象","link":"#idbkeyrange-对象","children":[]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":26.23,"words":7868},"filePathRelative":"technology/javascript/bom/indexeddb.md","localizedDate":"2023年1月11日","excerpt":"<h2> 概述</h2>\\n<p>随着浏览器的功能不断增强，越来越多的网站开始考虑，将大量数据储存在客户端，这样可以减少从服务器获取数据，直接从本地获取数据。</p>\\n<p>现有的浏览器数据储存方案，都不适合储存大量数据：Cookie 的大小不超过 4KB，且每次请求都会发送回服务器；LocalStorage 在 2.5MB 到 10MB 之间（各家浏览器不同），而且不提供搜索功能，不能建立自定义的索引。所以，需要一种新的解决方案，这就是 IndexedDB 诞生的背景。</p>\\n<p>通俗地说，IndexedDB 就是浏览器提供的本地数据库，它可以被网页脚本创建和操作。IndexedDB 允许储存大量数据，提供查找接口，还能建立索引。这些都是 LocalStorage 所不具备的。就数据库类型而言，IndexedDB 不属于关系型数据库（不支持 SQL 查询语句），更接近 NoSQL 数据库。</p>","autoDesc":true}`);export{e as data};
