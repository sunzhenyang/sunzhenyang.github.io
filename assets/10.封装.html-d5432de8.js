import{_ as e,P as i,Q as l,Z as a,a2 as t}from"./framework-f3782457.js";const r={},o=t('<h4 id="封装" tabindex="-1"><a class="header-anchor" href="#封装" aria-hidden="true">#</a> 封装</h4><blockquote><p>将类的某些信息隐藏在类内部，不允许外部程序直接访问</p></blockquote><ul><li>通过该类提供的方法来实现对隐藏信息的操作和访问</li><li>隐藏对象的信息</li><li>留出访问的接口</li></ul><h5 id="特点" tabindex="-1"><a class="header-anchor" href="#特点" aria-hidden="true">#</a> 特点</h5><ul><li>只能通过规定的方法访问数据</li><li>隐藏类的实例细节，方便修改和实现</li></ul><h5 id="实现步骤" tabindex="-1"><a class="header-anchor" href="#实现步骤" aria-hidden="true">#</a> 实现步骤</h5><ol><li>修改属性的可见性（访问修饰符） <ul><li><code>private</code>：私有的，只允许在本类中进行访问</li><li><code>protected</code>：受保护的， 允许在本类、同包子类/同包非子类、跨包子类进行访问，跨包非子类不允许</li><li><code>public</code>：共有的，允许在任意位置访问</li><li>默认：允许在当前类、同包子类/同包非子类访问，跨包子类/跨包非子类不允许访问</li></ul></li></ol><figure><img src="https://cdn.jsdelivr.net/gh/sunzhenyang/blog-img/img/image-20210125172702405.png" alt="image-20210125172702405" tabindex="0" loading="lazy"><figcaption>image-20210125172702405</figcaption></figure><ol start="2"><li><p>创建 getter/setter 方法（设为 public 用于属性的读写）</p></li><li><p>在 getter/setter 方法中加入属性控制语句（对属性值的合法性进行判断）</p></li></ol>',9);function c(d,n){return i(),l("div",null,[a(" more "),o])}const h=e(r,[["render",c],["__file","10.封装.html.vue"]]);export{h as default};
