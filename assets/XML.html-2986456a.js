import{_ as t,P as e,Q as p,Z as o,$ as n,a1 as s,a0 as l,a2 as c,G as i}from"./framework-7099b8bf.js";const u={},d={href:"https://imooc.com",target:"_blank",rel:"noopener noreferrer"},k=c(`<h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><blockquote><p>XML 全称：E<strong>X</strong>tensible <strong>M</strong>arkup <strong>L</strong>anguage，可扩展标记语言</p></blockquote><ul><li>编写 XML 就是编写 标签，与 HTML 非常类似，<code>***.xml</code></li><li>有良好的人机可读性</li><li>XML 没有预定义标签，HTML 存在大量预定义标签</li><li>XML 重在保存与传输数据，HTML 用于显示信息</li></ul><h2 id="用途" tabindex="-1"><a class="header-anchor" href="#用途" aria-hidden="true">#</a> 用途</h2><ul><li><p>Java 程序的配置描述文件</p></li><li><p>用于保存程序产生的数据</p></li><li><p>网络间的数据传输</p></li></ul><h2 id="文档结构" tabindex="-1"><a class="header-anchor" href="#文档结构" aria-hidden="true">#</a> 文档结构</h2><ul><li><p>第一行必须是 XML 声明 <code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</code></p><ul><li><code>version</code>：版本号 <ul><li><code>1.0</code>：初始版本</li><li><code>1.1</code>：在初始版本上进行细节上的修改与升级</li></ul></li><li><code>encoding</code>：设置字符集</li></ul></li><li><p>有且只有一个根节点</p></li><li><p>XML 标签的书写规则与 HTML 相同</p></li></ul><h2 id="书写规则" tabindex="-1"><a class="header-anchor" href="#书写规则" aria-hidden="true">#</a> 书写规则</h2><blockquote><p>合法的标签名</p></blockquote><ul><li>标签名要有意义</li><li>建议使用英文，小写字母，单词之间用 <code>-</code> 分割</li><li>多级标签之间不要存在重名的情况</li></ul><blockquote><p>适当的注释与缩进</p></blockquote><ul><li>提高文档可读性</li></ul><blockquote><p>合理使用属性</p></blockquote><ul><li>常用与描述标签不可或缺的信息</li><li>对标签分组或者为标签设置 ID 时常用属性表示</li></ul><blockquote><p>特殊字符与 CDATA 标签</p></blockquote><ul><li>标签体中，出现 <code>&lt;</code>、<code>&gt;</code> 特殊字符，会破坏文档结构</li></ul><p><strong>解决方案 1：使用实体引用</strong>：适用于特殊符号比较少的情况</p><table><thead><tr><th>符号</th><th>说明</th><th>实体引用</th></tr></thead><tbody><tr><td><code>&lt;</code></td><td>小于</td><td><code>&amp;lt;</code></td></tr><tr><td><code>&gt;</code></td><td>大于</td><td><code>&amp;gt;</code></td></tr><tr><td><code>&amp;</code></td><td>和号</td><td><code>&amp;amp;</code></td></tr><tr><td><code>&#39;</code></td><td>单引号</td><td><code>&amp;apos;</code></td></tr><tr><td><code>&quot;</code></td><td>双引号</td><td><code>&amp;quot;</code></td></tr></tbody></table><p><strong>解决方式 2：使用 CDATA 标签</strong></p><ul><li><p>用来表示不应由 XML 解析器进行解析的文本数据</p></li><li><p>语法：<code>&lt;![CDATA[ 文本 ]]&gt;</code></p></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lesson</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>content</span><span class="token punctuation">&gt;</span></span>
  	<span class="token cdata">&lt;![CDATA[
   		&lt;body&gt;
				&lt;a href=&quot;index.html&quot;&gt;首页&lt;/a&gt;
			&lt;/body&gt;
    ]]&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>content</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lesson</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>有序的子元素</p></blockquote><ul><li>在 XML 多层嵌套的子元素中，标签前后顺序应保持一致</li></ul><h2 id="语义约束" tabindex="-1"><a class="header-anchor" href="#语义约束" aria-hidden="true">#</a> 语义约束</h2><ul><li>XML 文档结构正确，但可能不是有效的</li><li>XML 予以约束就是用于规定 XML 文档中允许出现哪些元素</li></ul><h3 id="定义方式" tabindex="-1"><a class="header-anchor" href="#定义方式" aria-hidden="true">#</a> 定义方式</h3><h4 id="dtd" tabindex="-1"><a class="header-anchor" href="#dtd" aria-hidden="true">#</a> DTD</h4><ul><li><p>全称：Document Type Definition，文档类型定义</p></li><li><p>是一种简单易用的语义约束方式</p></li><li><p>以单独文件出现，扩展名：<code>***.dtd</code></p></li><li><p>用法</p><ul><li>使用 <code>&lt;!ELEMENT&gt;</code> 标签定义 XML 文档中允许出现的节点及数量</li><li>使用 <code>&lt;ATTLIST&gt;</code> 标签定义 XML 文档中允许出现的属性 <ul><li>书写格式：<code>&lt;!ATTLIST 元素名称 属性名称 属性类型 默认值&gt;</code></li></ul></li><li>如某个子节点需要多次重复出现，则需要在子节点后增加响应的描述符</li><li>在 XML 中使用 <code>&lt;!DOCTYPE&gt;</code> 标签来引用 DTD 文件 <ul><li>书写格式：<code>&lt;!DOCTYPE 根节点 SYSTEM &quot;dtd文件路径&quot;&gt;</code></li></ul></li></ul></li></ul><div class="language-xml-dtd line-numbers-mode" data-ext="xml-dtd"><pre class="language-xml-dtd"><code>&lt;!-- 定义 hr 节点下只允许出现 1 个 employee 子节点 --&gt;
&lt;!ELEMENT hr(employee)&gt;

&lt;!-- 定义 hr 节点下最少出现 1 个 employee 子节点 --&gt;
&lt;!ELEMENT hr(employee+)&gt;

&lt;!-- 定义 hr 节点下最多出现 1 个 employee 子节点 --&gt;
&lt;!ELEMENT hr(employee?)&gt;

&lt;!-- 定义 hr 节点下最少出现 0 个或多个 employee 子节点 --&gt;
&lt;!ELEMENT hr(employee*)&gt;



&lt;!-- employee 节点下必须包含以下四个节点，且按顺序出现 --&gt;
&lt;!ELEMENT employee(name,age,salary,department)&gt;

&lt;!-- employee 节点下需要有 no 属性，默认值为 &quot;&quot; --&gt;
&lt;!ATTLIST employee no CDATA &quot;&quot;&gt;

&lt;!-- 定义 name 标签体只能是文本，#PCDATA 代表文本元素 --&gt;
&lt;!ELEMENT name(#PCDATA)&gt;
...
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- hr.xml --&gt;</span>
<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">hr</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;hr.dtd&quot;</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3309<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>4000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>会计部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3310<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>3000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>工程部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hr</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml-dtd line-numbers-mode" data-ext="xml-dtd"><pre class="language-xml-dtd"><code>&lt;!-- hr.dtd --&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
&lt;!ELEMENT hr (employee+)&gt;
&lt;!ELEMENT employee (name,age,salary,department)&gt;
&lt;!ATTLIST employee no CDATA &quot;&quot;&gt;
&lt;!ELEMENT name (#PCDATA)&gt;
&lt;!ELEMENT age (#PCDATA)&gt;
&lt;!ELEMENT salary (#PCDATA)&gt;
&lt;!ELEMENT department (dname,address)&gt;
&lt;!ELEMENT dname (#PCDATA)&gt;
&lt;!ELEMENT address (#PCDATA)&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="xml-schema" tabindex="-1"><a class="header-anchor" href="#xml-schema" aria-hidden="true">#</a> XML Schema</h4><ul><li>比 DTD 更为复杂，提供了更多功能</li><li>提供了数据类型、格式限定、数据范围等特性</li><li>是 W3C 标准</li><li>文件后缀名：<code>***.xsd</code></li></ul><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
<span class="token attr-name"><span class="token namespace">xsi:</span>noNamespaceSchemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hr.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3309<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>4000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>会计部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3310<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>3000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>工程部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B104<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hr</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml-dtd line-numbers-mode" data-ext="xml-dtd"><pre class="language-xml-dtd"><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;schema xmlns=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;
	&lt;element name=&quot;hr&quot;&gt;
		&lt;!-- complexType标签含义是复杂节点，包含子节点时必须使用这个标签 --&gt;
		&lt;complexType&gt;
			&lt;sequence&gt;
				&lt;element name=&quot;employee&quot; minOccurs=&quot;1&quot; maxOccurs=&quot;9999&quot;&gt;
					&lt;complexType&gt;
						&lt;sequence&gt;
							&lt;element name=&quot;name&quot; type=&quot;string&quot;&gt;&lt;/element&gt;
							&lt;element name=&quot;age&quot;&gt;
								&lt;simpleType&gt;
									&lt;restriction base=&quot;integer&quot;&gt;
										&lt;minInclusive value=&quot;18&quot;&gt;&lt;/minInclusive&gt;
										&lt;maxInclusive value=&quot;60&quot;&gt;&lt;/maxInclusive&gt;
									&lt;/restriction&gt;
								&lt;/simpleType&gt;
							&lt;/element&gt;
							&lt;element name=&quot;salary&quot; type=&quot;integer&quot;&gt;&lt;/element&gt;
							&lt;element name=&quot;department&quot;&gt;
								&lt;complexType&gt;
									&lt;sequence&gt;
										&lt;element name=&quot;dname&quot; type=&quot;string&quot;&gt;&lt;/element&gt;
										&lt;element name=&quot;address&quot; type=&quot;string&quot;&gt;&lt;/element&gt;
									&lt;/sequence&gt;
								&lt;/complexType&gt;
							&lt;/element&gt;
						&lt;/sequence&gt;
						&lt;attribute name=&quot;no&quot; type=&quot;string&quot; use=&quot;required&quot;&gt;&lt;/attribute&gt;
					&lt;/complexType&gt;
				&lt;/element&gt;
			&lt;/sequence&gt;
		&lt;/complexType&gt;
	&lt;/element&gt;
&lt;/schema&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dom" tabindex="-1"><a class="header-anchor" href="#dom" aria-hidden="true">#</a> DOM</h2><blockquote><p>文档对象模型（Document Object Model），定义了访问和操作 XML 文档的标准方法，DOM 把 XML 文档当做树结构来查看，能够通过 DOM 树来读写所有元素</p></blockquote><h3 id="dom4j" tabindex="-1"><a class="header-anchor" href="#dom4j" aria-hidden="true">#</a> Dom4j</h3><blockquote><p>一个易用的、开源的库，用于解析 XML，应用于 Java 平台，具有性能优异、功能强大和极易使用的特点</p></blockquote><ul><li>将 <code>XML</code> 视为 <code>Document</code> 对象</li><li>XML <code>标签</code> 被 Dom4j 定义为 <code>Element</code> 对象</li></ul><h4 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a> 使用步骤</h4><ul><li>新建 <code>lib</code> 文件夹</li><li>将 Dom4j 拖入 lib 文件夹</li><li>右键 <code>Dom4j</code> 包，点击 <code>Build Path</code></li></ul><h5 id="读操作" tabindex="-1"><a class="header-anchor" href="#读操作" aria-hidden="true">#</a> 读操作</h5><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">hr</span> <span class="token name">SYSTEM</span> <span class="token string">&quot;hr.dtd&quot;</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3309<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>30<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>4000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>会计部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>employee</span> <span class="token attr-name">no</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3310<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>李四<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>salary</span><span class="token punctuation">&gt;</span></span>3000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>salary</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>department</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dname</span><span class="token punctuation">&gt;</span></span>工程部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dname</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>address</span><span class="token punctuation">&gt;</span></span>XX大厦-B103<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>address</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>department</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>employee</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hr</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Dom4j 读操作</span>
<span class="token comment">// HrReader.java</span>
<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>imooc<span class="token punctuation">.</span>dom4j</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">Attribute</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">DocumentException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">Element</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">SAXReader</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HrReader</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">readXml</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> file <span class="token operator">=</span> <span class="token string">&quot;/Users/sunzhenyang/eclipse-workspace/xml/src/hr.xml&quot;</span><span class="token punctuation">;</span>
		<span class="token comment">// SAXReader类 是读取 XML 文件的核心类，用于将 XML 解析后以 “树” 的形式保存在内存中</span>
		<span class="token class-name">SAXReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token class-name">Document</span> document <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// 获取 XML 文档的根节点，即 hr 标签</span>
			<span class="token class-name">Element</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token comment">// elements 方法用于获取指定的标签集合</span>
			<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Element</span><span class="token punctuation">&gt;</span></span> employees <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Element</span> employee <span class="token operator">:</span> employees<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">// element 方法用于获取唯一的子节点对象</span>
				<span class="token class-name">Element</span> name <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token comment">// getText 方法用于获取标签文本</span>
				<span class="token class-name">String</span> emName <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>emName<span class="token punctuation">)</span><span class="token punctuation">;</span>

				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>employee<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">Element</span> department <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">element</span><span class="token punctuation">(</span><span class="token string">&quot;department&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>department<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">&quot;dname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>department<span class="token punctuation">.</span><span class="token function">elementText</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">Attribute</span> attr <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string">&quot;no&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>attr<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">DocumentException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">HrReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HrReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		reader<span class="token punctuation">.</span><span class="token function">readXml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="写操作" tabindex="-1"><a class="header-anchor" href="#写操作" aria-hidden="true">#</a> 写操作</h5><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Dom4j 写操作</span>
<span class="token comment">// HrWriter.java.</span>
<span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>imooc<span class="token punctuation">.</span>dom4j</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">FileOutputStream</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">OutputStreamWriter</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Writer</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">DocumentException</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span></span><span class="token class-name">Element</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>dom4j<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">SAXReader</span></span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HrWriter</span> <span class="token punctuation">{</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">writeXml</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">String</span> file <span class="token operator">=</span> <span class="token string">&quot;/Users/sunzhenyang/eclipse-workspace/xml/src/hr.xml&quot;</span><span class="token punctuation">;</span>
		<span class="token class-name">SAXReader</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">try</span> <span class="token punctuation">{</span>
			<span class="token class-name">Document</span> document <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Element</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Element</span> employee <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;employee&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			employee<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;no&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;3311&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Element</span> name <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			name<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;李铁柱&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			employee<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;37&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			employee<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;salary&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;3600&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Element</span> department <span class="token operator">=</span> employee<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;department&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			department<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;dname&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;人事部&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			department<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span><span class="token string">&quot;address&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;XX大厦-B105&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token class-name">Writer</span> writer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OutputStreamWriter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>writer<span class="token punctuation">)</span><span class="token punctuation">;</span>
			writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// TODO Auto-generated catch block</span>
			e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

	<span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">HrWriter</span> hrWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HrWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		hrWriter<span class="token punctuation">.</span><span class="token function">writeXml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="xpath-路径表达式" tabindex="-1"><a class="header-anchor" href="#xpath-路径表达式" aria-hidden="true">#</a> XPath 路径表达式</h2><ul><li>是 XML 文档中查找数据的语言</li><li>可以极大提高在提取数据时的开发效率</li><li>学习 XPath 本质就是掌握各种形式表达式使用技巧</li></ul><h3 id="基本表达式" tabindex="-1"><a class="header-anchor" href="#基本表达式" aria-hidden="true">#</a> 基本表达式</h3><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td><code>nodename</code></td><td>选取子节点的所有子节点</td></tr><tr><td><code>/</code></td><td>从根节点选取</td></tr><tr><td><code>//</code></td><td>从匹配选择的当前节点选择文档中的节点，而不考虑他们的位置</td></tr><tr><td><code>.</code></td><td>选取当前节点</td></tr><tr><td><code>..</code></td><td>选取当前节点的父节点</td></tr><tr><td><code>@</code></td><td>选取属性</td></tr></tbody></table><h3 id="谓语表达式" tabindex="-1"><a class="header-anchor" href="#谓语表达式" aria-hidden="true">#</a> 谓语表达式</h3><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>/bookstore/book[1]</code></td><td>选取属于 bookstore 子元素的第一个 book 元素</td></tr><tr><td><code>/bookstore/book[last()]</code></td><td>选取属于 bookstore 子元素的最后一个 book 元素</td></tr><tr><td><code>/bookstore/book[last()-1]</code></td><td>选取属于 bookstore 子元素的倒数第二个 book 元素</td></tr><tr><td><code>/bookstore/book[position()&lt;3]</code></td><td>选取前两个属于 bookstore 元素的 book 子元素</td></tr><tr><td><code>//title[@lang]</code></td><td>选取所有拥有 lang 属性的 title 元素</td></tr><tr><td><code>//title[@lang=&#39;eng&#39;]</code></td><td>选取所有 lang 属性为 eng 的 title 元素</td></tr><tr><td><code>/bookstore/book[price&gt;35.00]</code></td><td>选取所有 bookstore 元素下的所有 price 元素值大于 35.00 的 book 元素</td></tr><tr><td><code>/bookstore/book[price&gt;35.00]/title</code></td><td>选取所有 bookstore 元素下所有 price 元素值大于 35.00 的 book 元素下的 title 元素</td></tr></tbody></table><h3 id="案例" tabindex="-1"><a class="header-anchor" href="#案例" aria-hidden="true">#</a> 案例</h3><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td><code>bookstore</code></td><td>选取 bookstore 元素的所有子节点</td></tr><tr><td><code>/bookstore</code></td><td>选取根元素 bookstore，加入路径起始于正斜杠(<code>/</code>)，则地路径始终代表到某元素的绝对路径</td></tr><tr><td><code>bookstore/book</code></td><td>选取属于 bookstore 的子元素中的所有 book 元素</td></tr><tr><td><code>//book</code></td><td>选取所有 book 子元素，而不管他们在文档中的位置</td></tr><tr><td><code>bookstore//book</code></td><td>选取属于 bookstore 元素的后代中的所有 book 元素，而不管他们位于 bookstore 之下的什么位置</td></tr><tr><td><code>//@lang</code></td><td>选取属性名为 lang 的所有元素</td></tr></tbody></table>`,55);function r(m,v){const a=i("ExternalLinkIcon");return e(),p("div",null,[o(" more "),n("blockquote",null,[n("p",null,[s("此文章根据 "),n("a",d,[s("慕课网"),l(a)]),s(" 视频课程总结，仅用于本人知识库记录")])]),k])}const b=t(u,[["render",r],["__file","XML.html.vue"]]);export{b as default};
