import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as a,o as n,c as s,a as c,b as e,d as t,e as l,f as i}from"./app-d18dfe82.js";const d={},h={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON",target:"_blank",rel:"noopener noreferrer"},_=i('<br><h2 id="描述" tabindex="-1"><a class="header-anchor" href="#描述" aria-hidden="true">#</a> 描述</h2><blockquote><p>JSON 是一种语法，用来序列化对象、数组、数值、字符串、布尔值和 null 。它基于 JavaScript 语法</p></blockquote><table><thead><tr><th>JavaScript类型</th><th>JSON 的不同点</th></tr></thead><tbody><tr><td>对象和数组</td><td>属性名称必须是双引号括起来的字符串；最后一个属性后不能有逗号</td></tr><tr><td>数值</td><td>禁止出现前导零（ JSON.stringify 方法自动忽略前导零，而在 JSON.parse 方法中将会抛出 SyntaxError）；如果有小数点, 则后面至少跟着一位数字</td></tr><tr><td>字符串</td><td>只有有限的一些字符可能会被转义；禁止某些控制字符</td></tr></tbody></table><br>',5),p={id:"json-parse",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#json-parse","aria-hidden":"true"},"#",-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",target:"_blank",rel:"noopener noreferrer"},u=i("<ul><li>描述：解析 JSON 字符串</li><li>语法：<code>JSON.parse(text[, reviver])</code></li><li>参数 <ul><li>text：要被解析成 JavaScript 值的字符串</li><li>reviver：转换器, 如果传入该参数(函数)，可以用来修改解析生成的原始值，调用时机在 parse 函数返回之前</li></ul></li><li>返回值：<code>Object</code> 类型, 对应给定 JSON 文本的对象/值</li><li>注意：若传入的字符串不符合 JSON 规范，则会抛出 <code>SyntaxError</code>异常</li></ul><br>",2),J={id:"json-stringify",tabindex:"-1"},f=e("a",{class:"header-anchor",href:"#json-stringify","aria-hidden":"true"},"#",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",target:"_blank",rel:"noopener noreferrer"},O=i("<ul><li>描述：将一个 JavaScript 对象或值转换为 JSON 字符串</li><li>语法：<code>JSON.stringify(value[, replacer [, space]])</code></li><li>参数 <ul><li>value：将要序列化成 一个 JSON 字符串的值</li><li>replacer <ul><li>如果该参数是一个函数，则在序列化过程中，被序列化的值的每个属性都会经过该函数的转换和处理</li><li>如果该参数是一个数组，则只有包含在这个数组中的属性名才会被序列化到最终的 JSON 字符串中</li><li>如果该参数为 null 或者未提供，则对象所有的属性都会被序列化</li></ul></li><li>space：指定缩进用的空白字符串，用于美化输出类型 <ul><li>如果参数是个数字，它代表有多少的空格；上限为10。该值若小于1，则意味着没有空格</li><li>如果该参数为字符串（当字符串长度超过10个字母，取其前10个字母），该字符串将被作为空格</li><li>如果该参数没有提供（或者为 null），将没有空格</li></ul></li></ul></li><li>返回值：一个表示给定值的JSON字符串</li></ul>",1);function v(m,x){const r=a("ExternalLinkIcon");return n(),s("div",null,[c(" more "),e("p",null,[e("a",h,[t("JSON"),l(r)])]),_,e("h2",p,[S,t(),e("a",N,[t("JSON.parse()"),l(r)])]),u,e("h2",J,[f,t(),e("a",b,[t("JSON.stringify()"),l(r)])]),O])}const k=o(d,[["render",v],["__file","19.JSON.html.vue"]]);export{k as default};
