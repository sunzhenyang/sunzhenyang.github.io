const n=JSON.parse(`{"key":"v-467d73d1","path":"/technology/es6/array.html","title":"数组的扩展","lang":"zh-CN","frontmatter":{"title":"数组的扩展","icon":"article","category":"javascript","article":false,"tag":["es6"],"copyright":"Copyright by 阮一峰","description":"扩展运算符 含义 扩展运算符（spread）是三个点（...）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 console.log(...[1, 2, 3]) // 1 2 3 console.log(1, ...[2, 3, 4], 5) // 1 2 3 4 5 [...document.querySelectorAll('div')] // [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/es6/array.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"数组的扩展"}],["meta",{"property":"og:description","content":"扩展运算符 含义 扩展运算符（spread）是三个点（...）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 console.log(...[1, 2, 3]) // 1 2 3 console.log(1, ...[2, 3, 4], 5) // 1 2 3 4 5 [...document.querySelectorAll('div')] // [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"es6"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"数组的扩展\\",\\"description\\":\\"扩展运算符 含义 扩展运算符（spread）是三个点（...）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。 console.log(...[1, 2, 3]) // 1 2 3 console.log(1, ...[2, 3, 4], 5) // 1 2 3 4 5 [...document.querySelectorAll('div')] // [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]\\"}"]]},"headers":[{"level":2,"title":"扩展运算符","slug":"扩展运算符","link":"#扩展运算符","children":[{"level":3,"title":"含义","slug":"含义","link":"#含义","children":[]},{"level":3,"title":"替代函数的 apply() 方法","slug":"替代函数的-apply-方法","link":"#替代函数的-apply-方法","children":[]},{"level":3,"title":"扩展运算符的应用","slug":"扩展运算符的应用","link":"#扩展运算符的应用","children":[]}]},{"level":2,"title":"Array.from()","slug":"array-from","link":"#array-from","children":[]},{"level":2,"title":"Array.of()","slug":"array-of","link":"#array-of","children":[]},{"level":2,"title":"实例方法：copyWithin()","slug":"实例方法-copywithin","link":"#实例方法-copywithin","children":[]},{"level":2,"title":"实例方法：find()，findIndex()，findLast()，findLastIndex()","slug":"实例方法-find-findindex-findlast-findlastindex","link":"#实例方法-find-findindex-findlast-findlastindex","children":[]},{"level":2,"title":"实例方法：fill()","slug":"实例方法-fill","link":"#实例方法-fill","children":[]},{"level":2,"title":"实例方法：entries()，keys() 和 values()","slug":"实例方法-entries-keys-和-values","link":"#实例方法-entries-keys-和-values","children":[]},{"level":2,"title":"实例方法：includes()","slug":"实例方法-includes","link":"#实例方法-includes","children":[]},{"level":2,"title":"实例方法：flat()，flatMap()","slug":"实例方法-flat-flatmap","link":"#实例方法-flat-flatmap","children":[]},{"level":2,"title":"实例方法：at()","slug":"实例方法-at","link":"#实例方法-at","children":[]},{"level":2,"title":"实例方法：toReversed()，toSorted()，toSpliced()，with()","slug":"实例方法-toreversed-tosorted-tospliced-with","link":"#实例方法-toreversed-tosorted-tospliced-with","children":[]},{"level":2,"title":"实例方法：group()，groupToMap()","slug":"实例方法-group-grouptomap","link":"#实例方法-group-grouptomap","children":[]},{"level":2,"title":"数组的空位","slug":"数组的空位","link":"#数组的空位","children":[]},{"level":2,"title":"Array.prototype.sort() 的排序稳定性","slug":"array-prototype-sort-的排序稳定性","link":"#array-prototype-sort-的排序稳定性","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":25.94,"words":7783},"filePathRelative":"technology/es6/array.md","localizedDate":"2023年1月11日","excerpt":"<h2> 扩展运算符</h2>\\n<h3> 含义</h3>\\n<p>扩展运算符（spread）是三个点（<code>...</code>）。它好比 rest 参数的逆运算，将一个数组转为用逗号分隔的参数序列。</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 1 2 3</span>\\n\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token comment\\">// 1 2 3 4 5</span>\\n\\n<span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span>document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">querySelectorAll</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'div'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">]</span>\\n<span class=\\"token comment\\">// [&lt;div&gt;, &lt;div&gt;, &lt;div&gt;]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
