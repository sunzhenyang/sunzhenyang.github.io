import{_ as e,o,c,a as n,b as p,e as a,d as s,r as i}from"./app.095bd546.js";const l={},u=a(`<h2 id="\u9700\u6C42\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#\u9700\u6C42\u5206\u6790" aria-hidden="true">#</a> \u9700\u6C42\u5206\u6790</h2><p>\u5728\u4E0A\u4E00\u7AE0\u8282\uFF0C\u6211\u4EEC\u5B9E\u73B0\u4E86 <code>ts-axios</code> \u7684\u57FA\u7840\u529F\u80FD\uFF0C\u4F46\u76EE\u524D\u4E3A\u6B62\u6211\u4EEC\u90FD\u662F\u5904\u7406\u4E86\u6B63\u5E38\u63A5\u6536\u8BF7\u6C42\u7684\u903B\u8F91\uFF0C\u5E76\u6CA1\u6709\u8003\u8651\u5230\u4EFB\u4F55\u9519\u8BEF\u60C5\u51B5\u7684\u5904\u7406\uFF0C\u8FD9\u5BF9\u4E8E\u4E00\u4E2A\u7A0B\u5E8F\u7684\u5065\u58EE\u6027\u800C\u8A00\u662F\u8FDC\u4E0D\u591F\u7684\uFF0C\u56E0\u6B64\u6211\u4EEC\u8FD9\u4E00\u7AE0\u9700\u8981\u5BF9 AJAX \u5404\u79CD\u9519\u8BEF\u60C5\u51B5\u505A\u5904\u7406\u3002</p><p>\u5E76\u4E14\u6211\u4EEC\u5E0C\u671B\u7A0B\u5E8F\u4E5F\u80FD\u6355\u83B7\u5230\u8FD9\u4E9B\u9519\u8BEF\uFF0C\u505A\u8FDB\u4E00\u6B65\u7684\u5904\u7406\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/error/get&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u5728\u8BF7\u6C42\u7684\u8FC7\u7A0B\u4E2D\u53D1\u751F\u4EFB\u4F55\u9519\u8BEF\uFF0C\u6211\u4EEC\u90FD\u53EF\u4EE5\u5728 <code>reject</code> \u56DE\u8C03\u51FD\u6570\u4E2D\u6355\u83B7\u5230\u3002</p><p>\u6211\u4EEC\u628A\u9519\u8BEF\u5206\u6210\u4E86\u51E0\u7C7B\uFF0C\u63A5\u4E0B\u6765\u6211\u4EEC\u5C31\u6765\u5206\u522B\u5904\u7406\u8FD9\u4E9B\u9519\u8BEF\u60C5\u51B5\u3002</p><h2 id="\u5904\u7406\u7F51\u7EDC\u5F02\u5E38\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u7F51\u7EDC\u5F02\u5E38\u9519\u8BEF" aria-hidden="true">#</a> \u5904\u7406\u7F51\u7EDC\u5F02\u5E38\u9519\u8BEF</h2>`,7),r=s("\u5F53\u7F51\u7EDC\u51FA\u73B0\u5F02\u5E38\uFF08\u6BD4\u5982\u4E0D\u901A\uFF09\u7684\u65F6\u5019\u53D1\u9001\u8BF7\u6C42\u4F1A\u89E6\u53D1 "),k=n("code",null,"XMLHttpRequest",-1),d=s(" \u5BF9\u8C61\u5B9E\u4F8B\u7684 "),v=n("code",null,"error",-1),m=s(" \u4E8B\u4EF6\uFF0C\u4E8E\u662F\u6211\u4EEC\u53EF\u4EE5\u5728 "),b={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/onerror",target:"_blank",rel:"noopener noreferrer"},g=n("code",null,"onerror",-1),h=s(" \u7684\u4E8B\u4EF6\u56DE\u8C03\u51FD\u6570\u4E2D\u6355\u83B7\u6B64\u7C7B\u9519\u8BEF\u3002"),f=a(`<p>\u6211\u4EEC\u5728 <code>xhr</code> \u51FD\u6570\u4E2D\u6DFB\u52A0\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>request<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleError</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;Network Error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5904\u7406\u8D85\u65F6\u9519\u8BEF" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u8D85\u65F6\u9519\u8BEF" aria-hidden="true">#</a> \u5904\u7406\u8D85\u65F6\u9519\u8BEF</h2>`,3),_=s("\u6211\u4EEC\u53EF\u4EE5\u8BBE\u7F6E\u67D0\u4E2A\u8BF7\u6C42\u7684\u8D85\u65F6\u65F6\u95F4 "),y={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/timeout",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"timeout",-1),w=s("\uFF0C\u4E5F\u5C31\u662F\u5F53\u8BF7\u6C42\u53D1\u9001\u540E\u8D85\u8FC7\u67D0\u4E2A\u65F6\u95F4\u540E\u4ECD\u7136\u6CA1\u6536\u5230\u54CD\u5E94\uFF0C\u5219\u8BF7\u6C42\u81EA\u52A8\u7EC8\u6B62\uFF0C\u5E76\u89E6\u53D1 "),q=n("code",null,"timeout",-1),T=s(" \u4E8B\u4EF6\u3002"),E=a(`<p>\u8BF7\u6C42\u9ED8\u8BA4\u7684\u8D85\u65F6\u65F6\u95F4\u662F 0\uFF0C\u5373\u6C38\u4E0D\u8D85\u65F6\u3002\u6240\u4EE5\u6211\u4EEC\u9996\u5148\u9700\u8981\u5141\u8BB8\u7A0B\u5E8F\u53EF\u4EE5\u914D\u7F6E\u8D85\u65F6\u65F6\u95F4\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">AxiosRequestConfig</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u5728 <code>xhr</code> \u51FD\u6570\u4E2D\u6DFB\u52A0\u5982\u4E0B\u4EE3\u7801\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token comment">/*...*/</span> timeout <span class="token punctuation">}</span> <span class="token operator">=</span> config

<span class="token keyword">if</span> <span class="token punctuation">(</span>timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  request<span class="token punctuation">.</span>timeout <span class="token operator">=</span> timeout
<span class="token punctuation">}</span>

request<span class="token punctuation">.</span><span class="token function-variable function">ontimeout</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Timeout of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>timeout<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> ms exceeded</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5904\u7406\u975E-200-\u72B6\u6001\u7801" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u975E-200-\u72B6\u6001\u7801" aria-hidden="true">#</a> \u5904\u7406\u975E 200 \u72B6\u6001\u7801</h2><p>\u5BF9\u4E8E\u4E00\u4E2A\u6B63\u5E38\u7684\u8BF7\u6C42\uFF0C\u5F80\u5F80\u4F1A\u8FD4\u56DE 200-300 \u4E4B\u95F4\u7684 HTTP \u72B6\u6001\u7801\uFF0C\u5BF9\u4E8E\u4E0D\u5728\u8FD9\u4E2A\u533A\u95F4\u7684\u72B6\u6001\u7801\uFF0C\u6211\u4EEC\u4E5F\u628A\u5B83\u4EEC\u8BA4\u4E3A\u662F\u4E00\u79CD\u9519\u8BEF\u7684\u60C5\u51B5\u505A\u5904\u7406\u3002</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>request<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">handleLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>readyState <span class="token operator">!==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>request<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> responseHeaders <span class="token operator">=</span> <span class="token function">parseHeaders</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getAllResponseHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> responseData <span class="token operator">=</span>
    responseType <span class="token operator">&amp;&amp;</span> responseType <span class="token operator">!==</span> <span class="token string">&#39;text&#39;</span> <span class="token operator">?</span> request<span class="token punctuation">.</span>response <span class="token operator">:</span> request<span class="token punctuation">.</span>responseText
  <span class="token keyword">const</span> response<span class="token operator">:</span> AxiosResponse <span class="token operator">=</span> <span class="token punctuation">{</span>
    data<span class="token operator">:</span> responseData<span class="token punctuation">,</span>
    status<span class="token operator">:</span> request<span class="token punctuation">.</span>status<span class="token punctuation">,</span>
    statusText<span class="token operator">:</span> request<span class="token punctuation">.</span>statusText<span class="token punctuation">,</span>
    headers<span class="token operator">:</span> responseHeaders<span class="token punctuation">,</span>
    config<span class="token punctuation">,</span>
    request
  <span class="token punctuation">}</span>
  <span class="token function">handleResponse</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">handleResponse</span><span class="token punctuation">(</span>response<span class="token operator">:</span> AxiosResponse<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Request failed with status code </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>response<span class="token punctuation">.</span>status<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),R=s("\u6211\u4EEC\u5728 "),A=n("code",null,"onreadystatechange",-1),H=s(" \u7684\u56DE\u8C03\u51FD\u6570\u4E2D\uFF0C\u6DFB\u52A0\u4E86\u5BF9 "),j={href:"https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/status",target:"_blank",rel:"noopener noreferrer"},L=n("code",null,"request.status",-1),I=s(" \u7684\u5224\u65AD\uFF0C\u56E0\u4E3A\u5F53\u51FA\u73B0\u7F51\u7EDC\u9519\u8BEF\u6216\u8005\u8D85\u65F6\u9519\u8BEF\u7684\u65F6\u5019\uFF0C\u8BE5\u503C\u90FD\u4E3A 0\u3002"),M=a(`<p>\u63A5\u7740\u6211\u4EEC\u5728 <code>handleResponse</code> \u51FD\u6570\u4E2D\u5BF9 <code>request.status</code> \u7684\u503C\u518D\u6B21\u5224\u65AD\uFF0C\u5982\u679C\u662F <code>2xx</code> \u7684\u72B6\u6001\u7801\uFF0C\u5219\u8BA4\u4E3A\u662F\u4E00\u4E2A\u6B63\u5E38\u7684\u8BF7\u6C42\uFF0C\u5426\u5219\u629B\u9519\u3002</p><h2 id="demo-\u7F16\u5199" tabindex="-1"><a class="header-anchor" href="#demo-\u7F16\u5199" aria-hidden="true">#</a> demo \u7F16\u5199</h2><p>\u5728 <code>examples</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>error</code> \u76EE\u5F55\uFF0C\u5728 <code>error</code> \u76EE\u5F55\u4E0B\u521B\u5EFA <code>index.html</code>:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>utf-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Error example<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/__build__/error.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u521B\u5EFA <code>app.ts</code> \u4F5C\u4E3A\u5165\u53E3\u6587\u4EF6\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;../../src/index&#39;</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/error/get1&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/error/get&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
    url<span class="token operator">:</span> <span class="token string">&#39;/error/get&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span>

<span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  method<span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span>
  url<span class="token operator">:</span> <span class="token string">&#39;/error/timeout&#39;</span><span class="token punctuation">,</span>
  timeout<span class="token operator">:</span> <span class="token number">2000</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>message<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A5\u7740\u5728 <code>server.js</code> \u6DFB\u52A0\u65B0\u7684\u63A5\u53E3\u8DEF\u7531\uFF1A</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/error/get&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      msg<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello world</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

router<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/error/timeout&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      msg<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello world</span><span class="token template-punctuation string">\`</span></span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7136\u540E\u5728\u547D\u4EE4\u884C\u8FD0\u884C <code>npm run dev</code>\uFF0C\u63A5\u7740\u6253\u5F00 chrome \u6D4F\u89C8\u5668\uFF0C\u8BBF\u95EE <code>http://localhost:8080/</code> \u5373\u53EF\u8BBF\u95EE\u6211\u4EEC\u7684 demo \u4E86\uFF0C\u6211\u4EEC\u70B9\u5230 <code>Error</code> \u76EE\u5F55\u4E0B\uFF0C\u901A\u8FC7\u5F00\u53D1\u8005\u5DE5\u5177\u7684 network \u90E8\u5206\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u4E0D\u540C\u7684\u9519\u8BEF\u60C5\u51B5\u3002</p><p>\u81F3\u6B64\u6211\u4EEC\u5BF9\u5404\u79CD\u9519\u8BEF\u90FD\u505A\u4E86\u5904\u7406\uFF0C\u5E76\u628A\u5B83\u4EEC\u629B\u7ED9\u4E86\u7A0B\u5E8F\u5E94\u7528\u65B9\uFF0C\u8BA9\u4ED6\u4EEC\u5BF9\u9519\u8BEF\u53EF\u4EE5\u505A\u8FDB\u4E00\u6B65\u7684\u5904\u7406\u3002\u4F46\u662F\u8FD9\u91CC\u6211\u4EEC\u7684\u9519\u8BEF\u90FD\u4EC5\u4EC5\u662F\u7B80\u5355\u7684 Error \u5B9E\u4F8B\uFF0C\u53EA\u6709\u9519\u8BEF\u6587\u672C\u4FE1\u606F\uFF0C\u5E76\u4E0D\u5305\u542B\u662F\u54EA\u4E2A\u8BF7\u6C42\u3001\u8BF7\u6C42\u7684\u914D\u7F6E\u3001\u54CD\u5E94\u5BF9\u8C61\u7B49\u5176\u5B83\u4FE1\u606F\u3002\u90A3\u4E48\u4E0B\u4E00\u8282\u8BFE\uFF0C\u6211\u4EEC\u4F1A\u5BF9\u9519\u8BEF\u4FE1\u606F\u505A\u589E\u5F3A\u3002</p>`,10);function N(P,S){const t=i("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[r,k,d,v,m,n("a",b,[g,p(t)]),h]),f,n("p",null,[_,n("a",y,[x,p(t)]),w,q,T]),E,n("p",null,[R,A,H,n("a",j,[L,p(t)]),I]),M])}var V=e(l,[["render",N],["__file","error.html.vue"]]);export{V as default};
