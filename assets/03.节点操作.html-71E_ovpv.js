import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t,f as e}from"./app-BybQgHW9.js";const p={},l=e(`<h2 id="类名修改" tabindex="-1"><a class="header-anchor" href="#类名修改"><span>类名修改</span></a></h2><h3 id="classname" tabindex="-1"><a class="header-anchor" href="#classname"><span>className</span></a></h3><blockquote><p>获取或修改类名，替换整个类名字符串</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test1 test2 test3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>className Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>className<span class="token punctuation">)</span> <span class="token comment">// test1 test2 test3</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="classlist" tabindex="-1"><a class="header-anchor" href="#classlist"><span>classList</span></a></h3><blockquote><p>一个特殊的对象，它具有 <code>add/remove/toggle</code> 单个类的方法</p></blockquote><ul><li><code>elem.classList.add(class)</code> ： 添加/类</li><li><code>elem.classList.remove(class)</code> ： 删除类</li><li><code>elem.classList.toggle(class)</code> ：如果类不存在就添加类，存在就移除它</li><li><code>elem.classList.contains(class)</code> ：检查给定类，返回 <code>true/false</code></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test1 test2 test3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>classList<span class="token punctuation">)</span> <span class="token comment">// DOMTokenList(3) [&#39;test1&#39;, &#39;test2&#39;, &#39;test3&#39;, value: &#39;test1 test2 test3&#39;]</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>classList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// (3) [&#39;test1&#39;, &#39;test2&#39;, &#39;test3&#39;]</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> name <span class="token keyword">of</span> oDiv<span class="token punctuation">.</span>classList<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token comment">// 依次打印 test1、test2、test3</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="样式修改" tabindex="-1"><a class="header-anchor" href="#样式修改"><span>样式修改</span></a></h2><h3 id="style" tabindex="-1"><a class="header-anchor" href="#style"><span>style</span></a></h3><blockquote><p>是一个对象，它对应于 <code>style</code> 属性中所写的内容</p></blockquote><ul><li>对于多词属性，使用驼峰式 camelCase</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>color <span class="token operator">=</span> <span class="token string">&quot;#f00&quot;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="style-csstext" tabindex="-1"><a class="header-anchor" href="#style-csstext"><span>style.cssText</span></a></h3><blockquote><p>完全重写元素 <code>style</code> 属性内容</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText<span class="token punctuation">)</span> <span class="token comment">// 空</span>
oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText<span class="token operator">=</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
    background-color: red;
    width: 100px;
  </span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>cssText<span class="token punctuation">)</span> <span class="token comment">// background-color: red; width: 100px;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width<span class="token punctuation">)</span> <span class="token comment">// 100px</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token punctuation">)</span> <span class="token comment">// red</span>
  
oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">&#39;#f00&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor<span class="token punctuation">)</span> <span class="token comment">// rgb(255, 0, 0)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getcomputedstyle-elem-pseudo" tabindex="-1"><a class="header-anchor" href="#getcomputedstyle-elem-pseudo"><span>getComputedStyle(elem, [pseudo])</span></a></h3><blockquote><p>读取 CSS 中最终应用到元素上的的样式值</p></blockquote><ul><li><code>elem</code>：需要被读取样式值的元素</li><li><code>pseudo</code>：（可选的）伪元素，空字符串或无参数代表元素本身</li></ul><h3 id="注意" tabindex="-1"><a class="header-anchor" href="#注意"><span>注意</span></a></h3><ul><li><p>单位要添加到值上 <code>style.top.top = &#39;20px&#39;</code></p></li><li><p>通过 <code>style.* = str</code> 的方式设置某个样式后，可以再次通过 <code>style.* = &#39;&#39;</code> 的方式来重置为设置之前的样式</p></li></ul><h2 id="创建节点" tabindex="-1"><a class="header-anchor" href="#创建节点"><span>创建节点</span></a></h2><h3 id="createelement-tag" tabindex="-1"><a class="header-anchor" href="#createelement-tag"><span>createElement(tag)</span></a></h3><blockquote><p>创建元素节点</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="createtextnode-text" tabindex="-1"><a class="header-anchor" href="#createtextnode-text"><span>createTextNode(text)</span></a></h3><blockquote><p>创建文本节点</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span><span class="token string">&#39;Hello World!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="插入节点" tabindex="-1"><a class="header-anchor" href="#插入节点"><span>插入节点</span></a></h2><blockquote><p>下面方法的参数可以是一个要插入的任意的 DOM 节点列表，或者文本字符串</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  div<span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;p&gt;Hello&lt;/p&gt;&#39;</span><span class="token punctuation">,</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;hr&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>append</code>、<code>prepend</code>、<code>before</code>、<code>after</code>、<code>replaceWith</code>：插入字符串时，参数都被作为文本插入，而不是作为 HTML 代码，因此像 <code>&lt;</code>、<code>&gt;</code> 这样的符号都会被作转义处理来保证正确显示</li></ul><h3 id="append" tabindex="-1"><a class="header-anchor" href="#append"><span>append()</span></a></h3><blockquote><p>在 <code>node</code> <strong>末尾</strong> 插入节点或字符串</p></blockquote><h3 id="prepend" tabindex="-1"><a class="header-anchor" href="#prepend"><span>prepend()</span></a></h3><blockquote><p>在 <code>node</code> <strong>开头</strong> 插入节点或字符串</p></blockquote><h3 id="before" tabindex="-1"><a class="header-anchor" href="#before"><span>before()</span></a></h3><blockquote><p>在 <code>node</code> <strong>前面</strong> 插入节点或字符串</p></blockquote><h3 id="after" tabindex="-1"><a class="header-anchor" href="#after"><span>after()</span></a></h3><blockquote><p>在 <code>node</code> <strong>后面</strong> 插入节点或字符串</p></blockquote><h3 id="replacewith" tabindex="-1"><a class="header-anchor" href="#replacewith"><span>replaceWith()</span></a></h3><blockquote><p>将 <code>node</code> 替换为给定的节点或字符串</p></blockquote><h3 id="insertadjacenthtml-where-html" tabindex="-1"><a class="header-anchor" href="#insertadjacenthtml-where-html"><span>insertAdjacentHTML(where, html)</span></a></h3><blockquote><p>将字符串作为 HTML 插入</p></blockquote><ul><li><p>该方法的第一个参数是代码字，指定相对于 <code>elem</code> 的插入位置。必须为以下之一</p><ul><li><code>beforebegin</code> ：将 <code>html</code> 插入到 <code>elem</code> 之前</li><li><code>afterbegin</code> ：将 <code>html</code> 插入到 <code>elem</code> 开头</li><li><code>beforeend</code> ：将 <code>html</code> 插入到 <code>elem</code> 末尾</li><li><code>afterend</code> ：将 <code>html</code> 插入到 <code>elem</code> 之后</li></ul></li><li><p>还有两个类似的方法 <code>elem.insertAdjacentText(where, text)</code>、<code>elem.insertAdjacentElement(where, elem)</code></p><ul><li>语法一样，只是一个是作为文本插入，一个是作为元素插入，目的是为了语法统一，多数情况还是使用 <code>insertAdjacentHTML</code> 或者之前那几种方法，语法更简洁</li></ul></li></ul><h3 id="注意-1" tabindex="-1"><a class="header-anchor" href="#注意-1"><span>注意</span></a></h3><blockquote><p>所有插入方法都会自动从旧位置删除该节点，无需调用 <code>remove()</code> 方法删除</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>first<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>First<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>second<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Second<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  second<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="删除节点" tabindex="-1"><a class="header-anchor" href="#删除节点"><span>删除节点</span></a></h2><h3 id="remove" tabindex="-1"><a class="header-anchor" href="#remove"><span>remove()</span></a></h3><blockquote><p>删除节点</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>==============<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>==============<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
	<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="克隆节点" tabindex="-1"><a class="header-anchor" href="#克隆节点"><span>克隆节点</span></a></h2><h3 id="clonenode-deep" tabindex="-1"><a class="header-anchor" href="#clonenode-deep"><span>cloneNode(deep)</span></a></h3><blockquote><p>克隆节点</p></blockquote><ul><li><code>elem.cloneNode(true)</code>：来创建元素的一个“深”克隆，具有所有特性（attribute）和子元素</li><li><code>elem.cloneNode(false)</code>：克隆就不包括子元素</li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  123
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Content H1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Content H2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">&gt;</span></span>Content H3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">&gt;</span></span>Content H4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">&gt;</span></span>Content H5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">&gt;</span></span>Content H6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> oDiv <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;div&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> oCloneDiv <span class="token operator">=</span> oDiv<span class="token punctuation">.</span><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
  oDiv<span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span>oCloneDiv<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文档片段" tabindex="-1"><a class="header-anchor" href="#文档片段"><span>文档片段</span></a></h2><blockquote><p><code>DocumentFragment</code> 是一个特殊的 DOM 节点，用作来传递节点列表的包装器</p><p>可以向其附加其他节点，当将其插入某个位置时，则会插入其内容</p></blockquote><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ul<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">function</span> <span class="token function">getListContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> fragment <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> li <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span>
    li<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
    fragment<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> fragment
<span class="token punctuation">}</span>
ul<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">getListContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="旧版本操作方法" tabindex="-1"><a class="header-anchor" href="#旧版本操作方法"><span>旧版本操作方法</span></a></h2><blockquote><p>这些旧方法都会返回 <code>node</code></p></blockquote><h3 id="elem-appendchild-node" tabindex="-1"><a class="header-anchor" href="#elem-appendchild-node"><span>elem.appendChild(node)</span></a></h3><blockquote><p>将 <code>node</code> 附加为 <code>elem</code> 的最后一个子元素</p></blockquote><h3 id="elem-insertbefore-node-nextsibling" tabindex="-1"><a class="header-anchor" href="#elem-insertbefore-node-nextsibling"><span>elem.insertBefore(node, nextSibling)</span></a></h3><blockquote><p>在 <code>elem</code> 的 <code>nextSibling</code> 前插入 <code>node</code></p></blockquote><h3 id="elem-replacechild-node-oldchild" tabindex="-1"><a class="header-anchor" href="#elem-replacechild-node-oldchild"><span>elem.replaceChild(node, oldChild)</span></a></h3><blockquote><p>将 <code>elem</code> 的后代中的 <code>oldChild</code> 替换为 <code>node</code></p></blockquote><h3 id="elem-removechild-node" tabindex="-1"><a class="header-anchor" href="#elem-removechild-node"><span>elem.removeChild(node)</span></a></h3><blockquote><p>从 <code>parentElem</code> 中删除 <code>node</code>（假设 <code>node</code> 为 <code>parentElem</code> 的后代）</p></blockquote>`,70);function o(c,i){return s(),a("div",null,[t(" more "),l])}const k=n(p,[["render",o],["__file","03.节点操作.html.vue"]]),r=JSON.parse(`{"path":"/notes/javascript/web-api/document/03.%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C.html","title":"节点操作","lang":"zh-CN","frontmatter":{"title":"节点操作","icon":"article","article":false,"sticky":20,"breadcrumb":false,"description":"类名修改 className 获取或修改类名，替换整个类名字符串 classList 一个特殊的对象，它具有 add/remove/toggle 单个类的方法 elem.classList.add(class) ： 添加/类 elem.classList.remove(class) ： 删除类 elem.classList.toggle(class) ...","head":[["meta",{"property":"og:url","content":"https://codemake.fun/notes/javascript/web-api/document/03.%E8%8A%82%E7%82%B9%E6%93%8D%E4%BD%9C.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"节点操作"}],["meta",{"property":"og:description","content":"类名修改 className 获取或修改类名，替换整个类名字符串 classList 一个特殊的对象，它具有 add/remove/toggle 单个类的方法 elem.classList.add(class) ： 添加/类 elem.classList.remove(class) ： 删除类 elem.classList.toggle(class) ..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"节点操作\\",\\"description\\":\\"类名修改 className 获取或修改类名，替换整个类名字符串 classList 一个特殊的对象，它具有 add/remove/toggle 单个类的方法 elem.classList.add(class) ： 添加/类 elem.classList.remove(class) ： 删除类 elem.classList.toggle(class) ...\\"}"]]},"headers":[{"level":2,"title":"类名修改","slug":"类名修改","link":"#类名修改","children":[{"level":3,"title":"className","slug":"classname","link":"#classname","children":[]},{"level":3,"title":"classList","slug":"classlist","link":"#classlist","children":[]}]},{"level":2,"title":"样式修改","slug":"样式修改","link":"#样式修改","children":[{"level":3,"title":"style","slug":"style","link":"#style","children":[]},{"level":3,"title":"style.cssText","slug":"style-csstext","link":"#style-csstext","children":[]},{"level":3,"title":"getComputedStyle(elem, [pseudo])","slug":"getcomputedstyle-elem-pseudo","link":"#getcomputedstyle-elem-pseudo","children":[]},{"level":3,"title":"注意","slug":"注意","link":"#注意","children":[]}]},{"level":2,"title":"创建节点","slug":"创建节点","link":"#创建节点","children":[{"level":3,"title":"createElement(tag)","slug":"createelement-tag","link":"#createelement-tag","children":[]},{"level":3,"title":"createTextNode(text)","slug":"createtextnode-text","link":"#createtextnode-text","children":[]}]},{"level":2,"title":"插入节点","slug":"插入节点","link":"#插入节点","children":[{"level":3,"title":"append()","slug":"append","link":"#append","children":[]},{"level":3,"title":"prepend()","slug":"prepend","link":"#prepend","children":[]},{"level":3,"title":"before()","slug":"before","link":"#before","children":[]},{"level":3,"title":"after()","slug":"after","link":"#after","children":[]},{"level":3,"title":"replaceWith()","slug":"replacewith","link":"#replacewith","children":[]},{"level":3,"title":"insertAdjacentHTML(where, html)","slug":"insertadjacenthtml-where-html","link":"#insertadjacenthtml-where-html","children":[]},{"level":3,"title":"注意","slug":"注意-1","link":"#注意-1","children":[]}]},{"level":2,"title":"删除节点","slug":"删除节点","link":"#删除节点","children":[{"level":3,"title":"remove()","slug":"remove","link":"#remove","children":[]}]},{"level":2,"title":"克隆节点","slug":"克隆节点","link":"#克隆节点","children":[{"level":3,"title":"cloneNode(deep)","slug":"clonenode-deep","link":"#clonenode-deep","children":[]}]},{"level":2,"title":"文档片段","slug":"文档片段","link":"#文档片段","children":[]},{"level":2,"title":"旧版本操作方法","slug":"旧版本操作方法","link":"#旧版本操作方法","children":[{"level":3,"title":"elem.appendChild(node)","slug":"elem-appendchild-node","link":"#elem-appendchild-node","children":[]},{"level":3,"title":"elem.insertBefore(node, nextSibling)","slug":"elem-insertbefore-node-nextsibling","link":"#elem-insertbefore-node-nextsibling","children":[]},{"level":3,"title":"elem.replaceChild(node, oldChild)","slug":"elem-replacechild-node-oldchild","link":"#elem-replacechild-node-oldchild","children":[]},{"level":3,"title":"elem.removeChild(node)","slug":"elem-removechild-node","link":"#elem-removechild-node","children":[]}]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":3.47,"words":1040},"filePathRelative":"notes/javascript/web-api/document/03.节点操作.md","localizedDate":"2023年1月11日","excerpt":"","autoDesc":true}`);export{k as comp,r as data};
