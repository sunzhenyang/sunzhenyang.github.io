import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o as e,c as p,a as o,b as n,d as c,e as l,f as i}from"./app-BybQgHW9.js";const r={},u=n("p",null,"一个 url 参数转化 ( parse 和 stringify ) 的轻量级 JavaScript 库",-1),d={href:"https://github.com/ljharb/qs",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="引入" tabindex="-1"><a class="header-anchor" href="#引入"><span>引入</span></a></h2><h3 id="直接引入" tabindex="-1"><a class="header-anchor" href="#直接引入"><span>直接引入</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- 注意：此方式引入后会直接挂载到 window.Qs 属性上 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>js/qs-main/dist/qs.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">var</span> qs <span class="token operator">=</span> Qs
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入包" tabindex="-1"><a class="header-anchor" href="#导入包"><span>导入包</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;qs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">import</span> qs <span class="token keyword">from</span> <span class="token string">&#39;qs&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="简单使用" tabindex="-1"><a class="header-anchor" href="#简单使用"><span>简单使用</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;Yang&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">&#39;28&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token string">&#39;男&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// 将对象转化为 url 参数</span>
<span class="token keyword">var</span> dataStr <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">)</span> <span class="token comment">// name=Yang&amp;age=28&amp;gender=%E7%94%B7</span>

<span class="token comment">// 将 url 参数转换为对象</span>
<span class="token keyword">var</span> dataObj <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>dataObj<span class="token punctuation">)</span> <span class="token comment">// {name: &#39;Yang&#39;, age: &#39;28&#39;, gender: &#39;男&#39;}</span>

<span class="token comment">// 解析 url 时忽略问号</span>
<span class="token keyword">var</span> dataObj <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>dataStr<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">ignoreQueryPrefix</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function m(v,g){const a=t("ExternalLinkIcon");return e(),p("div",null,[o(" more "),n("blockquote",null,[u,n("p",null,[n("a",d,[c("GitHub"),l(a)])])]),k])}const y=s(r,[["render",m],["__file","01.Qs.html.vue"]]),f=JSON.parse(`{"path":"/fe/javascript/plugins/01.Qs.html","title":"Qs","lang":"zh-CN","frontmatter":{"title":"Qs","icon":"article","category":["plugins"],"description":"一个 url 参数转化 ( parse 和 stringify ) 的轻量级 JavaScript 库 GitHub 引入 直接引入 导入包 简单使用","head":[["meta",{"property":"og:url","content":"https://codemake.fun/fe/javascript/plugins/01.Qs.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"Qs"}],["meta",{"property":"og:description","content":"一个 url 参数转化 ( parse 和 stringify ) 的轻量级 JavaScript 库 GitHub 引入 直接引入 导入包 简单使用"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:author","content":"Yang"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Qs\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-11T09:12:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Yang\\",\\"url\\":\\"https://codemake.fun/\\",\\"email\\":\\"874530670@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"引入","slug":"引入","link":"#引入","children":[{"level":3,"title":"直接引入","slug":"直接引入","link":"#直接引入","children":[]},{"level":3,"title":"导入包","slug":"导入包","link":"#导入包","children":[]}]},{"level":2,"title":"简单使用","slug":"简单使用","link":"#简单使用","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":0.5,"words":149},"filePathRelative":"fe/javascript/plugins/01.Qs.md","localizedDate":"2023年1月11日","excerpt":"","autoDesc":true}`);export{y as comp,f as data};
