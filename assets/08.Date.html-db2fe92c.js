import{_ as o,Q as l,S as r,$ as c,a0 as e,a1 as t,a2 as a,a3 as s,E as i}from"./framework-9339b303.js";const p={},d={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date",target:"_blank",rel:"noopener noreferrer"},u=s(`<br><blockquote><p>由于浏览器差异和不一致性，强烈建议不要使用<code>Date</code>构造函数（和<code>Date.parse</code>，它们是等效的）解析日期字符串。</p></blockquote><br><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><blockquote><p>没有参数：新创建的Date对象表示实例化时刻的日期和时间</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><blockquote><p>Unix时间戳：是一个整数值，表示自1970年1月1日00:00:00 UTC（the Unix epoch）以来的<strong>毫秒数</strong>，忽略了闰秒。请注意大多数 Unix 时间戳功能仅精确到最接近的秒。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1597570990000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><blockquote><p>时间戳字符串：表示日期的字符串值。该字符串应该能被 <code>Date.parse()</code> 正确方法识别</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2020/8/16 17:48:26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2020/08/16 17:48:26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2020-08-16 17:48:26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;2020-08-16T17:49:26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&#39;Aug 16, 2020 17:48:26&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>分别提供日期与时间的每一个成员</p></blockquote><ul><li><code>year</code>：表示年份的整数值。 0到99会被映射至1900年至1999年，其它值代表实际年份</li><li><code>monthIndex</code>：表示月份的整数值，从 0（1月）到 11（12月）</li><li><code>day </code>（可选）：表示一个月中的第几天的整数值，从 1 开始。默认值为 1（1 到 31）</li><li><code>hours</code>（可选）：表示一天中的小时数的整数值 (24小时制)。默认值为0（午夜）（0 到 23）</li><li><code>minutes </code>（可选）：表示一个完整时间（如 01:10:00）中的分钟部分的整数值。默认值为0（0 到 59）</li><li><code>seconds </code>（可选）：表示一个完整时间（如 01:10:00）中的秒部分的整数值。默认值为0（0 到 59）</li><li><code>milliseconds </code>（可选）：表示一个完整时间的毫秒部分的整数值。默认值为0 （0 到 999 ）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><br>`,17),h={id:"date-now",tabindex:"-1"},_=e("a",{class:"header-anchor",href:"#date-now","aria-hidden":"true"},"#",-1),b={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/now",target:"_blank",rel:"noopener noreferrer"},k=e("ul",null,[e("li",null,[t("描述：返回自 1970 年 1 月 1 日 00:00:00 (UTC) 到当前时间的"),e("strong",null,"毫秒数")]),e("li",null,[t("语法："),e("code",null,"var timeInMs = Date.now();")])],-1),g=e("br",null,null,-1),m={id:"date-utc",tabindex:"-1"},v=e("a",{class:"header-anchor",href:"#date-utc","aria-hidden":"true"},"#",-1),f={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/UTC",target:"_blank",rel:"noopener noreferrer"},y=e("ul",null,[e("li",null,"描述：接受的参数同日期构造函数接受最多参数时一样，返回从1970-1-1 00:00:00 UTC到指定日期的的毫秒数"),e("li",null,[t("语法："),e("code",null,"Date.UTC(year,month[,date[,hrs[,min[,sec[,ms]]]]]) ")])],-1),D=e("br",null,null,-1),j={id:"date-parse",tabindex:"-1"},S=e("a",{class:"header-anchor",href:"#date-parse","aria-hidden":"true"},"#",-1),O={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/parse",target:"_blank",rel:"noopener noreferrer"},z=e("ul",null,[e("li",null,[t("描述：解析一个表示某个日期的字符串，并返回从1970-1-1 00:00:00 UTC 到该日期对象（该日期对象的UTC时间）的毫秒数，如果该字符串无法识别，或者一些情况下，包含了不合法的日期数值（如：2015-02-31），则返回值为 "),e("code",null,"NaN")]),e("li",null,[t("语法："),e("code",null,"Date.parse(dateString) "),e("ul",null,[e("li",null,[t("隐式调用："),e("code",null,"new Date(dateString).getTime()")])])])],-1),x=e("br",null,null,-1),C={id:"date-prototype-gettime",tabindex:"-1"},w=e("a",{class:"header-anchor",href:"#date-prototype-gettime","aria-hidden":"true"},"#",-1),N={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getTime",target:"_blank",rel:"noopener noreferrer"},J=e("ul",null,[e("li",null,[t("描述：返回值一个数值，表示从1970年1月1日0时0分0秒（UTC，即协调世界时）距离该日期对象所代表时间的"),e("strong",null,"毫秒数")]),e("li",null,[t("语法："),e("code",null,"dateObj.getTime() ")])],-1),T=e("br",null,null,-1),G={id:"date-prototype-getfullyear",tabindex:"-1"},R=e("a",{class:"header-anchor",href:"#date-prototype-getfullyear","aria-hidden":"true"},"#",-1),W={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getFullYear",target:"_blank",rel:"noopener noreferrer"},V=e("ul",null,[e("li",null,"描述：根据当地时间，返回一个对应于给定日期的年份数字"),e("li",null,[t("语法："),e("code",null,"dateObj.getFullYear() ")])],-1),M=e("br",null,null,-1),U={id:"date-prototype-getmonth",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#date-prototype-getmonth","aria-hidden":"true"},"#",-1),q={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth",target:"_blank",rel:"noopener noreferrer"},Y=e("ul",null,[e("li",null,"描述：返回一个 0 到 11 的整数值： 0 代表一月份，1 代表二月份， 2 代表三月份，依次类推"),e("li",null,[t("语法："),e("code",null,"dateObj.getMonth() ")])],-1),H=e("br",null,null,-1),F={id:"date-prototype-getdate",tabindex:"-1"},E=e("a",{class:"header-anchor",href:"#date-prototype-getdate","aria-hidden":"true"},"#",-1),A={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getDate",target:"_blank",rel:"noopener noreferrer"},Z=e("ul",null,[e("li",null,"描述：返回一个指定的日期对象为一个月中的哪一日（ 1 ~ 31 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getDate() ")])],-1),B=e("br",null,null,-1),L={id:"date-prototype-getday",tabindex:"-1"},Q=e("a",{class:"header-anchor",href:"#date-prototype-getday","aria-hidden":"true"},"#",-1),$={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getDay",target:"_blank",rel:"noopener noreferrer"},K=e("ul",null,[e("li",null,"描述：根据本地时间，返回一个具体日期中一周的第几天，0 表示星期天（ 0 ~ 6 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getDate() ")])],-1),P=e("br",null,null,-1),X={id:"date-prototype-gethours",tabindex:"-1"},ee=e("a",{class:"header-anchor",href:"#date-prototype-gethours","aria-hidden":"true"},"#",-1),te={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getHours",target:"_blank",rel:"noopener noreferrer"},ne=e("ul",null,[e("li",null,"描述：根据本地时间，返回一个指定的日期对象的小时（ 0 ~ 23 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getHours() ")])],-1),ae=e("br",null,null,-1),se={id:"date-prototype-getminutes",tabindex:"-1"},oe=e("a",{class:"header-anchor",href:"#date-prototype-getminutes","aria-hidden":"true"},"#",-1),le={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMinutes",target:"_blank",rel:"noopener noreferrer"},re=e("ul",null,[e("li",null,"描述：根据本地时间，返回一个指定的日期对象的分钟数（ 0 ~ 59 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getMinutes()")])],-1),ce=e("br",null,null,-1),ie={id:"date-prototype-getseconds",tabindex:"-1"},pe=e("a",{class:"header-anchor",href:"#date-prototype-getseconds","aria-hidden":"true"},"#",-1),de={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getSeconds",target:"_blank",rel:"noopener noreferrer"},ue=e("ul",null,[e("li",null,"描述：根据本地时间，返回一个指定的日期对象的秒数（ 0 ~ 59 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getSeconds()")])],-1),he=e("br",null,null,-1),_e={id:"date-prototype-getmilliseconds",tabindex:"-1"},be=e("a",{class:"header-anchor",href:"#date-prototype-getmilliseconds","aria-hidden":"true"},"#",-1),ke={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/getMilliseconds",target:"_blank",rel:"noopener noreferrer"},ge=e("ul",null,[e("li",null,"描述：根据本地时间，返回一个指定的日期对象的毫秒数（ 0 ~ 999 ）"),e("li",null,[t("语法："),e("code",null,"dateObj.getMilliseconds()")])],-1),me=e("br",null,null,-1),ve={id:"date-prototype-settime",tabindex:"-1"},fe=e("a",{class:"header-anchor",href:"#date-prototype-settime","aria-hidden":"true"},"#",-1),ye={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setTime",target:"_blank",rel:"noopener noreferrer"},De=e("ul",null,[e("li",null,"描述：以一个表示从1970-1-1 00:00:00 UTC计时的毫秒数为来为 Date 对象设置时间"),e("li",null,[t("语法："),e("code",null,"dateObj.setTime(timeValue)")])],-1),je=e("br",null,null,-1),Se={id:"date-prototype-setfullyear",tabindex:"-1"},Oe=e("a",{class:"header-anchor",href:"#date-prototype-setfullyear","aria-hidden":"true"},"#",-1),ze={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setFullYear",target:"_blank",rel:"noopener noreferrer"},xe=e("ul",null,[e("li",null,"描述：根据本地时间为一个日期对象设置年份"),e("li",null,[t("语法："),e("code",null,"dateObj.setFullYear(yearValue[, monthValue[, dayValue]])")])],-1),Ce=e("br",null,null,-1),we={id:"date-prototype-setmonth",tabindex:"-1"},Ne=e("a",{class:"header-anchor",href:"#date-prototype-setmonth","aria-hidden":"true"},"#",-1),Je={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMonth",target:"_blank",rel:"noopener noreferrer"},Te=e("ul",null,[e("li",null,"描述：根据本地时间为一个设置年份的日期对象设置月份"),e("li",null,[t("语法："),e("code",null,"dateObj.setMonth(monthValue[, dayValue])")])],-1),Ge=e("br",null,null,-1),Re={id:"date-prototype-setdate",tabindex:"-1"},We=e("a",{class:"header-anchor",href:"#date-prototype-setdate","aria-hidden":"true"},"#",-1),Ve={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setDate",target:"_blank",rel:"noopener noreferrer"},Me=s("<ul><li>描述：根据本地时间来指定一个日期对象的天数</li><li>语法：<code>dateObj.setDate(dayValue)</code></li><li>注意 <ul><li>如果 <code>dayValue</code> 超出了月份的合理范围，<code>setDate</code> 将会相应地更新 <code>Date</code> 对象 <ul><li>例如，如果为 <code>dayValue</code> 指定0，那么日期就会被设置为上个月的最后一天</li><li>如果dayValue被设置为负数，日期会设置为上个月最后一天往前数这个负数绝对值天数后的日期。-1会设置为上月最后一天的前一天</li></ul></li></ul></li></ul><br>",2),Ue={id:"date-prototype-sethours",tabindex:"-1"},Ie=e("a",{class:"header-anchor",href:"#date-prototype-sethours","aria-hidden":"true"},"#",-1),qe={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setHours",target:"_blank",rel:"noopener noreferrer"},Ye=e("ul",null,[e("li",null,"描述：根据本地时间为一个日期对象设置小时数，返回从1970-01-01 00:00:00 UTC 到更新后的 日期 对象实例所表示时间的毫秒数"),e("li",null,[t("语法："),e("code",null,"dateObj.setHours(hoursValue[, minutesValue[, secondsValue[, msValue]]])")])],-1),He=e("br",null,null,-1),Fe={id:"date-prototype-setminutes",tabindex:"-1"},Ee=e("a",{class:"header-anchor",href:"#date-prototype-setminutes","aria-hidden":"true"},"#",-1),Ae={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMinutes",target:"_blank",rel:"noopener noreferrer"},Ze=e("ul",null,[e("li",null,"描述：根据本地时间为一个日期对象设置分钟数"),e("li",null,[t("语法："),e("code",null,"dateObj.setMinutes(minutesValue[, secondsValue[, msValue]])")])],-1),Be=e("br",null,null,-1),Le={id:"date-prototype-setseconds",tabindex:"-1"},Qe=e("a",{class:"header-anchor",href:"#date-prototype-setseconds","aria-hidden":"true"},"#",-1),$e={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setSeconds",target:"_blank",rel:"noopener noreferrer"},Ke=e("ul",null,[e("li",null,"描述：根据本地时间设置一个日期对象的秒数"),e("li",null,[t("语法："),e("code",null,"dateObj.setSeconds(secondsValue[, msValue])")])],-1),Pe=e("br",null,null,-1),Xe={id:"date-prototype-setmilliseconds",tabindex:"-1"},et=e("a",{class:"header-anchor",href:"#date-prototype-setmilliseconds","aria-hidden":"true"},"#",-1),tt={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/setMilliseconds",target:"_blank",rel:"noopener noreferrer"},nt=e("ul",null,[e("li",null,"描述：根据本地时间设置一个日期对象的豪秒数"),e("li",null,[t("语法："),e("code",null,"dateObj.setMilliseconds(millisecondsValue)")])],-1),at=e("br",null,null,-1),st={id:"date-prototype-tostring",tabindex:"-1"},ot=e("a",{class:"header-anchor",href:"#date-prototype-tostring","aria-hidden":"true"},"#",-1),lt={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toString",target:"_blank",rel:"noopener noreferrer"},rt=s(`<ul><li>描述：返回一个字符串，表示该 Date 对象。</li><li>语法：<code>dateObj.toString()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sun Aug 16 2020 18:35:19 GMT+0800 (中国标准时间)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,3),ct={id:"date-prototype-todatestring",tabindex:"-1"},it=e("a",{class:"header-anchor",href:"#date-prototype-todatestring","aria-hidden":"true"},"#",-1),pt={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toDateString",target:"_blank",rel:"noopener noreferrer"},dt=s(`<ul><li>描述：以美式英语和人类易读的形式返回一个日期对象日期部分的字符串</li><li>语法：<code>dateObj.toDateString()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sun Aug 16 2020</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,3),ut={id:"date-prototype-toutcstring",tabindex:"-1"},ht=e("a",{class:"header-anchor",href:"#date-prototype-toutcstring","aria-hidden":"true"},"#",-1),_t={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString",target:"_blank",rel:"noopener noreferrer"},bt=s(`<ul><li>描述：以美式英语和人类易读的形式返回一个日期对象日期部分的字符串</li><li>语法：<code>dateObj.toUTCString()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toUTCString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Sun, 16 Aug 2020 10:37:50 GMT</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,3),kt={id:"date-prototype-toisostring",tabindex:"-1"},gt=e("a",{class:"header-anchor",href:"#date-prototype-toisostring","aria-hidden":"true"},"#",-1),mt={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString",target:"_blank",rel:"noopener noreferrer"},vt=s(`<ul><li>描述：返回一个 ISO（ISO 8601 Extended Format）格式的字符串： YYYY-MM-DDTHH:mm:ss.sssZ。时区总是UTC（协调世界时），加一个后缀“Z”标识</li><li>语法：<code>dateObj.toISOString()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2020-08-16T10:38:42.445Z</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br>`,3),ft={id:"date-prototype-tojson",tabindex:"-1"},yt=e("a",{class:"header-anchor",href:"#date-prototype-tojson","aria-hidden":"true"},"#",-1),Dt={href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date/toJSON",target:"_blank",rel:"noopener noreferrer"},jt=s(`<ul><li>描述：方法返回 Date 对象的字符串形式（内部调用了 <code>toISOString</code> ）</li><li>语法：<code>dateObj.toJSON()</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2020-08-16T10:39:28.808Z</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function St(Ot,zt){const n=i("ExternalLinkIcon");return l(),r("div",null,[c(" more "),e("p",null,[e("a",d,[t("Date"),a(n)])]),u,e("h2",h,[_,t(),e("a",b,[t("Date.now()"),a(n)])]),k,g,e("h2",m,[v,t(),e("a",f,[t("Date.UTC()"),a(n)])]),y,D,e("h2",j,[S,t(),e("a",O,[t("Date.parse()"),a(n)])]),z,x,e("h2",C,[w,t(),e("a",N,[t("Date.prototype.getTime()"),a(n)])]),J,T,e("h2",G,[R,t(),e("a",W,[t("Date.prototype.getFullYear()"),a(n)])]),V,M,e("h2",U,[I,t(),e("a",q,[t("Date.prototype.getMonth()"),a(n)])]),Y,H,e("h2",F,[E,t(),e("a",A,[t("Date.prototype.getDate()"),a(n)])]),Z,B,e("h2",L,[Q,t(),e("a",$,[t("Date.prototype.getDay()"),a(n)])]),K,P,e("h2",X,[ee,t(),e("a",te,[t("Date.prototype.getHours()"),a(n)])]),ne,ae,e("h2",se,[oe,t(),e("a",le,[t("Date.prototype.getMinutes()"),a(n)])]),re,ce,e("h2",ie,[pe,t(),e("a",de,[t("Date.prototype.getSeconds()"),a(n)])]),ue,he,e("h2",_e,[be,t(),e("a",ke,[t("Date.prototype.getMilliseconds()"),a(n)])]),ge,me,e("h2",ve,[fe,t(),e("a",ye,[t("Date.prototype.setTime()"),a(n)])]),De,je,e("h2",Se,[Oe,t(),e("a",ze,[t("Date.prototype.setFullYear()"),a(n)])]),xe,Ce,e("h2",we,[Ne,t(),e("a",Je,[t("Date.prototype.setMonth()"),a(n)])]),Te,Ge,e("h2",Re,[We,t(),e("a",Ve,[t("Date.prototype.setDate()"),a(n)])]),Me,e("h2",Ue,[Ie,t(),e("a",qe,[t("Date.prototype.setHours()"),a(n)])]),Ye,He,e("h2",Fe,[Ee,t(),e("a",Ae,[t("Date.prototype.setMinutes()"),a(n)])]),Ze,Be,e("h2",Le,[Qe,t(),e("a",$e,[t("Date.prototype.setSeconds()"),a(n)])]),Ke,Pe,e("h2",Xe,[et,t(),e("a",tt,[t("Date.prototype.setMilliseconds()"),a(n)])]),nt,at,e("h2",st,[ot,t(),e("a",lt,[t("Date.prototype.toString()"),a(n)])]),rt,e("h2",ct,[it,t(),e("a",pt,[t("Date.prototype.toDateString()"),a(n)])]),dt,e("h2",ut,[ht,t(),e("a",_t,[t("Date.prototype.toUTCString()"),a(n)])]),bt,e("h2",kt,[gt,t(),e("a",mt,[t("Date.prototype.toISOString()"),a(n)])]),vt,e("h2",ft,[yt,t(),e("a",Dt,[t("Date.prototype.toJSON()"),a(n)])]),jt])}const Ct=o(p,[["render",St],["__file","08.Date.html.vue"]]);export{Ct as default};
