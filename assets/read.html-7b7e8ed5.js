const e=JSON.parse(`{"key":"v-915e9bdc","path":"/technology/bash/read.html","title":"read 命令","lang":"zh-CN","frontmatter":{"title":"read 命令","icon":"article","category":"bash","article":false,"tag":["bash"],"copyright":"Copyright by 阮一峰","description":"用法 有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用read命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。 read命令的格式如下。 read [-options] [variable...]","head":[["meta",{"property":"og:url","content":"https://codemake.fun/technology/bash/read.html"}],["meta",{"property":"og:site_name","content":"Yang's Blog"}],["meta",{"property":"og:title","content":"read 命令"}],["meta",{"property":"og:description","content":"用法 有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用read命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。 read命令的格式如下。 read [-options] [variable...]"}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-11T09:12:15.000Z"}],["meta",{"property":"article:tag","content":"bash"}],["meta",{"property":"article:modified_time","content":"2023-01-11T09:12:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"read 命令\\",\\"description\\":\\"用法 有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用read命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。 read命令的格式如下。 read [-options] [variable...]\\"}"]]},"headers":[{"level":2,"title":"用法","slug":"用法","link":"#用法","children":[]},{"level":2,"title":"参数","slug":"参数","link":"#参数","children":[]},{"level":2,"title":"IFS 变量","slug":"ifs-变量","link":"#ifs-变量","children":[]}],"git":{"createdTime":1673428335000,"updatedTime":1673428335000,"contributors":[{"name":"sunzhenyang","email":"874530670@qq.com","commits":1}]},"readingTime":{"minutes":5.15,"words":1544},"filePathRelative":"technology/bash/read.md","localizedDate":"2023年1月11日","excerpt":"<h2> 用法</h2>\\n<p>有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用<code>read</code>命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。</p>\\n<p><code>read</code>命令的格式如下。</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token builtin class-name\\">read</span> <span class=\\"token punctuation\\">[</span>-options<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span>variable<span class=\\"token punctuation\\">..</span>.<span class=\\"token punctuation\\">]</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{e as data};
